{"ast":null,"code":"import _objectSpread from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/src/containers/Search/Search.tsx\";\n\nimport React, { useContext, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport './Search.scss';\nimport { classModifier } from \"../../utils\";\nimport { ROUTES } from \"../../config/constants\";\nimport API from \"../../api/api\";\n\nvar Search = function Search() {\n  var location = useLocation();\n  var history = useHistory();\n\n  var _useContext = useContext(MultiLangContext),\n      words = _useContext.words;\n\n  var _useState = useState({\n    value: '',\n    link: '#'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchState = _useState2[0],\n      setSearchState = _useState2[1];\n\n  var searchButton = function searchButton(inputValue) {\n    if (inputValue.length === 64) {\n      API.getTransaction(inputValue).then(function (res) {\n        history.push(ROUTES.setTxRoute(inputValue));\n      }).catch(function (err) {\n        console.log(err);\n        history.push('/not-found');\n      });\n    } else if (inputValue.length === 40) {\n      API.getAddress(inputValue, 1).then(function (res) {\n        history.push(ROUTES.setAddressRoute(inputValue));\n      }).catch(function (err) {\n        console.log(err);\n        history.push('/not-found');\n      });\n    } else {\n      API.getBlock(inputValue).then(function (res) {\n        history.push(ROUTES.setBlockRoute(inputValue));\n      }).catch(function (err) {\n        console.log(err);\n        history.push('/not-found');\n      });\n    }\n  };\n\n  function handleChange(e) {\n    setSearchState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        value: e.target.value.split(' ').join('')\n      });\n    });\n  } // function handleKeyPress(e: any) {\n  //   if (e.key === 'Enter') {\n  //     history.push(searchState.link)\n  //   }\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classModifier('search', [location.pathname === '/' ? 'main' : 'all']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search__container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-input__container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search-input\",\n    type: \"text\",\n    onChange: handleChange // onKeyPress={handleKeyPress}\n    ,\n    value: searchState.value,\n    placeholder: words.searchPlaceholder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"search-input__button\",\n    onClick: function onClick() {\n      return searchButton(searchState.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, words.find)))));\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/containers/Search/Search.tsx"],"names":["React","useContext","useState","useLocation","useHistory","MultiLangContext","classModifier","ROUTES","API","Search","location","history","words","value","link","searchState","setSearchState","searchButton","inputValue","length","getTransaction","then","res","push","setTxRoute","catch","err","console","log","getAddress","setAddressRoute","getBlock","setBlockRoute","handleChange","e","prev","target","split","join","pathname","searchPlaceholder","find"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useLocation, useHistory } from 'react-router-dom';\n\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\n\nimport './Search.scss';\nimport { classModifier } from \"../../utils\";\nimport { ROUTES } from \"../../config/constants\";\nimport API from \"../../api/api\";\n\n\nconst Search = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const {words} = useContext(MultiLangContext);\n\n  const [searchState, setSearchState] = useState<{\n    value: string;\n    link: string;\n  }>({\n    value: '',\n    link: '#',\n  });\n\n  const searchButton = (inputValue: string) => {\n\n    if (inputValue.length === 64) {\n      API.getTransaction(inputValue)\n        .then(res => {\n          history.push(ROUTES.setTxRoute(inputValue))\n        })\n        .catch(err => {\n          console.log(err)\n          history.push('/not-found')\n        });\n    } else if (inputValue.length === 40) {\n      API.getAddress(inputValue, 1)\n        .then(res => {\n          history.push(ROUTES.setAddressRoute(inputValue))\n        })\n        .catch(err => {\n          console.log(err)\n          history.push('/not-found')\n        });\n    } else {\n      API.getBlock(inputValue)\n        .then(res => {\n          history.push(ROUTES.setBlockRoute(inputValue))\n        })\n        .catch(err => {\n          console.log(err);\n          history.push('/not-found')\n        });\n    }\n  }\n\n\n  function handleChange(e: any) {\n\n    setSearchState(prev => ({\n      ...prev,\n      value: e.target.value.split(' ').join(''),\n    }));\n  }\n\n  // function handleKeyPress(e: any) {\n  //   if (e.key === 'Enter') {\n  //     history.push(searchState.link)\n  //   }\n  // }\n\n\n  return (\n    <div className={classModifier('search',\n      [(location.pathname === '/') ? 'main' : 'all'],\n    )}>\n      <div className=\"search__container\">\n        <div className=\"search-input__container\">\n          <input\n            className='search-input'\n            type=\"text\"\n            onChange={handleChange}\n            // onKeyPress={handleKeyPress}\n            value={searchState.value}\n            placeholder={words.searchPlaceholder}\n          />\n\n          <button\n            className='search-input__button'\n            onClick={() => searchButton(searchState.value)}\n          >\n            <span>{words.find}</span>\n          </button>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}