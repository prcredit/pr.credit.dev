{"ast":null,"code":"import _objectSpread from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/src/scenes/AddressPage/AddressPage.tsx\";\n\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport API from '../../api/api';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport { ROUTES } from '../../config/constants';\nimport { classModifier } from '../../utils';\nimport Spinner from 'src/components/Spinner';\nimport AmountFormat from '../../components/AmountFormat/AmountFormat';\nimport CopyItem from '../../components/CopyItem/CopyItem';\nimport Tooltip from '../../components/Tooltip/Tooltip';\nimport Pagination from '../../components/Pagination/Pagination';\nimport './AddressPage.scss';\n\nvar AddressPage = function AddressPage() {\n  var history = useHistory();\n\n  var _useContext = useContext(MultiLangContext),\n      selectedLang = _useContext.selectedLang,\n      words = _useContext.words;\n\n  var match = useRouteMatch('/address/:id');\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openedTrans = _useState4[0],\n      setOpenedTrans = _useState4[1];\n\n  var _useState5 = useState({\n    dataList: [],\n    address: '',\n    balance: 0,\n    currentPage: 1,\n    last_page: 1,\n    total_items: 50,\n    limit: 50\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addressState = _useState6[0],\n      setAddressState = _useState6[1];\n\n  var onChangePage = useCallback(function (page) {\n    setAddressState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        currentPage: page\n      });\n    });\n  }, []);\n  useEffect(function () {\n    setLoading(false);\n    API.getAddress(match === null || match === void 0 ? void 0 : match.params.id, addressState.currentPage).then(function (res) {\n      // console.log(res.data)\n      setAddressState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), res.data);\n      });\n      setLoading(true);\n    }).catch(function (err) {\n      console.log(err);\n      history.push('/not-found');\n    }); // eslint-disable-next-line\n  }, [addressState.currentPage, match === null || match === void 0 ? void 0 : match.params.id]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section section-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, words.addressDetails), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, words.address, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text break-all copy__text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, addressState.address), /*#__PURE__*/React.createElement(CopyItem, {\n    name: words.address,\n    value: addressState.address,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, words.balance, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"amount\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(AmountFormat, {\n    type: \"snt\",\n    amount: addressState.balance,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }), ' ', \"SNT\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"amount--dollar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AmountFormat, {\n    type: \"usd\",\n    amount: addressState.balance,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  }))))), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, words.transactionsList), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"transactions__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"transactions-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 19\n    }\n  }, words.txnHash), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, words.age), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, words.from), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, words.to), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, words.type), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, words.amount, \" (SNT)\")), addressState.dataList.map(function (trans, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classModifier('transaction', [openedTrans === trans.hash && 'active', addressState.address !== trans.addressTo ? 'out' : 'in']),\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell-mobile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell-mobile__header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell-mobile__title-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link link--ellipsis\",\n      to: ROUTES.setTxRoute(trans.hash),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 29\n      }\n    }, trans.hash), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: trans.timestamp,\n      utc: true,\n      locale: selectedLang,\n      fromNow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"transaction-cell-mobile__amount\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"snt\",\n      amount: trans.amountTo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }), ' ', \"SNT\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"show-more\",\n      onClick: function onClick() {\n        return setOpenedTrans(openedTrans === trans.hash ? null : trans.hash);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm tooltip__container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, words.hash, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link link--ellipsis\",\n      to: ROUTES.setTxRoute(trans.hash),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, trans.hash), /*#__PURE__*/React.createElement(Tooltip, {\n      text: trans.hash,\n      type: \"hash\",\n      media: \"desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm transaction-cell-mobile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, words.block, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link\",\n      to: ROUTES.setBlockRoute(trans.block),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, trans.block)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text tooltip__container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: trans.timestamp,\n      utc: true,\n      locale: selectedLang,\n      fromNow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      text: /*#__PURE__*/React.createElement(Moment, {\n        date: trans.timestamp,\n        utc: true,\n        locale: selectedLang,\n        format: \"MMMM-DD-YYYY HH:mm:ss +UTC\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 31\n        }\n      }),\n      type: \"timestamp\",\n      media: \"desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm transaction-cell-mobile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }, words.age, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: trans.timestamp,\n      utc: true,\n      locale: selectedLang,\n      format: \"MMMM-DD-YYYY HH:mm:ss +UTC\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm tooltip__container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, words.from, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link link--ellipsis transaction-cell--link-in\",\n      to: ROUTES.setAddressRoute(trans.addressFrom),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, trans.addressFrom), /*#__PURE__*/React.createElement(Tooltip, {\n      text: trans.addressFrom,\n      type: \"hash\",\n      media: \"desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm tooltip__container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 25\n      }\n    }, words.to, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link link--ellipsis transaction-cell--link-out\",\n      to: ROUTES.setAddressRoute(trans.addressTo),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }\n    }, trans.addressTo), /*#__PURE__*/React.createElement(Tooltip, {\n      text: trans.addressTo,\n      type: \"hash\",\n      media: \"desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm vertical-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    }, words.type, \":\"), addressState.address !== trans.addressTo ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"status status--type status--failed\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 27\n      }\n    }, words.out) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"status status--type status--completed\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 27\n      }\n    }, words.in)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, addressState.address !== trans.addressTo ? /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"snt\",\n      amount: trans.amountFrom,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"snt\",\n      amount: trans.amountTo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm transaction-cell-mobile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 25\n      }\n    }, words.fee, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"snt\",\n      amount: trans.fee,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 27\n      }\n    }), \" SNT\")));\n  })), /*#__PURE__*/React.createElement(Pagination, {\n    pageCount: addressState.last_page,\n    onChange: onChangePage,\n    forcePage: addressState.currentPage - 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"button button--home\",\n    to: ROUTES.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 17\n    }\n  }, words.backToMain))))));\n};\n\nexport default AddressPage;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/scenes/AddressPage/AddressPage.tsx"],"names":["React","useContext","useEffect","useState","useCallback","NavLink","useHistory","useRouteMatch","Moment","API","MultiLangContext","ROUTES","classModifier","Spinner","AmountFormat","CopyItem","Tooltip","Pagination","AddressPage","history","selectedLang","words","match","loading","setLoading","openedTrans","setOpenedTrans","dataList","address","balance","currentPage","last_page","total_items","limit","addressState","setAddressState","onChangePage","page","prevState","getAddress","params","id","then","res","data","catch","err","console","log","push","addressDetails","transactionsList","txnHash","age","from","to","type","amount","map","trans","index","hash","addressTo","setTxRoute","timestamp","amountTo","block","setBlockRoute","setAddressRoute","addressFrom","out","in","amountFrom","fee","main","backToMain"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport { ROUTES } from '../../config/constants';\nimport { classModifier } from '../../utils';\n\nimport { IMatchParams, ITransaction } from '../../interfaces/interfaces';\n\nimport Spinner from 'src/components/Spinner';\nimport AmountFormat from '../../components/AmountFormat/AmountFormat';\nimport CopyItem from '../../components/CopyItem/CopyItem';\nimport Tooltip from '../../components/Tooltip/Tooltip';\nimport Pagination from '../../components/Pagination/Pagination';\nimport './AddressPage.scss';\n\nconst AddressPage = () => {\n  const history = useHistory();\n  const { selectedLang, words } = useContext(MultiLangContext);\n\n  const match = useRouteMatch<IMatchParams>('/address/:id');\n  const [loading, setLoading] = useState(false);\n  const [openedTrans, setOpenedTrans] = useState();\n  const [addressState, setAddressState] = useState<{\n    dataList: ITransaction[];\n    address: string;\n    balance: number;\n    currentPage: number;\n    last_page: number;\n    total_items: number;\n    limit: number;\n  }>({\n    dataList: [],\n    address: '',\n    balance: 0,\n    currentPage: 1,\n    last_page: 1,\n    total_items: 50,\n    limit: 50,\n  });\n\n  const onChangePage = useCallback((page) => {\n    setAddressState((prevState) => ({\n      ...prevState,\n      currentPage: page,\n    }));\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getAddress(match?.params.id, addressState.currentPage)\n      .then((res) => {\n        // console.log(res.data)\n\n        setAddressState((prevState) => ({\n          ...prevState,\n          ...res.data,\n        }));\n        setLoading(true);\n      })\n      .catch((err) => {\n        console.log(err);\n\n        history.push('/not-found');\n      });\n\n    // eslint-disable-next-line\n  }, [addressState.currentPage, match?.params.id]);\n\n  return (\n    <>\n      <section className='section section-address'>\n        <div className='container'>\n          {!loading ? (\n            <Spinner />\n          ) : (\n            <>\n              <h2 className='title'>{words.addressDetails}</h2>\n\n              <div className='details__block'>\n                <div className='detail'>\n                  <h6 className='detail__name'>{words.address}:</h6>\n\n                  <div className='copy__block'>\n                    <span className='text break-all copy__text'>\n                      {addressState.address}\n                    </span>\n\n                    <CopyItem\n                      name={words.address}\n                      value={addressState.address}\n                    />\n                  </div>\n                </div>\n\n                <div className='detail'>\n                  <h6 className='detail__name'>{words.balance}:</h6>\n\n                  <span className='amount'>\n                    <AmountFormat type='snt' amount={addressState.balance} />{' '}\n                    SNT\n                    <span className='amount--dollar'>\n                      <AmountFormat type='usd' amount={addressState.balance} />\n                    </span>\n                  </span>\n                </div>\n              </div>\n\n              <h2 className='title'>{words.transactionsList}</h2>\n\n              <div className='transactions__block'>\n                <div className='transactions-header'>\n                  <h6>{words.txnHash}</h6>\n\n                  <h6>{words.age}</h6>\n\n                  <h6>{words.from}</h6>\n\n                  <h6>{words.to}</h6>\n\n                  <h6>{words.type}</h6>\n\n                  <h6>{words.amount} (SNT)</h6>\n                </div>\n\n                {addressState.dataList.map((trans: any, index: number) => {\n                  return (\n                    <div\n                      className={classModifier('transaction', [\n                        openedTrans === trans.hash && 'active',\n                        addressState.address !== trans.addressTo ? 'out' : 'in',\n                      ])}\n                      key={index}\n                    >\n                      <div className='transaction-cell-mobile'>\n                        <div className='transaction-cell-mobile__header'>\n                          <div className='transaction-cell-mobile__title-block'>\n                            <NavLink\n                              className='link link--ellipsis'\n                              to={ROUTES.setTxRoute(trans.hash)}\n                            >\n                              {trans.hash}\n                            </NavLink>\n\n                            <span className='text'>\n                              <Moment\n                                date={trans.timestamp}\n                                utc\n                                locale={selectedLang}\n                                fromNow\n                              />\n                            </span>\n                          </div>\n\n                          <span className='transaction-cell-mobile__amount'>\n                            <AmountFormat type='snt' amount={trans.amountTo} />{' '}\n                            SNT\n                          </span>\n\n                          <button\n                            className='show-more'\n                            onClick={() =>\n                              setOpenedTrans(\n                                openedTrans === trans.hash ? null : trans.hash\n                              )\n                            }\n                          />\n                        </div>\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--sm tooltip__container'>\n                        <h6 className='transaction-cell__name'>\n                          {words.hash}:\n                        </h6>\n\n                        <NavLink\n                          className='link link--ellipsis'\n                          to={ROUTES.setTxRoute(trans.hash)}\n                        >\n                          {trans.hash}\n                        </NavLink>\n\n                        <Tooltip\n                          text={trans.hash}\n                          type='hash'\n                          media='desktop'\n                        />\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--sm transaction-cell-mobile'>\n                        <h6 className='transaction-cell__name'>\n                          {words.block}:\n                        </h6>\n\n                        <NavLink\n                          className='link'\n                          to={ROUTES.setBlockRoute(trans.block)}\n                        >\n                          {trans.block}\n                        </NavLink>\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--desktop'>\n                        <span className='text tooltip__container'>\n                          <Moment\n                            date={trans.timestamp}\n                            utc\n                            locale={selectedLang}\n                            fromNow\n                          />\n\n                          <Tooltip\n                            text={\n                              <Moment\n                                date={trans.timestamp}\n                                utc\n                                locale={selectedLang}\n                                format='MMMM-DD-YYYY HH:mm:ss +UTC'\n                              />\n                            }\n                            type='timestamp'\n                            media='desktop'\n                          />\n                        </span>\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--sm transaction-cell-mobile'>\n                        <h6 className='transaction-cell__name'>{words.age}:</h6>\n\n                        <span className='text'>\n                          <Moment\n                            date={trans.timestamp}\n                            utc\n                            locale={selectedLang}\n                            format='MMMM-DD-YYYY HH:mm:ss +UTC'\n                          />\n                        </span>\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--sm tooltip__container'>\n                        <h6 className='transaction-cell__name'>\n                          {words.from}:\n                        </h6>\n\n                        <NavLink\n                          className='link link--ellipsis transaction-cell--link-in'\n                          to={ROUTES.setAddressRoute(trans.addressFrom)}\n                        >\n                          {trans.addressFrom}\n                        </NavLink>\n\n                        <Tooltip\n                          text={trans.addressFrom}\n                          type='hash'\n                          media='desktop'\n                        />\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--sm tooltip__container'>\n                        <h6 className='transaction-cell__name'>{words.to}:</h6>\n\n                        <NavLink\n                          className='link link--ellipsis transaction-cell--link-out'\n                          to={ROUTES.setAddressRoute(trans.addressTo)}\n                        >\n                          {trans.addressTo}\n                        </NavLink>\n\n                        <Tooltip\n                          text={trans.addressTo}\n                          type='hash'\n                          media='desktop'\n                        />\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--sm vertical-center'>\n                        <h6 className='transaction-cell__name'>\n                          {words.type}:\n                        </h6>\n\n                        {addressState.address !== trans.addressTo ? (\n                          <span className='status status--type status--failed'>\n                            {words.out}\n                          </span>\n                        ) : (\n                          <span className='status status--type status--completed'>\n                            {words.in}\n                          </span>\n                        )}\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--desktop'>\n                        <p className='text'>\n                          {addressState.address !== trans.addressTo ? (\n                            <AmountFormat\n                              type='snt'\n                              amount={trans.amountFrom}\n                            />\n                          ) : (\n                            <AmountFormat type='snt' amount={trans.amountTo} />\n                          )}\n                        </p>\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--sm transaction-cell-mobile'>\n                        <h6 className='transaction-cell__name'>{words.fee}:</h6>\n\n                        <span className='text'>\n                          <AmountFormat type='snt' amount={trans.fee} /> SNT\n                        </span>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n\n              <Pagination\n                pageCount={addressState.last_page}\n                onChange={onChangePage}\n                forcePage={addressState.currentPage - 1}\n              />\n\n              <NavLink className='button button--home' to={ROUTES.main}>\n                <span>{words.backToMain}</span>\n              </NavLink>\n            </>\n          )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default AddressPage;\n"]},"metadata":{},"sourceType":"module"}