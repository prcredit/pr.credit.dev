{"ast":null,"code":"import _objectSpread from\"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import{NavLink,useHistory,useRouteMatch}from\"react-router-dom\";import Moment from'react-moment';import API from'../../api/api';import{MultiLangContext}from\"../../context/MultiLang/MultiLang\";import{ROUTES}from\"../../config/constants\";import Spinner from'../../components/Spinner';import AmountFormat from\"../../components/AmountFormat/AmountFormat\";import CopyItem from\"../../components/CopyItem/CopyItem\";import'./TxPage.scss';var TxPage=function TxPage(){var history=useHistory();var _useContext=useContext(MultiLangContext),words=_useContext.words,selectedLang=_useContext.selectedLang;var match=useRouteMatch('/tx/:id');var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState({list:{},status:\"\"}),_useState4=_slicedToArray(_useState3,2),txState=_useState4[0],setTxState=_useState4[1];useEffect(function(){setLoading(false);API.getTransaction(match===null||match===void 0?void 0:match.params.id).then(function(res){// console.log(res.data)\nvar status;status=res.data.pending?'processing':res.data.rejected?'failed':'completed';setTxState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{list:res.data,status:status});});setLoading(true);}).catch(function(err){console.log(err);history.push('/not-found');});// eslint-disable-next-line\n},[match===null||match===void 0?void 0:match.params.id]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"section\",{className:\"section details\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},!loading?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},words.txDetails),/*#__PURE__*/React.createElement(\"div\",{className:\"details__block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.txnHash,\":\"),/*#__PURE__*/React.createElement(\"div\",{className:\"copy__block\"},/*#__PURE__*/React.createElement(\"span\",{className:\"text break-all copy__text\"},txState.list.hash),/*#__PURE__*/React.createElement(CopyItem,{name:words.hash,value:txState.list.hash}))),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.status,\":\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"status status--\".concat(txState.status)},words.statusTx[txState.status]))),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.block,\":\"),/*#__PURE__*/React.createElement(NavLink,{className:\"link\",to:ROUTES.setBlockRoute(txState.list.block)},txState.list.block)),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.timestamp,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"text\"},/*#__PURE__*/React.createElement(Moment,{date:txState.list.timestamp,utc:true,locale:selectedLang,fromNow:true}),/*#__PURE__*/React.createElement(Moment,{date:txState.list.timestamp,utc:true,locale:selectedLang,format:\" (MMMM-DD-YYYY HH:mm:ss +UTC)\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.from,\":\"),/*#__PURE__*/React.createElement(NavLink,{className:\"link\",to:ROUTES.setAddressRoute(txState.list.outputs[0].to)},txState.list.outputs[0].to)),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.to,\":\"),/*#__PURE__*/React.createElement(NavLink,{className:\"link\",to:ROUTES.setAddressRoute(txState.list.outputs[1].to)},txState.list.outputs[1].to)),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.fee,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"text\"},txState.list.outputs[2].amount.toLocaleString('en-EN'),\" SNT\")),/*#__PURE__*/React.createElement(\"div\",{className:\"detail vertical-center\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.value,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"amount\"},/*#__PURE__*/React.createElement(AmountFormat,{type:\"snt\",amount:txState.list.outputs[1].amount}),\" SNT\",/*#__PURE__*/React.createElement(\"span\",{className:\"amount--dollar\"},/*#__PURE__*/React.createElement(AmountFormat,{type:\"usd\",amount:txState.list.outputs[1].amount}))))),/*#__PURE__*/React.createElement(NavLink,{className:\"button button--home\",to:ROUTES.main},/*#__PURE__*/React.createElement(\"span\",null,words.backToMain))))));};export default TxPage;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/scenes/TxPage/TxPage.tsx"],"names":["React","useContext","useEffect","useState","NavLink","useHistory","useRouteMatch","Moment","API","MultiLangContext","ROUTES","Spinner","AmountFormat","CopyItem","TxPage","history","words","selectedLang","match","loading","setLoading","list","status","txState","setTxState","getTransaction","params","id","then","res","data","pending","rejected","prevState","catch","err","console","log","push","txDetails","txnHash","hash","statusTx","block","setBlockRoute","timestamp","from","setAddressRoute","outputs","to","fee","amount","toLocaleString","value","main","backToMain"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\n\nimport { IMatchParams } from \"../../interfaces/interfaces\";\n\nimport Spinner from '../../components/Spinner';\nimport AmountFormat from \"../../components/AmountFormat/AmountFormat\";\nimport CopyItem from \"../../components/CopyItem/CopyItem\";\nimport './TxPage.scss';\n\n\nconst TxPage = () => {\n  const history = useHistory();\n  const {words, selectedLang} = useContext(MultiLangContext);\n\n  const match = useRouteMatch<IMatchParams>('/tx/:id');\n  const [loading, setLoading] = useState(false);\n  const [txState, setTxState] = useState<{\n    list: any; // TODO\n    status: string,\n  }>({\n    list: {},\n    status: \"\",\n  });\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getTransaction(match?.params.id)\n      .then(res => {\n        // console.log(res.data)\n\n        let status: 'processing' | 'failed' | 'completed';\n        status = (res.data.pending)\n          ? 'processing'\n          : (res.data.rejected)\n            ? 'failed'\n            : 'completed';\n\n        setTxState(prevState => ({\n          ...prevState,\n          list: res.data,\n          status: status,\n        }));\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err)\n\n        history.push('/not-found')\n      });\n    // eslint-disable-next-line\n  }, [match?.params.id]);\n\n\n  return (\n    <>\n      <section className=\"section details\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.txDetails}</h2>\n\n                <div className=\"details__block\">\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.txnHash}:</h6>\n\n                    <div className=\"copy__block\">\n                      <span className='text break-all copy__text'>{txState.list.hash}</span>\n\n                      <CopyItem\n                        name={words.hash}\n                        value={txState.list.hash}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.status}:</h6>\n\n                    <div>\n                      <span className={`status status--${txState.status}`}>\n                        {(words.statusTx as any)[txState.status]}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.block}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setBlockRoute(txState.list.block)}>\n                      {txState.list.block}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.timestamp}:</h6>\n\n                    <span className=\"text\">\n                      <Moment date={txState.list.timestamp}\n                              utc\n                              locale={selectedLang}\n                              fromNow\n                      />\n\n                      <Moment date={txState.list.timestamp}\n                              utc\n                              locale={selectedLang}\n                              format=\" (MMMM-DD-YYYY HH:mm:ss +UTC)\"\n                      />\n                    </span>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.from}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setAddressRoute(txState.list.outputs[0].to)}>\n                      {txState.list.outputs[0].to}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.to}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setAddressRoute(txState.list.outputs[1].to)}>\n                      {txState.list.outputs[1].to}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.fee}:</h6>\n\n                    <span className=\"text\">\n                      {(txState.list.outputs[2].amount).toLocaleString('en-EN')} SNT\n                    </span>\n                  </div>\n\n                  <div className=\"detail vertical-center\">\n                    <h6 className=\"detail__name\">{words.value}:</h6>\n\n                    <span className=\"amount\">\n                      <AmountFormat\n                        type='snt'\n                        amount={txState.list.outputs[1].amount}\n                      /> SNT\n\n                      <span className='amount--dollar'>\n                        <AmountFormat\n                          type='usd'\n                          amount={txState.list.outputs[1].amount}\n                        />\n                      </span>\n                    </span>\n                  </div>\n                </div>\n\n                <NavLink className='button button--home'\n                         to={ROUTES.main}>\n                  <span>{words.backToMain}</span>\n                </NavLink>\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default TxPage;"]},"metadata":{},"sourceType":"module"}