{"ast":null,"code":"import _objectSpread from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/src/containers/Search/Search.tsx\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useLocation, useHistory } from 'react-router-dom';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport './Search.scss';\nimport { classModifier } from \"../../utils\";\nimport { ROUTES } from \"../../config/constants\";\n\nvar Search = function Search() {\n  var location = useLocation();\n  var history = useHistory();\n\n  var _useContext = useContext(MultiLangContext),\n      words = _useContext.words;\n\n  var _useState = useState({\n    value: '',\n    link: '#'\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchState = _useState2[0],\n      setSearchState = _useState2[1];\n\n  useEffect(function () {\n    console.log(searchState.value.length);\n\n    if (searchState.value.length === 64) {\n      console.log('tx');\n    } else if (searchState.value.length === 40) {\n      console.log('address');\n    } else {\n      console.log('block');\n    } // API.getTransaction(match?.params.id)\n    //   .then(res => {\n    //     // console.log(res.data)\n    //\n    //     setTxState(res.data);\n    //     setLoading(true);\n    //   })\n    //   .catch(err => {\n    //     console.log(err)\n    //\n    //     history.push('/not-found')\n    //   });\n\n  }, [searchState.value]);\n\n  function handleChange(e) {\n    var value = e.target.value.split(' ').join(''); // const link = () => { // TODO find work solution with switch/case\n    //   switch (value.length) {\n    //     case 64:\n    //       return ROUTES.setTxRoute(value);\n    //     case 40:\n    //       return ROUTES.setAddressRoute(value)\n    //     default:\n    //       return ROUTES.setBlockRoute(value)\n    //   }\n    // }\n\n    var link = \"\";\n\n    if (value.length === 64) {\n      link = ROUTES.setTxRoute(value);\n    } else if (value.length === 40) {\n      link = ROUTES.setAddressRoute(value);\n    } else {\n      link = ROUTES.setBlockRoute(value);\n    }\n\n    setSearchState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        value: value,\n        link: link\n      });\n    });\n  }\n\n  function handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      history.push(searchState.link);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classModifier('search', [location.pathname === '/' ? 'main' : 'all']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search__container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-input__container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search-input\",\n    type: \"text\",\n    onChange: handleChange,\n    onKeyPress: handleKeyPress,\n    value: searchState.value,\n    placeholder: words.searchPlaceholder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(NavLink, {\n    to: searchState.link,\n    className: \"search-input__button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, words.find)))));\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/containers/Search/Search.tsx"],"names":["React","useContext","useEffect","useState","NavLink","useLocation","useHistory","MultiLangContext","classModifier","ROUTES","Search","location","history","words","value","link","searchState","setSearchState","console","log","length","handleChange","e","target","split","join","setTxRoute","setAddressRoute","setBlockRoute","prev","handleKeyPress","key","push","pathname","searchPlaceholder","find"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useLocation, useHistory } from 'react-router-dom';\n\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\n\nimport './Search.scss';\nimport { classModifier } from \"../../utils\";\nimport { ROUTES } from \"../../config/constants\";\nimport API from \"../../api/api\";\n\n\nconst Search = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const {words} = useContext(MultiLangContext);\n\n  const [searchState, setSearchState] = useState<{\n    value: string;\n    link: string;\n  }>({\n    value: '',\n    link: '#',\n  });\n\n  useEffect(() => {\n\n    console.log(searchState.value.length)\n\n    if (searchState.value.length === 64) {\n      console.log('tx')\n\n    } else if (searchState.value.length === 40) {\n      console.log('address')\n    } else {\n      console.log('block')\n    }\n\n    // API.getTransaction(match?.params.id)\n    //   .then(res => {\n    //     // console.log(res.data)\n    //\n    //     setTxState(res.data);\n    //     setLoading(true);\n    //   })\n    //   .catch(err => {\n    //     console.log(err)\n    //\n    //     history.push('/not-found')\n    //   });\n  }, [searchState.value]);\n\n  function handleChange(e: any) {\n    const value = e.target.value.split(' ').join('');\n\n    // const link = () => { // TODO find work solution with switch/case\n    //   switch (value.length) {\n    //     case 64:\n    //       return ROUTES.setTxRoute(value);\n    //     case 40:\n    //       return ROUTES.setAddressRoute(value)\n    //     default:\n    //       return ROUTES.setBlockRoute(value)\n    //   }\n    // }\n\n    let link = ``;\n    if (value.length === 64) {\n      link = ROUTES.setTxRoute(value)\n    } else if (value.length === 40) {\n      link = ROUTES.setAddressRoute(value)\n    } else {\n      link = ROUTES.setBlockRoute(value)\n    }\n\n    setSearchState(prev => ({\n      ...prev,\n      value,\n      link,\n    }));\n  }\n\n  function handleKeyPress(e: any) {\n    if (e.key === 'Enter') {\n      history.push(searchState.link)\n    }\n  }\n\n\n  return (\n    <div className={classModifier('search',\n      [(location.pathname === '/') ? 'main' : 'all'],\n    )}>\n      <div className=\"search__container\">\n        <div className=\"search-input__container\">\n          <input\n            className='search-input'\n            type=\"text\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n            value={searchState.value}\n            placeholder={words.searchPlaceholder}\n          />\n\n          <NavLink\n            to={searchState.link}\n            className='search-input__button'>\n            <span>{words.find}</span>\n          </NavLink>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}