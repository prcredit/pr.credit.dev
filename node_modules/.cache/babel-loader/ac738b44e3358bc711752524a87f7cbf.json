{"ast":null,"code":"import{combineReducers,compose,createStore,applyMiddleware}from'redux';import thunk from'redux-thunk';import logger from'redux-logger';import userReducer from'../ducks/info';import{ENV}from'../config/api-config';var rootReducer=combineReducers({data:userReducer});var middleware=ENV==='PROD'?[thunk]:[thunk,logger];export default createStore(rootReducer,compose(applyMiddleware.apply(void 0,middleware)));// import { createStore, applyMiddleware, compose } from 'redux';\n//\n// import thunk from 'redux-thunk';\n// import logger from 'redux-logger';\n//\n// import rootReducer from '../reducers';\n//\n//\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(thunk, logger),\n//     // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n//\n// export default store;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/store/index.ts"],"names":["combineReducers","compose","createStore","applyMiddleware","thunk","logger","userReducer","ENV","rootReducer","data","middleware"],"mappings":"AAAA,OACEA,eADF,CAEEC,OAFF,CAGEC,WAHF,CAIEC,eAJF,KAKO,OALP,CAMA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,GAAT,KAAoB,sBAApB,CAGA,GAAMC,CAAAA,WAAW,CAAGR,eAAe,CAAC,CAClCS,IAAI,CAAEH,WAD4B,CAAD,CAAnC,CAGA,GAAMI,CAAAA,UAAU,CAAGH,GAAG,GAAK,MAAR,CACf,CAACH,KAAD,CADe,CAEf,CAACA,KAAD,CAAQC,MAAR,CAFJ,CAOA,cAAeH,CAAAA,WAAW,CACxBM,WADwB,CAExBP,OAAO,CACLE,eAAe,MAAf,QAAmBO,UAAnB,CADK,CAFiB,CAA1B,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\n  combineReducers,\n  compose,\n  createStore,\n  applyMiddleware,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport userReducer from '../ducks/info';\nimport { ENV } from '../config/api-config';\n\n\nconst rootReducer = combineReducers({\n  data: userReducer,\n});\nconst middleware = ENV === 'PROD'\n  ? [thunk]\n  : [thunk, logger];\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\n\nexport default createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(...middleware),\n  ),\n);\n\n\n// import { createStore, applyMiddleware, compose } from 'redux';\n//\n// import thunk from 'redux-thunk';\n// import logger from 'redux-logger';\n//\n// import rootReducer from '../reducers';\n//\n//\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(thunk, logger),\n//     // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n//\n// export default store;"]},"metadata":{},"sourceType":"module"}