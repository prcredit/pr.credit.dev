{"ast":null,"code":"import _slicedToArray from\"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{createContext,useState,useCallback}from'react';import ru from'./words/ru';import en from'./words/en';var words={ru:ru,en:en};var defaultLang=function(){var lsLang=localStorage.getItem('lang');if(!!lsLang){return lsLang;}switch(navigator.language){case'en-US':return'en';case'ru-RU':return'ru';default:return!!navigator.language&&!!words[navigator.language]?navigator.language:'en';}}();var MultiLangContext=createContext({words:words[defaultLang],changeLang:function changeLang(lang){},selectedLang:''});MultiLangContext.displayName='MultiLangContext';var MultiLangProvider=function MultiLangProvider(props){var _useState=useState({selectedLang:defaultLang,words:words[defaultLang]}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var changeLang=useCallback(function(lang){var newWords=words[lang];setState(function(prevState){if(prevState.selectedLang===lang||!newWords){return prevState;}localStorage.setItem('lang',lang);return{selectedLang:lang,words:newWords};});},[]);var value={words:state.words,selectedLang:state.selectedLang,changeLang:changeLang};return/*#__PURE__*/React.createElement(MultiLangContext.Provider,Object.assign({},props,{value:value}));};export{MultiLangContext,MultiLangProvider};","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/context/MultiLang/MultiLang.tsx"],"names":["React","createContext","useState","useCallback","ru","en","words","defaultLang","lsLang","localStorage","getItem","navigator","language","MultiLangContext","changeLang","lang","selectedLang","displayName","MultiLangProvider","props","state","setState","newWords","prevState","setItem","value"],"mappings":"+NAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,QAA/B,CAAyCC,WAAzC,KAA4D,OAA5D,CAEA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CAWA,GAAMC,CAAAA,KAAyB,CAAG,CAChCF,EAAE,CAAFA,EADgC,CAEhCC,EAAE,CAAFA,EAFgC,CAAlC,CAIA,GAAME,CAAAA,WAAmB,CAAI,UAAc,CACzC,GAAMC,CAAAA,MAAM,CAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf,CAEA,GAAI,CAAC,CAACF,MAAN,CAAc,CACZ,MAAOA,CAAAA,MAAP,CACD,CAED,OAAQG,SAAS,CAACC,QAAlB,EACE,IAAK,OAAL,CACE,MAAO,IAAP,CACF,IAAK,OAAL,CACE,MAAO,IAAP,CACF,QACE,MAAO,CAAC,CAACD,SAAS,CAACC,QAAZ,EAAwB,CAAC,CAACN,KAAK,CAACK,SAAS,CAACC,QAAX,CAA/B,CACHD,SAAS,CAACC,QADP,CAEH,IAFJ,CANJ,CAUD,CAjB2B,EAA5B,CAmBA,GAAMC,CAAAA,gBAAgB,CAAGZ,aAAa,CAAkB,CACtDK,KAAK,CAAEA,KAAK,CAACC,WAAD,CAD0C,CAEtDO,UAAU,CAAE,oBAACC,IAAD,CAAkB,CAAG,CAFqB,CAGtDC,YAAY,CAAE,EAHwC,CAAlB,CAAtC,CAMAH,gBAAgB,CAACI,WAAjB,CAA+B,kBAA/B,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAgB,eACdjB,QAAQ,CAAC,CACjCc,YAAY,CAAET,WADmB,CAEjCD,KAAK,CAAEA,KAAK,CAACC,WAAD,CAFqB,CAAD,CADM,wCACjCa,KADiC,eAC1BC,QAD0B,eAMxC,GAAMP,CAAAA,UAAU,CAAGX,WAAW,CAAC,SAACY,IAAD,CAAkB,CAC/C,GAAMO,CAAAA,QAAQ,CAAGhB,KAAK,CAACS,IAAD,CAAtB,CAEAM,QAAQ,CAAC,SAAAE,SAAS,CAAI,CACpB,GAAIA,SAAS,CAACP,YAAV,GAA2BD,IAA3B,EAAmC,CAACO,QAAxC,CAAkD,CAChD,MAAOC,CAAAA,SAAP,CACD,CACDd,YAAY,CAACe,OAAb,CAAqB,MAArB,CAA6BT,IAA7B,EAEA,MAAO,CACLC,YAAY,CAAED,IADT,CAELT,KAAK,CAAEgB,QAFF,CAAP,CAID,CAVO,CAAR,CAWD,CAd6B,CAc3B,EAd2B,CAA9B,CAgBA,GAAMG,CAAAA,KAAsB,CAAG,CAC7BnB,KAAK,CAAEc,KAAK,CAACd,KADgB,CAE7BU,YAAY,CAAEI,KAAK,CAACJ,YAFS,CAG7BF,UAAU,CAAVA,UAH6B,CAA/B,CAMA,mBAAO,oBAAC,gBAAD,CAAkB,QAAlB,kBACDK,KADC,EAEL,KAAK,CAAEM,KAFF,GAAP,CAID,CAhCD,CAkCA,OAASZ,gBAAT,CAA2BK,iBAA3B","sourcesContent":["import React, { createContext, useState, useCallback } from 'react';\n\nimport ru from './words/ru';\nimport en from './words/en';\n\nimport {\n  IAllLanguagesWords,\n  IMultiLangState,\n} from './MultiLang.types';\n\n\nexport type IMultiLangWords = ReturnType<() => typeof en>;\n\n\nconst words: IAllLanguagesWords = {\n  ru,\n  en,\n}\nconst defaultLang: string = ((): string => {\n  const lsLang = localStorage.getItem('lang');\n\n  if (!!lsLang) {\n    return lsLang;\n  }\n\n  switch (navigator.language) {\n    case 'en-US':\n      return 'en';\n    case 'ru-RU':\n      return 'ru';\n    default:\n      return !!navigator.language && !!words[navigator.language]\n        ? navigator.language\n        : 'en';\n  }\n})();\n\nconst MultiLangContext = createContext<IMultiLangState>({\n  words: words[defaultLang],\n  changeLang: (lang: string) => { },\n  selectedLang: '',\n});\n\nMultiLangContext.displayName = 'MultiLangContext';\n\nconst MultiLangProvider = (props: any) => {\n  const [state, setState] = useState({\n    selectedLang: defaultLang,\n    words: words[defaultLang],\n  });\n\n  const changeLang = useCallback((lang: string) => {\n    const newWords = words[lang];\n\n    setState(prevState => {\n      if (prevState.selectedLang === lang || !newWords) {\n        return prevState;\n      }\n      localStorage.setItem('lang', lang);\n\n      return {\n        selectedLang: lang,\n        words: newWords,\n      }\n    });\n  }, []);\n\n  const value: IMultiLangState = {\n    words: state.words,\n    selectedLang: state.selectedLang,\n    changeLang,\n  }\n\n  return <MultiLangContext.Provider\n    {...props}\n    value={value}\n  />\n}\n\nexport { MultiLangContext, MultiLangProvider };"]},"metadata":{},"sourceType":"module"}