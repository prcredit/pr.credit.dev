{"ast":null,"code":"import _slicedToArray from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/src/scenes/TxPage/TxPage.tsx\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\nimport Spinner from '../../components/Spinner';\nimport AmountFormat from \"../../components/AmountFormat/AmountFormat\";\nimport CopyItem from \"../../components/CopyItem/CopyItem\";\nimport './TxPage.scss';\n\nvar TxPage = function TxPage() {\n  var history = useHistory();\n\n  var _useContext = useContext(MultiLangContext),\n      words = _useContext.words,\n      selectedLang = _useContext.selectedLang;\n\n  var match = useRouteMatch('/tx/:id');\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      txState = _React$useState2[0],\n      setTxState = _React$useState2[1];\n\n  useEffect(function () {\n    setLoading(false);\n    API.getTransaction(match === null || match === void 0 ? void 0 : match.params.id).then(function (res) {\n      // console.log(res.data)\n      setTxState(res.data);\n      setLoading(true);\n    }).catch(function (err) {\n      console.log(err);\n      history.push('/not-found');\n    }); // eslint-disable-next-line\n  }, [match === null || match === void 0 ? void 0 : match.params.id]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, words.txDetails), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, words.txnHash, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text break-all copy__text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }\n  }, txState.hash), /*#__PURE__*/React.createElement(CopyItem, {\n    name: words.hash,\n    value: txState.hash,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, words.status, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status status--\".concat(txState.status),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 23\n    }\n  }, words.statusTx[txState.status]))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, words.block, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"link\",\n    to: ROUTES.setBlockRoute(txState.block),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, txState.block)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, words.timestamp, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    date: txState.timestamp,\n    utc: true,\n    locale: selectedLang,\n    fromNow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Moment, {\n    date: txState.timestamp,\n    utc: true,\n    locale: selectedLang,\n    format: \" (MMMM-DD-YYYY HH:mm:ss +UTC)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, words.from, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"link\",\n    to: ROUTES.setAddressRoute(txState.addressFrom),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, txState.addressFrom)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, words.to, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"link\",\n    to: ROUTES.setAddressRoute(txState.addressTo),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, txState.addressTo)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, words.fee, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, txState.fee.toLocaleString('en-EN'), \" SNT\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail vertical-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, words.value, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"amount\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AmountFormat, {\n    type: \"snt\",\n    amount: txState.amountTo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 23\n    }\n  }), \" SNT\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"amount--dollar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(AmountFormat, {\n    type: \"usd\",\n    amount: txState.amountTo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"button button--home\",\n    to: ROUTES.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, words.backToMain))))));\n};\n\nexport default TxPage;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/scenes/TxPage/TxPage.tsx"],"names":["React","useContext","useEffect","useState","NavLink","useHistory","useRouteMatch","Moment","API","MultiLangContext","ROUTES","Spinner","AmountFormat","CopyItem","TxPage","history","words","selectedLang","match","loading","setLoading","txState","setTxState","getTransaction","params","id","then","res","data","catch","err","console","log","push","txDetails","txnHash","hash","status","statusTx","block","setBlockRoute","timestamp","from","setAddressRoute","addressFrom","to","addressTo","fee","toLocaleString","value","amountTo","main","backToMain"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,aAA9B,QAAmD,kBAAnD;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AAIA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,eAAP;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,MAAMC,OAAO,GAAGV,UAAU,EAA1B;;AADmB,oBAEWJ,UAAU,CAACQ,gBAAD,CAFrB;AAAA,MAEZO,KAFY,eAEZA,KAFY;AAAA,MAELC,YAFK,eAELA,YAFK;;AAInB,MAAMC,KAAK,GAAGZ,aAAa,CAAe,SAAf,CAA3B;;AAJmB,kBAKWH,QAAQ,CAAC,KAAD,CALnB;AAAA;AAAA,MAKZgB,OALY;AAAA,MAKHC,UALG;;AAAA,wBAOWpB,KAAK,CAACG,QAAN,EAPX;AAAA;AAAA,MAOZkB,OAPY;AAAA,MAOHC,UAPG;;AASnBpB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,UAAU,CAAC,KAAD,CAAV;AAEAZ,IAAAA,GAAG,CAACe,cAAJ,CAAmBL,KAAnB,aAAmBA,KAAnB,uBAAmBA,KAAK,CAAEM,MAAP,CAAcC,EAAjC,EACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX;AAEAL,MAAAA,UAAU,CAACK,GAAG,CAACC,IAAL,CAAV;AACAR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KANH,EAOGS,KAPH,CAOS,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEAf,MAAAA,OAAO,CAACkB,IAAR,CAAa,YAAb;AACD,KAXH,EAHc,CAed;AACD,GAhBQ,EAgBN,CAACf,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEM,MAAP,CAAcC,EAAf,CAhBM,CAAT;AAmBA,sBACE,uDACE;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACN,OAAD,gBAEG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,gBAKG,uDACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBH,KAAK,CAACkB,SAA7B,CADF,eAGE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BlB,KAAK,CAACmB,OAApC,MADF,eAGE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6Cd,OAAO,CAACe,IAArD,CADF,eAGE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEpB,KAAK,CAACoB,IADd;AAEE,IAAA,KAAK,EAAEf,OAAO,CAACe,IAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHF,CADF,eAcE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BpB,KAAK,CAACqB,MAApC,MADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,2BAAoBhB,OAAO,CAACgB,MAA5B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIrB,KAAK,CAACsB,QAAP,CAAwBjB,OAAO,CAACgB,MAAhC,CADH,CADF,CAHF,CAdF,eAwBE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BrB,KAAK,CAACuB,KAApC,MADF,eAGE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,MAAnB;AACS,IAAA,EAAE,EAAE7B,MAAM,CAAC8B,aAAP,CAAqBnB,OAAO,CAACkB,KAA7B,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGlB,OAAO,CAACkB,KAFX,CAHF,CAxBF,eAiCE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BvB,KAAK,CAACyB,SAApC,MADF,eAGE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEpB,OAAO,CAACoB,SAAtB;AACQ,IAAA,GAAG,MADX;AAEQ,IAAA,MAAM,EAAExB,YAFhB;AAGQ,IAAA,OAAO,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEI,OAAO,CAACoB,SAAtB;AACQ,IAAA,GAAG,MADX;AAEQ,IAAA,MAAM,EAAExB,YAFhB;AAGQ,IAAA,MAAM,EAAC,+BAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAHF,CAjCF,eAmDE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BD,KAAK,CAAC0B,IAApC,MADF,eAGE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,MAAnB;AACS,IAAA,EAAE,EAAEhC,MAAM,CAACiC,eAAP,CAAuBtB,OAAO,CAACuB,WAA/B,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGvB,OAAO,CAACuB,WAFX,CAHF,CAnDF,eA4DE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B5B,KAAK,CAAC6B,EAApC,MADF,eAGE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,MAAnB;AACS,IAAA,EAAE,EAAEnC,MAAM,CAACiC,eAAP,CAAuBtB,OAAO,CAACyB,SAA/B,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGzB,OAAO,CAACyB,SAFX,CAHF,CA5DF,eAqEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8B9B,KAAK,CAAC+B,GAApC,MADF,eAGE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI1B,OAAO,CAAC0B,GAAT,CAAcC,cAAd,CAA6B,OAA7B,CADH,SAHF,CArEF,eA6EE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BhC,KAAK,CAACiC,KAApC,MADF,eAGE;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,MAAM,EAAE5B,OAAO,CAAC6B,QAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,uBAME;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,KADP;AAEE,IAAA,MAAM,EAAE7B,OAAO,CAAC6B,QAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CAHF,CA7EF,CAHF,eAmGE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,qBAAnB;AACS,IAAA,EAAE,EAAExC,MAAM,CAACyC,IADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOnC,KAAK,CAACoC,UAAb,CAFF,CAnGF,CANN,CADF,CADF,CADF;AAuHD,CAnJD;;AAqJA,eAAetC,MAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\n\nimport { IMatchParams, ITransaction } from \"../../interfaces/interfaces\";\n\nimport Spinner from '../../components/Spinner';\nimport AmountFormat from \"../../components/AmountFormat/AmountFormat\";\nimport CopyItem from \"../../components/CopyItem/CopyItem\";\nimport './TxPage.scss';\n\n\nconst TxPage = () => {\n  const history = useHistory();\n  const {words, selectedLang} = useContext(MultiLangContext);\n\n  const match = useRouteMatch<IMatchParams>('/tx/:id');\n  const [loading, setLoading] = useState(false);\n\n  const [txState, setTxState] = React.useState<ITransaction | any>();\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getTransaction(match?.params.id)\n      .then(res => {\n        // console.log(res.data)\n\n        setTxState(res.data);\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err)\n\n        history.push('/not-found')\n      });\n    // eslint-disable-next-line\n  }, [match?.params.id]);\n\n\n  return (\n    <>\n      <section className=\"section details\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.txDetails}</h2>\n\n                <div className=\"details__block\">\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.txnHash}:</h6>\n\n                    <div className=\"copy__block\">\n                      <span className='text break-all copy__text'>{txState.hash}</span>\n\n                      <CopyItem\n                        name={words.hash}\n                        value={txState.hash}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.status}:</h6>\n\n                    <div>\n                      <span className={`status status--${txState.status}`}>\n                        {(words.statusTx as any)[txState.status]}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.block}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setBlockRoute(txState.block)}>\n                      {txState.block}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.timestamp}:</h6>\n\n                    <span className=\"text\">\n                      <Moment date={txState.timestamp}\n                              utc\n                              locale={selectedLang}\n                              fromNow\n                      />\n\n                      <Moment date={txState.timestamp}\n                              utc\n                              locale={selectedLang}\n                              format=\" (MMMM-DD-YYYY HH:mm:ss +UTC)\"\n                      />\n                    </span>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.from}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setAddressRoute(txState.addressFrom)}>\n                      {txState.addressFrom}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.to}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setAddressRoute(txState.addressTo)}>\n                      {txState.addressTo}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.fee}:</h6>\n\n                    <span className=\"text\">\n                      {(txState.fee).toLocaleString('en-EN')} SNT\n                    </span>\n                  </div>\n\n                  <div className=\"detail vertical-center\">\n                    <h6 className=\"detail__name\">{words.value}:</h6>\n\n                    <span className=\"amount\">\n                      <AmountFormat\n                        type='snt'\n                        amount={txState.amountTo}\n                      /> SNT\n\n                      <span className='amount--dollar'>\n                        <AmountFormat\n                          type='usd'\n                          amount={txState.amountTo}\n                        />\n                      </span>\n                    </span>\n                  </div>\n                </div>\n\n                <NavLink className='button button--home'\n                         to={ROUTES.main}>\n                  <span>{words.backToMain}</span>\n                </NavLink>\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default TxPage;"]},"metadata":{},"sourceType":"module"}