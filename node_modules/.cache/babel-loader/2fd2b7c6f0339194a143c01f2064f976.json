{"ast":null,"code":"import _objectSpread from\"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import{NavLink,useHistory,useRouteMatch}from'react-router-dom';import Moment from'react-moment';import API from'../../api/api';import{MultiLangContext}from\"../../context/MultiLang/MultiLang\";import{ROUTES}from\"../../config/constants\";import Spinner from'../../components/Spinner';import CopyItem from\"../../components/CopyItem/CopyItem\";import'./BlockPage.scss';var BlockPage=function BlockPage(){var history=useHistory();var _useContext=useContext(MultiLangContext),words=_useContext.words,selectedLang=_useContext.selectedLang;var match=useRouteMatch('/block/:id');var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState({hash:'',height:0,previousHash:'',timestamp:0,txHashes:[]}),_useState4=_slicedToArray(_useState3,2),blockState=_useState4[0],setBlockState=_useState4[1];useEffect(function(){setLoading(false);API.getBlock(match===null||match===void 0?void 0:match.params.id).then(function(res){// console.log(res.data)\nsetBlockState(function(prevState){return _objectSpread(_objectSpread({},prevState),res.data);});setLoading(true);}).catch(function(err){console.log(err);history.push('/not-found');});// eslint-disable-next-line\n},[history,match===null||match===void 0?void 0:match.params.id]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"section\",{className:\"section section-block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},!loading?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},words.blockDetails),/*#__PURE__*/React.createElement(\"div\",{className:\"details__block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.blockHash,\":\"),/*#__PURE__*/React.createElement(\"div\",{className:\"copy__block\"},/*#__PURE__*/React.createElement(\"span\",{className:\"text break-all copy__text\"},blockState.hash),/*#__PURE__*/React.createElement(CopyItem,{name:words.hash,value:blockState.hash}))),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.blockNumber,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"text\"},blockState.height)),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.timestamp,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"text\"},/*#__PURE__*/React.createElement(Moment,{date:blockState.timestamp,utc:true,locale:selectedLang,fromNow:true}),/*#__PURE__*/React.createElement(Moment,{date:blockState.timestamp,utc:true,locale:selectedLang,format:\" (MMMM-DD-YYYY HH:mm:ss +UTC)\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.txCount,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"text\"},blockState.txHashes.length))),/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},words.transactions),/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-links\"},blockState.txHashes.map(function(trans,index){return/*#__PURE__*/React.createElement(\"div\",{key:index,className:\"transaction-links__content\"},/*#__PURE__*/React.createElement(\"span\",{className:\"text text--700\"},index+1,\".\"),/*#__PURE__*/React.createElement(NavLink,{to:ROUTES.setTxRoute(trans),className:\"transaction-links__hash\"},trans),/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-links__icon\"},/*#__PURE__*/React.createElement(CopyItem,{name:words.hash,value:trans})));})),/*#__PURE__*/React.createElement(NavLink,{className:\"button button--home\",to:ROUTES.main},/*#__PURE__*/React.createElement(\"span\",null,words.backToMain))))));};export default BlockPage;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/scenes/BlockPage/BlockPage.tsx"],"names":["React","useContext","useEffect","useState","NavLink","useHistory","useRouteMatch","Moment","API","MultiLangContext","ROUTES","Spinner","CopyItem","BlockPage","history","words","selectedLang","match","loading","setLoading","hash","height","previousHash","timestamp","txHashes","blockState","setBlockState","getBlock","params","id","then","res","prevState","data","catch","err","console","log","push","blockDetails","blockHash","blockNumber","txCount","length","transactions","map","trans","index","setTxRoute","main","backToMain"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\n\nimport { IMatchParams } from \"../../interfaces/interfaces\";\n\nimport Spinner from '../../components/Spinner';\nimport CopyItem from \"../../components/CopyItem/CopyItem\";\nimport './BlockPage.scss';\n\n\nconst BlockPage = () => {\n  const history = useHistory();\n  const {words, selectedLang} = useContext(MultiLangContext);\n  const match = useRouteMatch<IMatchParams>('/block/:id');\n\n  const [loading, setLoading] = useState(false);\n  const [blockState, setBlockState] = useState<{\n    hash: string;\n    height: number;\n    previousHash: string;\n    timestamp: number;\n    txHashes: any;\n  }>({\n    hash: '',\n    height: 0,\n    previousHash: '',\n    timestamp: 0,\n    txHashes: [],\n  });\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getBlock(match?.params.id)\n      .then(res => {\n        // console.log(res.data)\n\n        setBlockState(prevState => ({\n          ...prevState,\n          ...res.data,\n        }));\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err);\n\n        history.push('/not-found')\n      });\n    // eslint-disable-next-line\n  }, [history, match?.params.id]);\n\n\n  return (\n    <>\n      <section className=\"section section-block\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.blockDetails}</h2>\n\n                <div className=\"details__block\">\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.blockHash}:</h6>\n\n                    <div className=\"copy__block\">\n                      <span className='text break-all copy__text'>{blockState.hash}</span>\n\n                      <CopyItem\n                        name={words.hash}\n                        value={blockState.hash}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.blockNumber}:</h6>\n\n                    <span className=\"text\">\n                    {blockState.height}\n                  </span>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.timestamp}:</h6>\n\n                    <span className=\"text\">\n                      <Moment date={blockState.timestamp}\n                              utc\n                              locale={selectedLang}\n                              fromNow\n                      />\n\n                      <Moment date={blockState.timestamp}\n                              utc\n                              locale={selectedLang}\n                              format=\" (MMMM-DD-YYYY HH:mm:ss +UTC)\"\n                      />\n                    </span>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.txCount}:</h6>\n\n                    <span className=\"text\">\n                    {blockState.txHashes.length}\n                  </span>\n                  </div>\n                </div>\n\n                <h2 className=\"title\">{words.transactions}</h2>\n\n                <div className=\"transaction-links\">\n                  {\n                    blockState.txHashes.map((trans: string, index: number) => {\n                      return (\n                        <div key={index}\n                             className='transaction-links__content'>\n                          <span className=\"text text--700\">{index + 1}.</span>\n\n                          <NavLink to={ROUTES.setTxRoute(trans)}\n                                   className=\"transaction-links__hash\">\n                            {trans}\n                          </NavLink>\n\n                          <div className='transaction-links__icon'>\n                            <CopyItem\n                              name={words.hash}\n                              value={trans}\n                            />\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n\n                <NavLink className='button button--home'\n                         to={ROUTES.main}>\n                  <span>{words.backToMain}</span>\n                </NavLink>\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default BlockPage;"]},"metadata":{},"sourceType":"module"}