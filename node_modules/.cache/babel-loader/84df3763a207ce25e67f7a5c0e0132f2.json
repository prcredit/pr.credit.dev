{"ast":null,"code":"import { combineReducers, compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport userReducer from '../ducks/info';\nimport { ENV } from '../config/api-config';\nvar rootReducer = combineReducers({\n  data: userReducer\n});\nvar middleware = ENV === 'PROD' ? [thunk] : [thunk, logger];\nexport default createStore(rootReducer, compose(applyMiddleware.apply(void 0, middleware))); // import { createStore, applyMiddleware, compose } from 'redux';\n//\n// import thunk from 'redux-thunk';\n// import logger from 'redux-logger';\n//\n// import rootReducer from '../reducers';\n//\n//\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(thunk, logger),\n//     // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n//\n// export default store;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/store/index.ts"],"names":["combineReducers","compose","createStore","applyMiddleware","thunk","logger","userReducer","ENV","rootReducer","data","middleware"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,GAAT,QAAoB,sBAApB;AAEA,IAAMC,WAAW,GAAGR,eAAe,CAAC;AAClCS,EAAAA,IAAI,EAAEH;AAD4B,CAAD,CAAnC;AAGA,IAAMI,UAAU,GAAGH,GAAG,KAAK,MAAR,GAAiB,CAACH,KAAD,CAAjB,GAA2B,CAACA,KAAD,EAAQC,MAAR,CAA9C;AAIA,eAAeH,WAAW,CACxBM,WADwB,EAExBP,OAAO,CAACE,eAAe,MAAf,SAAmBO,UAAnB,CAAD,CAFiB,CAA1B,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { combineReducers, compose, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport userReducer from '../ducks/info';\nimport { ENV } from '../config/api-config';\n\nconst rootReducer = combineReducers({\n  data: userReducer,\n});\nconst middleware = ENV === 'PROD' ? [thunk] : [thunk, logger];\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\nexport default createStore(\n  rootReducer,\n  compose(applyMiddleware(...middleware))\n);\n\n// import { createStore, applyMiddleware, compose } from 'redux';\n//\n// import thunk from 'redux-thunk';\n// import logger from 'redux-logger';\n//\n// import rootReducer from '../reducers';\n//\n//\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(thunk, logger),\n//     // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n//\n// export default store;\n"]},"metadata":{},"sourceType":"module"}