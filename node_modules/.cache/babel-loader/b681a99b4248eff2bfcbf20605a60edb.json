{"ast":null,"code":"import axios from 'axios';\nvar host = window.location.hostname;\nvar prodHosts = ['explorer.sn-token.io'];\nvar releaseHosts = ['explorer-release.devr.app'];\nexport var ENV = function () {\n  if (releaseHosts.includes(host)) {\n    return 'RELEASE';\n  }\n\n  return prodHosts.includes(host) ? 'PROD' : 'DEV';\n}();\nvar baseURL = {\n  PROD: {\n    api: 'https://snode-api.sn-token.io'\n  },\n  RELEASE: {\n    api: 'https://snode-release.devr.app'\n  },\n  DEV: {\n    // api: 'https://snode.devr.app',\n    api: 'https://snode-api.sn-token.io' // for test prod api\n\n  }\n};\naxios.defaults.baseURL = baseURL[ENV].api;\naxios.interceptors.response.use(function (response) {\n  // Do something with response data\n  return Promise.resolve(response);\n}, function (error) {\n  // Do something with response error\n  return Promise.reject(error);\n});","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/config/api-config.ts"],"names":["axios","host","window","location","hostname","prodHosts","releaseHosts","ENV","includes","baseURL","PROD","api","RELEASE","DEV","defaults","interceptors","response","use","Promise","resolve","error","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,IAAMC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAA7B;AACA,IAAMC,SAAS,GAAG,CAAC,sBAAD,CAAlB;AACA,IAAMC,YAAY,GAAG,CAAC,2BAAD,CAArB;AAEA,OAAO,IAAMC,GAAQ,GAAI,YAAM;AAC7B,MAAID,YAAY,CAACE,QAAb,CAAsBP,IAAtB,CAAJ,EAAiC;AAC/B,WAAO,SAAP;AACD;;AACD,SAAOI,SAAS,CAACG,QAAV,CAAmBP,IAAnB,IACH,MADG,GAEH,KAFJ;AAGD,CAPuB,EAAjB;AASP,IAAMQ,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE;AACJC,IAAAA,GAAG,EAAE;AADD,GADQ;AAIdC,EAAAA,OAAO,EAAE;AACPD,IAAAA,GAAG,EAAE;AADE,GAJK;AAOdE,EAAAA,GAAG,EAAE;AACH;AACAF,IAAAA,GAAG,EAAE,+BAFF,CAEmC;;AAFnC;AAPS,CAAhB;AAaAX,KAAK,CAACc,QAAN,CAAeL,OAAf,GAAyBA,OAAO,CAACF,GAAD,CAAP,CAAaI,GAAtC;AAEAX,KAAK,CAACe,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CACE,UAAAD,QAAQ,EAAI;AAAE;AACZ,SAAOE,OAAO,CAACC,OAAR,CAAgBH,QAAhB,CAAP;AACD,CAHH,EAIE,UAAAI,KAAK,EAAI;AAAE;AACT,SAAOF,OAAO,CAACG,MAAR,CAAeD,KAAf,CAAP;AACD,CANH","sourcesContent":["import axios from 'axios';\n\nimport { Env } from '../interfaces/interfaces';\n\nconst host = window.location.hostname;\nconst prodHosts = ['explorer.sn-token.io'];\nconst releaseHosts = ['explorer-release.devr.app'];\n\nexport const ENV: Env = (() => {\n  if (releaseHosts.includes(host)) {\n    return 'RELEASE';\n  }\n  return prodHosts.includes(host)\n    ? 'PROD'\n    : 'DEV';\n})();\n\nconst baseURL = {\n  PROD: {\n    api: 'https://snode-api.sn-token.io',\n  },\n  RELEASE: {\n    api: 'https://snode-release.devr.app',\n  },\n  DEV: {\n    // api: 'https://snode.devr.app',\n    api: 'https://snode-api.sn-token.io', // for test prod api\n  },\n}\n\naxios.defaults.baseURL = baseURL[ENV].api;\n\naxios.interceptors.response.use(\n  response => { // Do something with response data\n    return Promise.resolve(response);\n  },\n  error => { // Do something with response error\n    return Promise.reject(error);\n  });\n"]},"metadata":{},"sourceType":"module"}