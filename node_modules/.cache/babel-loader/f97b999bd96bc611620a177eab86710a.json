{"ast":null,"code":"import _objectSpread from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/src/scenes/TxPage/TxPage.tsx\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from \"react-router-dom\";\nimport Moment from 'react-moment';\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\nimport Spinner from '../../components/Spinner';\nimport AmountFormat from \"../../components/AmountFormat/AmountFormat\";\nimport CopyItem from \"../../components/CopyItem/CopyItem\";\nimport './TxPage.scss';\n\nvar TxPage = function TxPage() {\n  var history = useHistory();\n\n  var _useContext = useContext(MultiLangContext),\n      words = _useContext.words,\n      selectedLang = _useContext.selectedLang;\n\n  var match = useRouteMatch('/tx/:id');\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({\n    block: 0,\n    from: '',\n    hash: '',\n    pending: false,\n    rejected: false,\n    timestamp: 0,\n    status: '',\n    outputs: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      txState = _useState4[0],\n      setTxState = _useState4[1];\n\n  useEffect(function () {\n    setLoading(false);\n    API.getTransaction(match === null || match === void 0 ? void 0 : match.params.id).then(function (res) {\n      console.log(res.data);\n      setTxState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), res.data);\n      });\n      setLoading(true);\n    }).catch(function (err) {\n      console.log(err);\n      history.push('/not-found');\n    }); // eslint-disable-next-line\n  }, [match === null || match === void 0 ? void 0 : match.params.id]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, words.txDetails), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, words.txnHash, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text break-all copy__text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 23\n    }\n  }, txState.list.hash), /*#__PURE__*/React.createElement(CopyItem, {\n    name: words.hash,\n    value: txState.list.hash,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, words.status, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status status--\".concat(txState.list.status),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }, words.statusTx[txState.list.status]))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, words.block, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"link\",\n    to: ROUTES.setBlockRoute(txState.list.block),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, txState.list.block)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, words.timestamp, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    date: txState.list.timestamp,\n    utc: true,\n    locale: selectedLang,\n    fromNow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Moment, {\n    date: txState.list.timestamp,\n    utc: true,\n    locale: selectedLang,\n    format: \" (MMMM-DD-YYYY HH:mm:ss +UTC)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, words.from, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"link\",\n    to: ROUTES.setAddressRoute(txState.list.outputs[0].to),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }, txState.list.outputs[0].to)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, words.to, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"link\",\n    to: ROUTES.setAddressRoute(txState.list.outputs[1].to),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, txState.list.outputs[1].to)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, words.fee, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, txState.list.outputs[2].amount.toLocaleString('en-EN'), \" SNT\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail vertical-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, words.value, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"amount\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AmountFormat, {\n    type: \"snt\",\n    amount: txState.list.outputs[1].amount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }), \" SNT\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"amount--dollar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(AmountFormat, {\n    type: \"usd\",\n    amount: txState.list.outputs[1].amount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"button button--home\",\n    to: ROUTES.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 19\n    }\n  }, words.backToMain))))));\n};\n\nexport default TxPage;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/scenes/TxPage/TxPage.tsx"],"names":["React","useContext","useEffect","useState","NavLink","useHistory","useRouteMatch","Moment","API","MultiLangContext","ROUTES","Spinner","AmountFormat","CopyItem","TxPage","history","words","selectedLang","match","loading","setLoading","block","from","hash","pending","rejected","timestamp","status","outputs","txState","setTxState","getTransaction","params","id","then","res","console","log","data","prevState","catch","err","push","txDetails","txnHash","list","statusTx","setBlockRoute","setAddressRoute","to","fee","amount","toLocaleString","value","main","backToMain"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\n\nimport { IMatchParams, ITransactionOutputs } from \"../../interfaces/interfaces\";\n\nimport Spinner from '../../components/Spinner';\nimport AmountFormat from \"../../components/AmountFormat/AmountFormat\";\nimport CopyItem from \"../../components/CopyItem/CopyItem\";\nimport './TxPage.scss';\n\n\nconst TxPage = () => {\n  const history = useHistory();\n  const {words, selectedLang} = useContext(MultiLangContext);\n\n  const match = useRouteMatch<IMatchParams>('/tx/:id');\n  const [loading, setLoading] = useState(false);\n  const [txState, setTxState] = useState<{\n    block: number;\n    from: string;\n    hash: string;\n    pending: boolean;\n    rejected: boolean;\n    timestamp: number;\n    status: string;\n    outputs: any;\n  }>({\n    block: 0,\n    from: '',\n    hash:  '',\n    pending: false,\n    rejected: false,\n    timestamp: 0,\n    status: '',\n    outputs: []\n  });\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getTransaction(match?.params.id)\n      .then(res => {\n        console.log(res.data)\n\n        setTxState(prevState => ({\n          ...prevState,\n          ...res.data,\n        }));\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err)\n\n        history.push('/not-found')\n      });\n    // eslint-disable-next-line\n  }, [match?.params.id]);\n\n\n  return (\n    <>\n      <section className=\"section details\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.txDetails}</h2>\n\n                <div className=\"details__block\">\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.txnHash}:</h6>\n\n                    <div className=\"copy__block\">\n                      <span className='text break-all copy__text'>{txState.list.hash}</span>\n\n                      <CopyItem\n                        name={words.hash}\n                        value={txState.list.hash}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.status}:</h6>\n\n                    <div>\n                      <span className={`status status--${txState.list.status}`}>\n                        {(words.statusTx as any)[txState.list.status]}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.block}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setBlockRoute(txState.list.block)}>\n                      {txState.list.block}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.timestamp}:</h6>\n\n                    <span className=\"text\">\n                      <Moment date={txState.list.timestamp}\n                              utc\n                              locale={selectedLang}\n                              fromNow\n                      />\n\n                      <Moment date={txState.list.timestamp}\n                              utc\n                              locale={selectedLang}\n                              format=\" (MMMM-DD-YYYY HH:mm:ss +UTC)\"\n                      />\n                    </span>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.from}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setAddressRoute(txState.list.outputs[0].to)}>\n                      {txState.list.outputs[0].to}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.to}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setAddressRoute(txState.list.outputs[1].to)}>\n                      {txState.list.outputs[1].to}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.fee}:</h6>\n\n                    <span className=\"text\">\n                      {(txState.list.outputs[2].amount).toLocaleString('en-EN')} SNT\n                    </span>\n                  </div>\n\n                  <div className=\"detail vertical-center\">\n                    <h6 className=\"detail__name\">{words.value}:</h6>\n\n                    <span className=\"amount\">\n                      <AmountFormat\n                        type='snt'\n                        amount={txState.list.outputs[1].amount}\n                      /> SNT\n\n                      <span className='amount--dollar'>\n                        <AmountFormat\n                          type='usd'\n                          amount={txState.list.outputs[1].amount}\n                        />\n                      </span>\n                    </span>\n                  </div>\n                </div>\n\n                <NavLink className='button button--home'\n                         to={ROUTES.main}>\n                  <span>{words.backToMain}</span>\n                </NavLink>\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default TxPage;"]},"metadata":{},"sourceType":"module"}