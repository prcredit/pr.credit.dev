{"ast":null,"code":"import _objectSpread from\"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState,useCallback}from'react';import{NavLink,useHistory,useRouteMatch}from'react-router-dom';import Moment from'react-moment';import API from'../../api/api';import{MultiLangContext}from\"../../context/MultiLang/MultiLang\";import{ROUTES}from\"../../config/constants\";import{classModifier}from\"../../utils\";import Spinner from'../../components/Spinner';import AmountFormat from\"../../components/AmountFormat/AmountFormat\";import CopyItem from'../../components/CopyItem/CopyItem';import Tooltip from\"../../components/Tooltip/Tooltip\";import Pagination from\"../../components/Pagination/Pagination\";import'./AddressPage.scss';var AddressPage=function AddressPage(){var history=useHistory();var _useContext=useContext(MultiLangContext),selectedLang=_useContext.selectedLang,words=_useContext.words;var match=useRouteMatch('/address/:id');var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),openedTrans=_useState4[0],setOpenedTrans=_useState4[1];var _useState5=useState({dataList:[],address:\"\",balance:0,currentPage:1,last_page:1,total_items:50,limit:50}),_useState6=_slicedToArray(_useState5,2),addressState=_useState6[0],setAddressState=_useState6[1];var onChangePage=useCallback(function(page){setAddressState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{currentPage:page});});},[]);useEffect(function(){setLoading(false);API.getAddress(match===null||match===void 0?void 0:match.params.id,addressState.currentPage).then(function(res){// console.log(res.data)\nsetAddressState(function(prevState){return _objectSpread(_objectSpread({},prevState),res.data);});setLoading(true);}).catch(function(err){console.log(err);history.push('/not-found');});// eslint-disable-next-line\n},[addressState.currentPage,match===null||match===void 0?void 0:match.params.id]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"section\",{className:\"section section-address\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},!loading?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},words.addressDetails),/*#__PURE__*/React.createElement(\"div\",{className:\"details__block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.address,\":\"),/*#__PURE__*/React.createElement(\"div\",{className:\"copy__block\"},/*#__PURE__*/React.createElement(\"span\",{className:\"text break-all copy__text\"},addressState.address),/*#__PURE__*/React.createElement(CopyItem,{name:words.address,value:addressState.address}))),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.balance,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"amount\"},/*#__PURE__*/React.createElement(AmountFormat,{type:\"snt\",amount:addressState.balance}),\" SNT\",/*#__PURE__*/React.createElement(\"span\",{className:\"amount--dollar\"},/*#__PURE__*/React.createElement(AmountFormat,{type:\"usd\",amount:addressState.balance}))))),/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},words.transactionsList),/*#__PURE__*/React.createElement(\"div\",{className:\"transactions__block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"transactions-header\"},/*#__PURE__*/React.createElement(\"h6\",null,words.txnHash),/*#__PURE__*/React.createElement(\"h6\",null,words.age),/*#__PURE__*/React.createElement(\"h6\",null,words.from),/*#__PURE__*/React.createElement(\"h6\",null,words.to),/*#__PURE__*/React.createElement(\"h6\",null,words.type),/*#__PURE__*/React.createElement(\"h6\",null,words.amount,\" (SNT)\")),addressState.dataList.map(function(trans,index){return/*#__PURE__*/React.createElement(\"div\",{className:classModifier('transaction',[openedTrans===trans.hash&&'active',addressState.address!==trans.outputs[1].to?'out':'in']),key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell-mobile\"},/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell-mobile__header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell-mobile__title-block\"},/*#__PURE__*/React.createElement(NavLink,{className:\"link link--ellipsis\",to:ROUTES.setTxRoute(trans.hash)},trans.hash),/*#__PURE__*/React.createElement(\"span\",{className:\"text\"},/*#__PURE__*/React.createElement(Moment,{date:trans.timestamp,utc:true,locale:selectedLang,fromNow:true}))),/*#__PURE__*/React.createElement(\"span\",{className:\"transaction-cell-mobile__amount\"},/*#__PURE__*/React.createElement(AmountFormat,{type:\"snt\",amount:trans.outputs[1].amount}),\" SNT\"),/*#__PURE__*/React.createElement(\"button\",{className:\"show-more\",onClick:function onClick(){return setOpenedTrans(openedTrans===trans.hash?null:trans.hash);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell transaction-cell--sm tooltip__container\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"transaction-cell__name\"},words.hash,\":\"),/*#__PURE__*/React.createElement(NavLink,{className:\"link link--ellipsis\",to:ROUTES.setTxRoute(trans.hash)},trans.hash),/*#__PURE__*/React.createElement(Tooltip,{text:trans.hash,type:\"hash\",media:\"desktop\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell transaction-cell--sm transaction-cell-mobile\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"transaction-cell__name\"},words.block,\":\"),/*#__PURE__*/React.createElement(NavLink,{className:\"link\",to:ROUTES.setBlockRoute(trans.block)},trans.block)),/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell transaction-cell--desktop\"},/*#__PURE__*/React.createElement(\"span\",{className:\"text tooltip__container\"},/*#__PURE__*/React.createElement(Moment,{date:trans.timestamp,utc:true,locale:selectedLang,fromNow:true}),/*#__PURE__*/React.createElement(Tooltip,{text:/*#__PURE__*/React.createElement(Moment,{date:trans.timestamp,utc:true,locale:selectedLang,format:\"MMMM-DD-YYYY HH:mm:ss +UTC\"}),type:\"timestamp\",media:\"desktop\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell transaction-cell--sm transaction-cell-mobile\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"transaction-cell__name\"},words.age,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"text\"},/*#__PURE__*/React.createElement(Moment,{date:trans.timestamp,utc:true,locale:selectedLang,format:\"MMMM-DD-YYYY HH:mm:ss +UTC\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell transaction-cell--sm\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"transaction-cell__name\"},words.from,\":\"),/*#__PURE__*/React.createElement(NavLink,{className:\"link link--ellipsis transaction-cell--link-in\",to:ROUTES.setAddressRoute(trans.outputs[0].to)},trans.outputs[0].to)),/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell transaction-cell--sm\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"transaction-cell__name\"},words.to,\":\"),/*#__PURE__*/React.createElement(NavLink,{className:\"link link--ellipsis transaction-cell--link-out\",to:ROUTES.setAddressRoute(trans.outputs[1].to)},trans.outputs[1].to)),/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell transaction-cell--sm vertical-center\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"transaction-cell__name\"},words.type,\":\"),addressState.address!==trans.outputs[1].to?/*#__PURE__*/React.createElement(\"span\",{className:\"status status--type status--failed\"},words.out):/*#__PURE__*/React.createElement(\"span\",{className:\"status status--type status--completed\"},words.in)),/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell transaction-cell--desktop\"},/*#__PURE__*/React.createElement(\"p\",{className:\"text\"},addressState.address!==trans.outputs[1].to?/*#__PURE__*/React.createElement(AmountFormat,{type:\"snt\",amount:trans.outputs[0].amount}):/*#__PURE__*/React.createElement(AmountFormat,{type:\"snt\",amount:trans.outputs[1].amount}))),/*#__PURE__*/React.createElement(\"div\",{className:\"transaction-cell transaction-cell--sm transaction-cell-mobile\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"transaction-cell__name\"},words.fee,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"text\"},/*#__PURE__*/React.createElement(AmountFormat,{type:\"snt\",amount:trans.outputs[2].amount}),\" SNT\")));})),/*#__PURE__*/React.createElement(Pagination,{pageCount:addressState.last_page,onChange:onChangePage,forcePage:addressState.currentPage-1}),/*#__PURE__*/React.createElement(NavLink,{className:\"button button--home\",to:ROUTES.main},/*#__PURE__*/React.createElement(\"span\",null,words.backToMain))))));};export default AddressPage;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/scenes/AddressPage/AddressPage.tsx"],"names":["React","useContext","useEffect","useState","useCallback","NavLink","useHistory","useRouteMatch","Moment","API","MultiLangContext","ROUTES","classModifier","Spinner","AmountFormat","CopyItem","Tooltip","Pagination","AddressPage","history","selectedLang","words","match","loading","setLoading","openedTrans","setOpenedTrans","dataList","address","balance","currentPage","last_page","total_items","limit","addressState","setAddressState","onChangePage","page","prevState","getAddress","params","id","then","res","data","catch","err","console","log","push","addressDetails","transactionsList","txnHash","age","from","to","type","amount","map","trans","index","hash","outputs","setTxRoute","timestamp","block","setBlockRoute","setAddressRoute","out","in","fee","main","backToMain"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\nimport { classModifier } from \"../../utils\";\n\nimport { IMatchParams, ITransaction } from \"../../interfaces/interfaces\";\n\nimport Spinner from '../../components/Spinner';\nimport AmountFormat from \"../../components/AmountFormat/AmountFormat\";\nimport CopyItem from '../../components/CopyItem/CopyItem';\nimport Tooltip from \"../../components/Tooltip/Tooltip\";\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport './AddressPage.scss';\n\n\nconst AddressPage = () => {\n  const history = useHistory();\n  const {selectedLang, words} = useContext(MultiLangContext);\n\n  const match = useRouteMatch<IMatchParams>('/address/:id');\n  const [loading, setLoading] = useState(false);\n  const [openedTrans, setOpenedTrans] = useState();\n  const [addressState, setAddressState] = useState<{\n    dataList: ITransaction[];\n    address: string,\n    balance: number,\n    currentPage: number;\n    last_page: number;\n    total_items: number;\n    limit: number;\n  }>({\n    dataList: [],\n    address: \"\",\n    balance: 0,\n    currentPage: 1,\n    last_page: 1,\n    total_items: 50,\n    limit: 50,\n  });\n\n  const onChangePage = useCallback((page) => {\n    setAddressState(prevState => ({\n      ...prevState,\n      currentPage: page,\n    }));\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getAddress(match?.params.id, addressState.currentPage)\n      .then(res => {\n        // console.log(res.data)\n\n        setAddressState(prevState => ({\n          ...prevState,\n          ...res.data,\n        }));\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err)\n\n        history.push('/not-found')\n      });\n\n// eslint-disable-next-line\n  }, [addressState.currentPage, match?.params.id]);\n\n\n  return (\n    <>\n      <section className=\"section section-address\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.addressDetails}</h2>\n\n                <div className=\"details__block\">\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.address}:</h6>\n\n                    <div className=\"copy__block\">\n                      <span className='text break-all copy__text'>{addressState.address}</span>\n\n                      <CopyItem\n                        name={words.address}\n                        value={addressState.address}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.balance}:</h6>\n\n                    <span className=\"amount\">\n                      <AmountFormat\n                        type='snt'\n                        amount={addressState.balance}\n                      /> SNT\n\n                    <span className='amount--dollar'>\n                      <AmountFormat\n                        type='usd'\n                        amount={addressState.balance}\n                      />\n                    </span>\n                  </span>\n                  </div>\n                </div>\n\n                <h2 className=\"title\">{words.transactionsList}</h2>\n\n                <div className=\"transactions__block\">\n                  <div className=\"transactions-header\">\n                    <h6>{words.txnHash}</h6>\n\n                    <h6>{words.age}</h6>\n\n                    <h6>{words.from}</h6>\n\n                    <h6>{words.to}</h6>\n\n                    <h6>{words.type}</h6>\n\n                    <h6>{words.amount} (SNT)</h6>\n                  </div>\n\n                  {\n                    addressState.dataList.map((trans: any, index: number) => {\n                      return (\n                        <div\n                          className={classModifier('transaction',\n                            [\n                              openedTrans === trans.hash && 'active',\n                              (addressState.address !== trans.outputs[1].to)\n                                ? 'out'\n                                : 'in'\n                            ],\n                          )}\n                          key={index}>\n\n                          <div className=\"transaction-cell-mobile\">\n                            <div className=\"transaction-cell-mobile__header\">\n                              <div className=\"transaction-cell-mobile__title-block\">\n                                <NavLink className='link link--ellipsis'\n                                         to={ROUTES.setTxRoute(trans.hash)}>\n                                  {trans.hash}\n                                </NavLink>\n\n                                <span className=\"text\">\n                                  <Moment date={trans.timestamp}\n                                          utc\n                                          locale={selectedLang}\n                                          fromNow\n                                  />\n                                </span>\n                              </div>\n\n                              <span className=\"transaction-cell-mobile__amount\">\n                                <AmountFormat\n                                  type='snt'\n                                  amount={trans.outputs[1].amount}\n                                /> SNT\n                            </span>\n\n                              <button\n                                className='show-more'\n                                onClick={() => setOpenedTrans(openedTrans === trans.hash\n                                  ? null\n                                  : trans.hash\n                                )}\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm tooltip__container\">\n                            <h6 className=\"transaction-cell__name\">{words.hash}:</h6>\n\n                            <NavLink className='link link--ellipsis'\n                                     to={ROUTES.setTxRoute(trans.hash)}>\n                              {trans.hash}\n                            </NavLink>\n\n                            <Tooltip\n                              text={trans.hash}\n                              type='hash'\n                              media='desktop'\n                            />\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm transaction-cell-mobile\">\n                            <h6 className=\"transaction-cell__name\">{words.block}:</h6>\n\n                            <NavLink className='link'\n                                     to={ROUTES.setBlockRoute(trans.block)}>\n                              {trans.block}\n                            </NavLink>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--desktop\">\n                            <span className=\"text tooltip__container\">\n                              <Moment date={trans.timestamp}\n                                      utc\n                                      locale={selectedLang}\n                                      fromNow\n                              />\n\n                              <Tooltip\n                                text={\n                                  <Moment date={trans.timestamp}\n                                          utc\n                                          locale={selectedLang}\n                                          format=\"MMMM-DD-YYYY HH:mm:ss +UTC\"\n                                  />\n                                }\n                                type='timestamp'\n                                media='desktop'\n                              />\n                            </span>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm transaction-cell-mobile\">\n                            <h6 className=\"transaction-cell__name\">{words.age}:</h6>\n\n                            <span className=\"text\">\n                              <Moment date={trans.timestamp}\n                                      utc\n                                      locale={selectedLang}\n                                      format=\"MMMM-DD-YYYY HH:mm:ss +UTC\"\n                              />\n                            </span>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm\">\n                            <h6 className=\"transaction-cell__name\">{words.from}:</h6>\n\n                            <NavLink className='link link--ellipsis transaction-cell--link-in'\n                                     to={ROUTES.setAddressRoute(trans.outputs[0].to)}>\n                              {trans.outputs[0].to}\n                            </NavLink>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm\">\n                            <h6 className=\"transaction-cell__name\">{words.to}:</h6>\n\n                            <NavLink className='link link--ellipsis transaction-cell--link-out'\n                                     to={ROUTES.setAddressRoute(trans.outputs[1].to)}>\n                              {trans.outputs[1].to}\n                            </NavLink>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm vertical-center\">\n                            <h6 className=\"transaction-cell__name\">{words.type}:</h6>\n\n                            {(addressState.address !== trans.outputs[1].to)\n                              ? <span className='status status--type status--failed'>{words.out}</span>\n                              : <span className='status status--type status--completed'>{words.in}</span>}\n\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--desktop\">\n                            <p className='text'>\n                              {(addressState.address !== trans.outputs[1].to)\n                                ? <AmountFormat\n                                  type='snt'\n                                  amount={trans.outputs[0].amount}\n                                />\n                                : <AmountFormat\n                                  type='snt'\n                                  amount={trans.outputs[1].amount}\n                                />\n                              }\n                            </p>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm transaction-cell-mobile\">\n                            <h6 className=\"transaction-cell__name\">{words.fee}:</h6>\n\n                            <span className=\"text\">\n                              <AmountFormat\n                                type='snt'\n                                amount={trans.outputs[2].amount}\n                              /> SNT\n                            </span>\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n\n                <Pagination\n                  pageCount={addressState.last_page}\n                  onChange={onChangePage}\n                  forcePage={addressState.currentPage - 1}\n                />\n\n                <NavLink className='button button--home'\n                         to={ROUTES.main}>\n                  <span>{words.backToMain}</span>\n                </NavLink>\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default AddressPage;"]},"metadata":{},"sourceType":"module"}