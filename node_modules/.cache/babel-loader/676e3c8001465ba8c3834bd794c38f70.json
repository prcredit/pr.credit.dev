{"ast":null,"code":"import _slicedToArray from\"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';export default(function(type,size){var _useState=useState(type==='IS_GREATER_THAN'?window.innerWidth>=size:window.innerWidth<=size),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];useEffect(function(){var onResize=function onResize(){return setValue(type==='IS_GREATER_THAN'?window.innerWidth>=size:window.innerWidth<=size);};window.addEventListener('resize',onResize);return function(){window.removeEventListener('resize',onResize);};},[size,type]);return value;});/*\n  Usage Example:\n\n  const isDesktop = useCheckWindowSize('IS_GREATER_THAN', MEDIA_SIZES.desktop);\n\n  const isMobile = useCheckWindowSize('IS_LESS_THAN', MEDIA_SIZES.miniTablet)\n*/","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/hooks/useCheckWindowSize.ts"],"names":["useState","useEffect","type","size","window","innerWidth","value","setValue","onResize","addEventListener","removeEventListener"],"mappings":"+NAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CAMA,eAAe,SAACC,IAAD,CAAkBC,IAAlB,CAAmC,eACtBH,QAAQ,CAChCE,IAAI,GAAK,iBAAT,CACIE,MAAM,CAACC,UAAP,EAAqBF,IADzB,CAEIC,MAAM,CAACC,UAAP,EAAqBF,IAHO,CADc,wCACzCG,KADyC,eAClCC,QADkC,eAOhDN,SAAS,CAAC,UAAM,CACd,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMD,CAAAA,QAAQ,CAACL,IAAI,GAAK,iBAAT,CAC5BE,MAAM,CAACC,UAAP,EAAqBF,IADO,CAE5BC,MAAM,CAACC,UAAP,EAAqBF,IAFM,CAAd,EAAjB,CAKAC,MAAM,CAACK,gBAAP,CAAwB,QAAxB,CAAkCD,QAAlC,EAEA,MAAO,WAAM,CACXJ,MAAM,CAACM,mBAAP,CAA2B,QAA3B,CAAqCF,QAArC,EACD,CAFD,CAGD,CAXQ,CAWN,CAACL,IAAD,CAAOD,IAAP,CAXM,CAAT,CAaA,MAAOI,CAAAA,KAAP,CACD,CArBD,EAsBA","sourcesContent":["import { useState, useEffect } from 'react';\n\n\ntype CheckType = 'IS_LESS_THAN' | 'IS_GREATER_THAN';\n\n\nexport default (type: CheckType, size: number) => {\n  const [value, setValue] = useState<boolean>(\n    type === 'IS_GREATER_THAN'\n      ? window.innerWidth >= size\n      : window.innerWidth <= size\n  );\n\n  useEffect(() => {\n    const onResize = () => setValue(type === 'IS_GREATER_THAN'\n      ? window.innerWidth >= size\n      : window.innerWidth <= size\n    );\n\n    window.addEventListener('resize', onResize);\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [size, type]);\n\n  return value;\n}\n/*\n  Usage Example:\n\n  const isDesktop = useCheckWindowSize('IS_GREATER_THAN', MEDIA_SIZES.desktop);\n\n  const isMobile = useCheckWindowSize('IS_LESS_THAN', MEDIA_SIZES.miniTablet)\n*/"]},"metadata":{},"sourceType":"module"}