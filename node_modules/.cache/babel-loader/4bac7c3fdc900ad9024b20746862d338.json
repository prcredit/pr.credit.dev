{"ast":null,"code":"import _objectSpread from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/src/scenes/MainPage/MainPage.tsx\";\n\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport API from '../../api/api';\nimport { ROUTES } from '../../config/constants';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport { classModifier } from \"../../utils\";\nimport AmountFormat from '../../components/AmountFormat/AmountFormat';\nimport Spinner from '../../components/Spinner';\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport './MainPage.scss';\n\nvar MainPage = function MainPage() {\n  var _useContext = useContext(MultiLangContext),\n      selectedLang = _useContext.selectedLang;\n\n  var _useContext2 = useContext(MultiLangContext),\n      words = _useContext2.words;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({\n    data: [],\n    currentPage: 1,\n    last_page: 1,\n    total_items: 50,\n    limit: 50\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      transactionsState = _useState4[0],\n      setTransactionsState = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openedTrans = _useState6[0],\n      setOpenedTrans = _useState6[1];\n\n  var onChangePage = useCallback(function (page) {\n    setTransactionsState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        currentPage: page\n      });\n    });\n  }, []);\n  useEffect(function () {\n    setLoading(false);\n    API.getTransactions(transactionsState.currentPage).then(function (res) {\n      // console.log(res.data)\n      setTransactionsState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), res.data);\n      });\n      setLoading(true);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, [transactionsState.currentPage]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, words.lastTransactions), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"transactions__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"transactions-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, words.block), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, words.hash), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, words.date), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, words.time, \" (UTC+0)\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, words.amount, \" (SNT)\")), transactionsState.data.map(function (trans, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classModifier('transaction', [openedTrans === trans.hash && 'active']),\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, words.block, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link\",\n      to: ROUTES.setBlockRoute(trans.block),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 29\n      }\n    }, trans.block)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--main\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, words.hash, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link link--ellipsis main--link\",\n      to: ROUTES.setTxRoute(trans.hash),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, trans.hash), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"show-more\",\n      onClick: function onClick() {\n        return setOpenedTrans(openedTrans === trans.hash ? null : trans.hash);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, words.date, \":\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: trans.timestamp,\n      utc: true,\n      locale: selectedLang,\n      format: \"DD.MM.YYYY\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    }, words.time, \" (UTC+0):\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: trans.timestamp,\n      utc: true,\n      locale: \"ru\",\n      format: \"HH:mm:ss\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, words.value, \":\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"amount\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"snt\",\n      amount: trans.amountTo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"amount--sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 31\n      }\n    }, \" SNT\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"amount--sm amount--dollar\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"usd\",\n      amount: trans.amountTo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    })))));\n  })), transactionsState.last_page !== 1 && /*#__PURE__*/React.createElement(Pagination, {\n    pageCount: transactionsState.last_page,\n    onChange: onChangePage,\n    forcePage: transactionsState.currentPage - 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default MainPage;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/scenes/MainPage/MainPage.tsx"],"names":["React","useContext","useEffect","useState","useCallback","NavLink","Moment","API","ROUTES","MultiLangContext","classModifier","AmountFormat","Spinner","Pagination","MainPage","selectedLang","words","loading","setLoading","data","currentPage","last_page","total_items","limit","transactionsState","setTransactionsState","openedTrans","setOpenedTrans","onChangePage","page","prevState","getTransactions","then","res","catch","err","console","log","lastTransactions","block","hash","date","time","amount","map","trans","index","setBlockRoute","setTxRoute","timestamp","value","amountTo"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { ROUTES } from '../../config/constants';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport { classModifier } from \"../../utils\";\n\nimport { ITransaction } from \"../../interfaces/interfaces\";\n\nimport AmountFormat from '../../components/AmountFormat/AmountFormat';\nimport Spinner from '../../components/Spinner';\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport './MainPage.scss';\n\n\nconst MainPage = () => {\n  const {selectedLang} = useContext(MultiLangContext);\n  const {words} = useContext(MultiLangContext);\n\n  const [loading, setLoading] = useState(false);\n  const [transactionsState, setTransactionsState] = useState<{\n    data: ITransaction[];\n    currentPage: number;\n    last_page: number;\n    total_items: number;\n    limit: number;\n  }>({\n    data: [],\n    currentPage: 1,\n    last_page: 1,\n    total_items: 50,\n    limit: 50,\n  });\n\n  const [openedTrans, setOpenedTrans] = useState();\n\n  const onChangePage = useCallback((page) => {\n    setTransactionsState(prevState => ({\n      ...prevState,\n      currentPage: page,\n    }));\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getTransactions(transactionsState.currentPage)\n      .then(res => {\n        // console.log(res.data)\n\n        setTransactionsState(prevState => {\n          return {\n            ...prevState,\n            ...res.data,\n          }\n        })\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err)\n      });\n  }, [transactionsState.currentPage]);\n\n\n  return (\n    <>\n      <section className=\"section-main\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.lastTransactions}</h2>\n\n                <div className=\"transactions__block\">\n                  <div className=\"transactions-header\">\n                    <h6>{words.block}</h6>\n\n                    <h6>{words.hash}</h6>\n\n                    <h6>{words.date}</h6>\n\n                    <h6>{words.time} (UTC+0)</h6>\n\n                    <h6>{words.amount} (SNT)</h6>\n                  </div>\n\n                  {\n                    transactionsState.data.map((trans: any, index: number) => {\n                      return (\n                        <div\n                          className={classModifier('transaction', [\n                            openedTrans === trans.hash && 'active'\n                          ])}\n                          key={index}>\n\n                          <div className=\"transaction-cell transaction-cell--sm\">\n                            <h6 className=\"transaction-cell__name\">{words.block}:</h6>\n\n                            <NavLink className='link'\n                                     to={ROUTES.setBlockRoute(trans.block)}>\n                              {trans.block}\n                            </NavLink>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--main\">\n                            <h6 className=\"transaction-cell__name\">{words.hash}:</h6>\n\n                            <NavLink className='link link--ellipsis main--link'\n                                     to={ROUTES.setTxRoute(trans.hash)}>\n                              {trans.hash}\n                            </NavLink>\n\n                            <button\n                              className='show-more'\n                              onClick={() => setOpenedTrans(openedTrans === trans.hash\n                                ? null\n                                : trans.hash\n                              )}\n                            />\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm\">\n                            <h6 className=\"transaction-cell__name\">{words.date}:</h6>\n\n                            <p className='text'>\n                              <Moment date={trans.timestamp}\n                                      utc\n                                      locale={selectedLang}\n                                      format=\"DD.MM.YYYY\"\n                              />\n                            </p>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm\">\n                            <h6 className=\"transaction-cell__name\">{words.time} (UTC+0):</h6>\n\n                            <p className='text'>\n                              <Moment date={trans.timestamp}\n                                      utc\n                                      locale='ru'\n                                      format='HH:mm:ss'\n                              />\n                            </p>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm\">\n                            <h6 className=\"transaction-cell__name\">{words.value}:</h6>\n\n                            <p className='amount'>\n                              <AmountFormat\n                                type='snt'\n                                amount={trans.amountTo}\n                              />\n\n                              <span className='amount--sm'> SNT</span>\n\n                              <span className='amount--sm amount--dollar'>\n                                <AmountFormat\n                                  type='usd'\n                                  amount={trans.amountTo}\n                                />\n                              </span>\n                            </p>\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n\n\n                {transactionsState.last_page !== 1 &&\n                <Pagination\n                  pageCount={transactionsState.last_page}\n                  onChange={onChangePage}\n                  forcePage={transactionsState.currentPage - 1}\n                />\n                }\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}