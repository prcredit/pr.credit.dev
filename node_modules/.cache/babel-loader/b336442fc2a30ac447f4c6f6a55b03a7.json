{"ast":null,"code":"import _objectSpread from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/src/containers/Search/Search.tsx\";\n\nimport React, { useContext, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport API from \"../../api/api\";\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport './Search.scss';\nimport { classModifier } from \"../../utils\";\nimport { ROUTES } from \"../../config/constants\";\n\nvar Search = function Search() {\n  var location = useLocation();\n  var history = useHistory();\n\n  var _useContext = useContext(MultiLangContext),\n      words = _useContext.words;\n\n  var _useState = useState({\n    value: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchState = _useState2[0],\n      setSearchState = _useState2[1];\n\n  var searchButton = function searchButton(inputValue) {\n    if (inputValue.length === 64) {\n      API.getTransaction(inputValue).then(function (res) {\n        setSearchState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            link: ROUTES.setTxRoute(inputValue)\n          });\n        });\n        history.push('tx');\n      }).catch(function (err) {\n        console.log(err);\n        history.push('/not-found');\n      });\n    } else if (inputValue.length === 40) {\n      API.getAddress(inputValue, 1).then(function (res) {\n        setSearchState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            link: ROUTES.setAddressRoute(inputValue)\n          });\n        });\n        history.push('address');\n      }).catch(function (err) {\n        console.log(err);\n        history.push('/not-found');\n      });\n    } else {\n      API.getBlock(inputValue).then(function (res) {\n        setSearchState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            link: ROUTES.setBlockRoute(inputValue)\n          });\n        });\n        history.push('block');\n      }).catch(function (err) {\n        console.log(err);\n        history.push('/not-found');\n      });\n    }\n  };\n\n  var handleChange = function handleChange(e) {\n    var value = e.target.value.split(' ').join('');\n    setSearchState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        value: value\n      });\n    });\n  };\n\n  var handleKeyPress = function handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      searchButton(searchState.value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classModifier('search', [location.pathname === '/' ? 'main' : 'all']),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search__container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-input__container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"search-input\",\n    type: \"text\",\n    onChange: handleChange,\n    onKeyPress: handleKeyPress,\n    value: searchState.value,\n    placeholder: words.searchPlaceholder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"search-input__button\",\n    onClick: function onClick() {\n      return searchButton(searchState.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, words.find)))));\n};\n\nexport default Search;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/containers/Search/Search.tsx"],"names":["React","useContext","useState","useLocation","useHistory","API","MultiLangContext","classModifier","ROUTES","Search","location","history","words","value","searchState","setSearchState","searchButton","inputValue","length","getTransaction","then","res","prev","link","setTxRoute","push","catch","err","console","log","getAddress","setAddressRoute","getBlock","setBlockRoute","handleChange","e","target","split","join","handleKeyPress","key","pathname","searchPlaceholder","find"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation, useHistory, useRouteMatch } from 'react-router-dom';\n\nimport API from \"../../api/api\";\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\n\nimport './Search.scss';\nimport { classModifier } from \"../../utils\";\nimport { ROUTES } from \"../../config/constants\";\n\n\nconst Search = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const {words} = useContext(MultiLangContext);\n\n  const [searchState, setSearchState] = useState<{\n    value: string;\n  }>({\n    value: '',\n  });\n\n  const searchButton = (inputValue: string) => {\n    if (inputValue.length === 64) {\n      API.getTransaction(inputValue)\n        .then(res => {\n          setSearchState(prev => ({\n            ...prev,\n            link: ROUTES.setTxRoute(inputValue),\n          }));\n          history.push('tx')\n        })\n        .catch(err => {\n          console.log(err)\n          history.push('/not-found')\n        });\n    } else if (inputValue.length === 40) {\n      API.getAddress(inputValue, 1)\n        .then(res => {\n          setSearchState(prev => ({\n            ...prev,\n            link: ROUTES.setAddressRoute(inputValue),\n          }));\n          history.push('address')\n        })\n        .catch(err => {\n          console.log(err)\n          history.push('/not-found')\n        });\n    } else {\n      API.getBlock(inputValue)\n        .then(res => {\n          setSearchState(prev => ({\n            ...prev,\n            link: ROUTES.setBlockRoute(inputValue),\n          }));\n          history.push('block')\n        })\n        .catch(err => {\n          console.log(err);\n          history.push('/not-found')\n        });\n    }\n  }\n\n  const handleChange = (e: any) => {\n    const value = e.target.value.split(' ').join('');\n\n    setSearchState(prev => ({\n      ...prev,\n      value: value,\n    }));\n  }\n\n  const handleKeyPress = (e: any) => {\n    if (e.key === 'Enter') {\n      searchButton(searchState.value)\n    }\n  }\n\n\n  return (\n    <div className={classModifier('search',\n      [(location.pathname === '/') ? 'main' : 'all'],\n    )}>\n      <div className=\"search__container\">\n        <div className=\"search-input__container\">\n          <input\n            className='search-input'\n            type=\"text\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n            value={searchState.value}\n            placeholder={words.searchPlaceholder}\n          />\n\n          <button\n            className='search-input__button'\n            onClick={() => searchButton(searchState.value)}\n          >\n            <span>{words.find}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}