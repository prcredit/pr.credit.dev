{"ast":null,"code":"import _objectSpread from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/src/scenes/AddressPage/AddressPage.tsx\";\n\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\nimport { classModifier } from \"../../utils\";\nimport Spinner from '../../components/Spinner';\nimport AmountFormat from \"../../components/AmountFormat/AmountFormat\";\nimport CopyItem from '../../components/CopyItem/CopyItem';\nimport Tooltip from \"../../components/Tooltip/Tooltip\";\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport './AddressPage.scss';\n\nvar AddressPage = function AddressPage() {\n  var history = useHistory();\n\n  var _useContext = useContext(MultiLangContext),\n      selectedLang = _useContext.selectedLang,\n      words = _useContext.words;\n\n  var match = useRouteMatch('/address/:id');\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openedTrans = _useState4[0],\n      setOpenedTrans = _useState4[1];\n\n  var _useState5 = useState({\n    dataList: [],\n    address: \"\",\n    balance: 0,\n    currentPage: 1,\n    last_page: 1,\n    total_items: 50,\n    limit: 50\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      addressState = _useState6[0],\n      setAddressState = _useState6[1];\n\n  var onChangePage = useCallback(function (page) {\n    setAddressState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        currentPage: page\n      });\n    });\n  }, []);\n  useEffect(function () {\n    setLoading(false);\n    API.getAddress(match === null || match === void 0 ? void 0 : match.params.id, addressState.currentPage).then(function (res) {\n      // console.log(res.data)\n      setAddressState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), res.data);\n      });\n      setLoading(true);\n    }).catch(function (err) {\n      console.log(err);\n      history.push('/not-found');\n    }); // eslint-disable-next-line\n  }, [addressState.currentPage, match === null || match === void 0 ? void 0 : match.params.id]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section section-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, words.addressDetails), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, words.address, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text break-all copy__text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 23\n    }\n  }, addressState.address), /*#__PURE__*/React.createElement(CopyItem, {\n    name: words.address,\n    value: addressState.address,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, words.balance, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"amount\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AmountFormat, {\n    type: \"snt\",\n    amount: addressState.balance,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }\n  }), \" SNT\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"amount--dollar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AmountFormat, {\n    type: \"usd\",\n    amount: addressState.balance,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }\n  }))))), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, words.transactionsList), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"transactions__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"transactions-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, words.txnHash), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, words.age), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, words.from), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, words.to), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, words.type), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, words.amount, \" (SNT)\")), addressState.dataList.map(function (trans, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classModifier('transaction', [openedTrans === trans.hash && 'active', addressState.address !== trans.outputs[1].to ? 'out' : 'in']),\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell-mobile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell-mobile__header\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell-mobile__title-block\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link link--ellipsis\",\n      to: ROUTES.setTxRoute(trans.hash),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 33\n      }\n    }, trans.hash), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: trans.timestamp,\n      utc: true,\n      locale: selectedLang,\n      fromNow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 35\n      }\n    }))), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"transaction-cell-mobile__amount\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"snt\",\n      amount: trans.outputs[1].amount,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }), \" SNT\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"show-more\",\n      onClick: function onClick() {\n        return setOpenedTrans(openedTrans === trans.hash ? null : trans.hash);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm tooltip__container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }, words.hash, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link link--ellipsis\",\n      to: ROUTES.setTxRoute(trans.hash),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 29\n      }\n    }, trans.hash), /*#__PURE__*/React.createElement(Tooltip, {\n      text: trans.hash,\n      type: \"hash\",\n      media: \"desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm transaction-cell-mobile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }\n    }, words.block, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link\",\n      to: ROUTES.setBlockRoute(trans.block),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, trans.block)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text tooltip__container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: trans.timestamp,\n      utc: true,\n      locale: selectedLang,\n      fromNow: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      text: /*#__PURE__*/React.createElement(Moment, {\n        date: trans.timestamp,\n        utc: true,\n        locale: selectedLang,\n        format: \"MMMM-DD-YYYY HH:mm:ss +UTC\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 35\n        }\n      }),\n      type: \"timestamp\",\n      media: \"desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm transaction-cell-mobile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, words.age, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: trans.timestamp,\n      utc: true,\n      locale: selectedLang,\n      format: \"MMMM-DD-YYYY HH:mm:ss +UTC\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 31\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm tooltip__container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, words.from, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link link--ellipsis transaction-cell--link-in\",\n      to: ROUTES.setAddressRoute(trans.outputs[0].to),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    }, trans.outputs[0].to), /*#__PURE__*/React.createElement(Tooltip, {\n      text: trans.hash,\n      type: \"hash\",\n      media: \"desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm tooltip__container\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 29\n      }\n    }, words.to, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link link--ellipsis transaction-cell--link-out\",\n      to: ROUTES.setAddressRoute(trans.outputs[1].to),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 31\n      }\n    }, trans.outputs[1].to), /*#__PURE__*/React.createElement(Tooltip, {\n      text: trans.outputs[1].to,\n      type: \"hash\",\n      media: \"desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm vertical-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 29\n      }\n    }, words.type, \":\"), addressState.address !== trans.outputs[1].to ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"status status--type status--failed\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 33\n      }\n    }, words.out) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"status status--type status--completed\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 33\n      }\n    }, words.in)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--desktop\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, addressState.address !== trans.outputs[1].to ? /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"snt\",\n      amount: trans.outputs[0].amount,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 35\n      }\n    }) : /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"snt\",\n      amount: trans.outputs[1].amount,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 35\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm transaction-cell-mobile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 29\n      }\n    }, words.fee, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"snt\",\n      amount: trans.outputs[2].amount,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 31\n      }\n    }), \" SNT\")));\n  })), /*#__PURE__*/React.createElement(Pagination, {\n    pageCount: addressState.last_page,\n    onChange: onChangePage,\n    forcePage: addressState.currentPage - 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"button button--home\",\n    to: ROUTES.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 19\n    }\n  }, words.backToMain))))));\n};\n\nexport default AddressPage;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/scenes/AddressPage/AddressPage.tsx"],"names":["React","useContext","useEffect","useState","useCallback","NavLink","useHistory","useRouteMatch","Moment","API","MultiLangContext","ROUTES","classModifier","Spinner","AmountFormat","CopyItem","Tooltip","Pagination","AddressPage","history","selectedLang","words","match","loading","setLoading","openedTrans","setOpenedTrans","dataList","address","balance","currentPage","last_page","total_items","limit","addressState","setAddressState","onChangePage","page","prevState","getAddress","params","id","then","res","data","catch","err","console","log","push","addressDetails","transactionsList","txnHash","age","from","to","type","amount","map","trans","index","hash","outputs","setTxRoute","timestamp","block","setBlockRoute","setAddressRoute","out","in","fee","main","backToMain"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\nimport { classModifier } from \"../../utils\";\n\nimport { IMatchParams, ITransaction } from \"../../interfaces/interfaces\";\n\nimport Spinner from '../../components/Spinner';\nimport AmountFormat from \"../../components/AmountFormat/AmountFormat\";\nimport CopyItem from '../../components/CopyItem/CopyItem';\nimport Tooltip from \"../../components/Tooltip/Tooltip\";\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport './AddressPage.scss';\n\n\nconst AddressPage = () => {\n  const history = useHistory();\n  const {selectedLang, words} = useContext(MultiLangContext);\n\n  const match = useRouteMatch<IMatchParams>('/address/:id');\n  const [loading, setLoading] = useState(false);\n  const [openedTrans, setOpenedTrans] = useState();\n  const [addressState, setAddressState] = useState<{\n    dataList: ITransaction[];\n    address: string,\n    balance: number,\n    currentPage: number;\n    last_page: number;\n    total_items: number;\n    limit: number;\n  }>({\n    dataList: [],\n    address: \"\",\n    balance: 0,\n    currentPage: 1,\n    last_page: 1,\n    total_items: 50,\n    limit: 50,\n  });\n\n  const onChangePage = useCallback((page) => {\n    setAddressState(prevState => ({\n      ...prevState,\n      currentPage: page,\n    }));\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getAddress(match?.params.id, addressState.currentPage)\n      .then(res => {\n        // console.log(res.data)\n\n        setAddressState(prevState => ({\n          ...prevState,\n          ...res.data,\n        }));\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err)\n\n        history.push('/not-found')\n      });\n\n// eslint-disable-next-line\n  }, [addressState.currentPage, match?.params.id]);\n\n\n  return (\n    <>\n      <section className=\"section section-address\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.addressDetails}</h2>\n\n                <div className=\"details__block\">\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.address}:</h6>\n\n                    <div className=\"copy__block\">\n                      <span className='text break-all copy__text'>{addressState.address}</span>\n\n                      <CopyItem\n                        name={words.address}\n                        value={addressState.address}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.balance}:</h6>\n\n                    <span className=\"amount\">\n                      <AmountFormat\n                        type='snt'\n                        amount={addressState.balance}\n                      /> SNT\n\n                    <span className='amount--dollar'>\n                      <AmountFormat\n                        type='usd'\n                        amount={addressState.balance}\n                      />\n                    </span>\n                  </span>\n                  </div>\n                </div>\n\n                <h2 className=\"title\">{words.transactionsList}</h2>\n\n                <div className=\"transactions__block\">\n                  <div className=\"transactions-header\">\n                    <h6>{words.txnHash}</h6>\n\n                    <h6>{words.age}</h6>\n\n                    <h6>{words.from}</h6>\n\n                    <h6>{words.to}</h6>\n\n                    <h6>{words.type}</h6>\n\n                    <h6>{words.amount} (SNT)</h6>\n                  </div>\n\n                  {\n                    addressState.dataList.map((trans: any, index: number) => {\n                      return (\n                        <div\n                          className={classModifier('transaction',\n                            [\n                              openedTrans === trans.hash && 'active',\n                              (addressState.address !== trans.outputs[1].to)\n                                ? 'out'\n                                : 'in'\n                            ],\n                          )}\n                          key={index}>\n\n                          <div className=\"transaction-cell-mobile\">\n                            <div className=\"transaction-cell-mobile__header\">\n                              <div className=\"transaction-cell-mobile__title-block\">\n                                <NavLink className='link link--ellipsis'\n                                         to={ROUTES.setTxRoute(trans.hash)}>\n                                  {trans.hash}\n                                </NavLink>\n\n                                <span className=\"text\">\n                                  <Moment date={trans.timestamp}\n                                          utc\n                                          locale={selectedLang}\n                                          fromNow\n                                  />\n                                </span>\n                              </div>\n\n                              <span className=\"transaction-cell-mobile__amount\">\n                                <AmountFormat\n                                  type='snt'\n                                  amount={trans.outputs[1].amount}\n                                /> SNT\n                            </span>\n\n                              <button\n                                className='show-more'\n                                onClick={() => setOpenedTrans(openedTrans === trans.hash\n                                  ? null\n                                  : trans.hash\n                                )}\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm tooltip__container\">\n                            <h6 className=\"transaction-cell__name\">{words.hash}:</h6>\n\n                            <NavLink className='link link--ellipsis'\n                                     to={ROUTES.setTxRoute(trans.hash)}>\n                              {trans.hash}\n                            </NavLink>\n\n                            <Tooltip\n                              text={trans.hash}\n                              type='hash'\n                              media='desktop'\n                            />\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm transaction-cell-mobile\">\n                            <h6 className=\"transaction-cell__name\">{words.block}:</h6>\n\n                            <NavLink className='link'\n                                     to={ROUTES.setBlockRoute(trans.block)}>\n                              {trans.block}\n                            </NavLink>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--desktop\">\n                            <span className=\"text tooltip__container\">\n                              <Moment date={trans.timestamp}\n                                      utc\n                                      locale={selectedLang}\n                                      fromNow\n                              />\n\n                              <Tooltip\n                                text={\n                                  <Moment date={trans.timestamp}\n                                          utc\n                                          locale={selectedLang}\n                                          format=\"MMMM-DD-YYYY HH:mm:ss +UTC\"\n                                  />\n                                }\n                                type='timestamp'\n                                media='desktop'\n                              />\n                            </span>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm transaction-cell-mobile\">\n                            <h6 className=\"transaction-cell__name\">{words.age}:</h6>\n\n                            <span className=\"text\">\n                              <Moment date={trans.timestamp}\n                                      utc\n                                      locale={selectedLang}\n                                      format=\"MMMM-DD-YYYY HH:mm:ss +UTC\"\n                              />\n                            </span>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm tooltip__container\">\n                            <h6 className=\"transaction-cell__name\">{words.from}:</h6>\n\n                            <NavLink className='link link--ellipsis transaction-cell--link-in'\n                                     to={ROUTES.setAddressRoute(trans.outputs[0].to)}>\n                              {trans.outputs[0].to}\n                            </NavLink>\n\n                            <Tooltip\n                              text={trans.hash}\n                              type='hash'\n                              media='desktop'\n                            />\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm tooltip__container\">\n                            <h6 className=\"transaction-cell__name\">{words.to}:</h6>\n\n                              <NavLink className='link link--ellipsis transaction-cell--link-out'\n                                       to={ROUTES.setAddressRoute(trans.outputs[1].to)}>\n                                {trans.outputs[1].to}\n                              </NavLink>\n\n                              <Tooltip\n                                text={trans.outputs[1].to}\n                                type='hash'\n                                media='desktop'\n                              />\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm vertical-center\">\n                            <h6 className=\"transaction-cell__name\">{words.type}:</h6>\n\n                            {(addressState.address !== trans.outputs[1].to)\n                              ? <span className='status status--type status--failed'>{words.out}</span>\n                              : <span className='status status--type status--completed'>{words.in}</span>}\n\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--desktop\">\n                            <p className='text'>\n                              {(addressState.address !== trans.outputs[1].to)\n                                ? <AmountFormat\n                                  type='snt'\n                                  amount={trans.outputs[0].amount}\n                                />\n                                : <AmountFormat\n                                  type='snt'\n                                  amount={trans.outputs[1].amount}\n                                />\n                              }\n                            </p>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm transaction-cell-mobile\">\n                            <h6 className=\"transaction-cell__name\">{words.fee}:</h6>\n\n                            <span className=\"text\">\n                              <AmountFormat\n                                type='snt'\n                                amount={trans.outputs[2].amount}\n                              /> SNT\n                            </span>\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n\n                <Pagination\n                  pageCount={addressState.last_page}\n                  onChange={onChangePage}\n                  forcePage={addressState.currentPage - 1}\n                />\n\n                <NavLink className='button button--home'\n                         to={ROUTES.main}>\n                  <span>{words.backToMain}</span>\n                </NavLink>\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default AddressPage;"]},"metadata":{},"sourceType":"module"}