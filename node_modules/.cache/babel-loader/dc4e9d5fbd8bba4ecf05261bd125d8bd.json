{"ast":null,"code":"import _objectSpread from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/src/scenes/BlockPage/BlockPage.tsx\";\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport API from '../../api/api';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport { ROUTES } from '../../config/constants';\nimport Spinner from '../../components/Spinner';\nimport CopyItem from '../../components/CopyItem/CopyItem';\nimport './BlockPage.scss';\n\nvar BlockPage = function BlockPage() {\n  var history = useHistory();\n\n  var _useContext = useContext(MultiLangContext),\n      words = _useContext.words,\n      selectedLang = _useContext.selectedLang;\n\n  var match = useRouteMatch('/block/:id');\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({\n    hash: '',\n    height: 0,\n    previousHash: '',\n    timestamp: 0,\n    txHashes: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      blockState = _useState4[0],\n      setBlockState = _useState4[1];\n\n  useEffect(function () {\n    setLoading(false);\n    API.getBlock(match === null || match === void 0 ? void 0 : match.params.id).then(function (res) {\n      // console.log(res.data)\n      setBlockState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), res.data);\n      });\n      setLoading(true);\n    }).catch(function (err) {\n      console.log(err);\n      history.push('/not-found');\n    }); // eslint-disable-next-line\n  }, [history, match === null || match === void 0 ? void 0 : match.params.id]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section section-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, words.blockDetails), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, words.blockHash, \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"copy__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text break-all copy__text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, blockState.hash), /*#__PURE__*/React.createElement(CopyItem, {\n    name: words.hash,\n    value: blockState.hash,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, words.blockNumber, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }, blockState.height)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, words.timestamp, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Moment, {\n    date: blockState.timestamp,\n    utc: true,\n    locale: selectedLang,\n    fromNow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Moment, {\n    date: blockState.timestamp,\n    utc: true,\n    locale: selectedLang,\n    format: \" (MMMM-DD-YYYY HH:mm:ss +UTC)\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"detail\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"detail__name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }, words.txCount, \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  }, blockState.txHashes.length))), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, words.transactions), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"transaction-links\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, blockState.txHashes.map(function (trans, index) {\n    return /*#__PURE__*/React.createElement(NavLink, {\n      key: index,\n      to: ROUTES.setTxRoute(trans),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text text--700\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, index + 1, \".\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-links__content\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text transaction-links__hash\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, trans), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-links__icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"18\",\n      height: \"18\",\n      viewBox: \"0 0 18 18\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M7.5 9.75001C7.82209 10.1806 8.23302 10.5369 8.70491 10.7947C9.17681 11.0525 9.69863 11.2058 10.235 11.2443C10.7713 11.2827 11.3097 11.2053 11.8135 11.0173C12.3173 10.8294 12.7748 10.5353 13.155 10.155L15.405 7.90501C16.0881 7.19775 16.4661 6.25049 16.4575 5.26725C16.449 4.28401 16.0546 3.34347 15.3593 2.64819C14.664 1.9529 13.7235 1.55852 12.7403 1.54998C11.757 1.54143 10.8098 1.91941 10.1025 2.6025L8.8125 3.885\",\n      stroke: \"#AFB2C1\",\n      strokeWidth: \"2\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M10.5 8.24999C10.1779 7.81939 9.76698 7.4631 9.29509 7.20528C8.82319 6.94746 8.30137 6.79415 7.76501 6.75574C7.22865 6.71732 6.69031 6.79471 6.18649 6.98265C5.68267 7.17059 5.22516 7.46468 4.845 7.84499L2.595 10.095C1.9119 10.8022 1.53393 11.7495 1.54247 12.7327C1.55101 13.716 1.9454 14.6565 2.64068 15.3518C3.33596 16.0471 4.27651 16.4415 5.25974 16.45C6.24298 16.4586 7.19024 16.0806 7.8975 15.3975L9.18 14.115\",\n      stroke: \"#AFB2C1\",\n      strokeWidth: \"2\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    })))));\n  })), /*#__PURE__*/React.createElement(NavLink, {\n    className: \"button button--home\",\n    to: ROUTES.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, words.backToMain))))));\n};\n\nexport default BlockPage;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/scenes/BlockPage/BlockPage.tsx"],"names":["React","useContext","useEffect","useState","NavLink","useHistory","useRouteMatch","Moment","API","MultiLangContext","ROUTES","Spinner","CopyItem","BlockPage","history","words","selectedLang","match","loading","setLoading","hash","height","previousHash","timestamp","txHashes","blockState","setBlockState","getBlock","params","id","then","res","prevState","data","catch","err","console","log","push","blockDetails","blockHash","blockNumber","txCount","length","transactions","map","trans","index","setTxRoute","main","backToMain"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport { ROUTES } from '../../config/constants';\n\nimport { IMatchParams } from '../../interfaces/interfaces';\n\nimport Spinner from '../../components/Spinner';\nimport CopyItem from '../../components/CopyItem/CopyItem';\nimport './BlockPage.scss';\n\nconst BlockPage = () => {\n  const history = useHistory();\n  const { words, selectedLang } = useContext(MultiLangContext);\n  const match = useRouteMatch<IMatchParams>('/block/:id');\n\n  const [loading, setLoading] = useState(false);\n  const [blockState, setBlockState] = useState<{\n    hash: string;\n    height: number;\n    previousHash: string;\n    timestamp: number;\n    txHashes: any;\n  }>({\n    hash: '',\n    height: 0,\n    previousHash: '',\n    timestamp: 0,\n    txHashes: [],\n  });\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getBlock(match?.params.id)\n      .then((res) => {\n        // console.log(res.data)\n\n        setBlockState((prevState) => ({\n          ...prevState,\n          ...res.data,\n        }));\n        setLoading(true);\n      })\n      .catch((err) => {\n        console.log(err);\n\n        history.push('/not-found');\n      });\n    // eslint-disable-next-line\n  }, [history, match?.params.id]);\n\n  return (\n    <>\n      <section className='section section-block'>\n        <div className='container'>\n          {!loading ? (\n            <Spinner />\n          ) : (\n            <>\n              <h2 className='title'>{words.blockDetails}</h2>\n\n              <div className='details__block'>\n                <div className='detail'>\n                  <h6 className='detail__name'>{words.blockHash}:</h6>\n\n                  <div className='copy__block'>\n                    <span className='text break-all copy__text'>\n                      {blockState.hash}\n                    </span>\n\n                    <CopyItem name={words.hash} value={blockState.hash} />\n                  </div>\n                </div>\n\n                <div className='detail'>\n                  <h6 className='detail__name'>{words.blockNumber}:</h6>\n\n                  <span className='text'>{blockState.height}</span>\n                </div>\n\n                <div className='detail'>\n                  <h6 className='detail__name'>{words.timestamp}:</h6>\n\n                  <span className='text'>\n                    <Moment\n                      date={blockState.timestamp}\n                      utc\n                      locale={selectedLang}\n                      fromNow\n                    />\n\n                    <Moment\n                      date={blockState.timestamp}\n                      utc\n                      locale={selectedLang}\n                      format=' (MMMM-DD-YYYY HH:mm:ss +UTC)'\n                    />\n                  </span>\n                </div>\n\n                <div className='detail'>\n                  <h6 className='detail__name'>{words.txCount}:</h6>\n\n                  <span className='text'>{blockState.txHashes.length}</span>\n                </div>\n              </div>\n\n              <h2 className='title'>{words.transactions}</h2>\n\n              <div className='transaction-links'>\n                {blockState.txHashes.map((trans: string, index: number) => {\n                  return (\n                    <NavLink key={index} to={ROUTES.setTxRoute(trans)}>\n                      <span className='text text--700'>{index + 1}.</span>\n\n                      <div className='transaction-links__content'>\n                        <span className='text transaction-links__hash'>\n                          {trans}\n                        </span>\n\n                        <div className='transaction-links__icon'>\n                          <svg\n                            width='18'\n                            height='18'\n                            viewBox='0 0 18 18'\n                            fill='none'\n                            xmlns='http://www.w3.org/2000/svg'\n                          >\n                            <path\n                              d='M7.5 9.75001C7.82209 10.1806 8.23302 10.5369 8.70491 10.7947C9.17681 11.0525 9.69863 11.2058 10.235 11.2443C10.7713 11.2827 11.3097 11.2053 11.8135 11.0173C12.3173 10.8294 12.7748 10.5353 13.155 10.155L15.405 7.90501C16.0881 7.19775 16.4661 6.25049 16.4575 5.26725C16.449 4.28401 16.0546 3.34347 15.3593 2.64819C14.664 1.9529 13.7235 1.55852 12.7403 1.54998C11.757 1.54143 10.8098 1.91941 10.1025 2.6025L8.8125 3.885'\n                              stroke='#AFB2C1'\n                              strokeWidth='2'\n                              strokeLinecap='round'\n                              strokeLinejoin='round'\n                            />\n                            <path\n                              d='M10.5 8.24999C10.1779 7.81939 9.76698 7.4631 9.29509 7.20528C8.82319 6.94746 8.30137 6.79415 7.76501 6.75574C7.22865 6.71732 6.69031 6.79471 6.18649 6.98265C5.68267 7.17059 5.22516 7.46468 4.845 7.84499L2.595 10.095C1.9119 10.8022 1.53393 11.7495 1.54247 12.7327C1.55101 13.716 1.9454 14.6565 2.64068 15.3518C3.33596 16.0471 4.27651 16.4415 5.25974 16.45C6.24298 16.4586 7.19024 16.0806 7.8975 15.3975L9.18 14.115'\n                              stroke='#AFB2C1'\n                              strokeWidth='2'\n                              strokeLinecap='round'\n                              strokeLinejoin='round'\n                            />\n                          </svg>\n                        </div>\n                      </div>\n                    </NavLink>\n                  );\n                })}\n              </div>\n\n              <NavLink className='button button--home' to={ROUTES.main}>\n                <span>{words.backToMain}</span>\n              </NavLink>\n            </>\n          )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default BlockPage;\n"]},"metadata":{},"sourceType":"module"}