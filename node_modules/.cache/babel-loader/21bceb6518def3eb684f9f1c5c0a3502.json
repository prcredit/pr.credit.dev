{"ast":null,"code":"import _slicedToArray from\"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useState}from'react';import{NavLink,useHistory,useRouteMatch}from\"react-router-dom\";import Moment from'react-moment';import API from'../../api/api';import{MultiLangContext}from\"../../context/MultiLang/MultiLang\";import{ROUTES}from\"../../config/constants\";import Spinner from'../../components/Spinner';import AmountFormat from\"../../components/AmountFormat/AmountFormat\";import CopyItem from\"../../components/CopyItem/CopyItem\";import'./TxPage.scss';var TxPage=function TxPage(){var history=useHistory();var _useContext=useContext(MultiLangContext),words=_useContext.words,selectedLang=_useContext.selectedLang;var match=useRouteMatch('/tx/:id');var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),txState=_React$useState2[0],setTxState=_React$useState2[1];useEffect(function(){setLoading(false);API.getTransaction(match===null||match===void 0?void 0:match.params.id).then(function(res){// console.log(res.data)\nsetTxState(res.data);setLoading(true);}).catch(function(err){console.log(err);history.push('/not-found');});// eslint-disable-next-line\n},[match===null||match===void 0?void 0:match.params.id]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"section\",{className:\"section details\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},!loading?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},words.txDetails),/*#__PURE__*/React.createElement(\"div\",{className:\"details__block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.txnHash,\":\"),/*#__PURE__*/React.createElement(\"div\",{className:\"copy__block\"},/*#__PURE__*/React.createElement(\"span\",{className:\"text break-all copy__text\"},txState.hash),/*#__PURE__*/React.createElement(CopyItem,{name:words.hash,value:txState.hash}))),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.status,\":\"),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"status status--\".concat(txState.status)},words.statusTx[txState.status]))),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.block,\":\"),/*#__PURE__*/React.createElement(NavLink,{className:\"link\",to:ROUTES.setBlockRoute(txState.block)},txState.block)),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.timestamp,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"text\"},/*#__PURE__*/React.createElement(Moment,{date:txState.timestamp,utc:true,locale:selectedLang,fromNow:true}),/*#__PURE__*/React.createElement(Moment,{date:txState.timestamp,utc:true,locale:selectedLang,format:\" (MMMM-DD-YYYY HH:mm:ss +UTC)\"}))),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.from,\":\"),/*#__PURE__*/React.createElement(NavLink,{className:\"link\",to:ROUTES.setAddressRoute(txState.addressTo)},txState.addressTo)),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.to,\":\"),/*#__PURE__*/React.createElement(NavLink,{className:\"link\",to:ROUTES.setAddressRoute(txState.addressFrom)},txState.addressFrom)),/*#__PURE__*/React.createElement(\"div\",{className:\"detail\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.fee,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"text\"},txState.fee.toLocaleString('en-EN'),\" SNT\")),/*#__PURE__*/React.createElement(\"div\",{className:\"detail vertical-center\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"detail__name\"},words.value,\":\"),/*#__PURE__*/React.createElement(\"span\",{className:\"amount\"},/*#__PURE__*/React.createElement(AmountFormat,{type:\"snt\",amount:txState.amountTo}),\" SNT\",/*#__PURE__*/React.createElement(\"span\",{className:\"amount--dollar\"},/*#__PURE__*/React.createElement(AmountFormat,{type:\"usd\",amount:txState.amountTo}))))),/*#__PURE__*/React.createElement(NavLink,{className:\"button button--home\",to:ROUTES.main},/*#__PURE__*/React.createElement(\"span\",null,words.backToMain))))));};export default TxPage;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/scenes/TxPage/TxPage.tsx"],"names":["React","useContext","useEffect","useState","NavLink","useHistory","useRouteMatch","Moment","API","MultiLangContext","ROUTES","Spinner","AmountFormat","CopyItem","TxPage","history","words","selectedLang","match","loading","setLoading","txState","setTxState","getTransaction","params","id","then","res","data","catch","err","console","log","push","txDetails","txnHash","hash","status","statusTx","block","setBlockRoute","timestamp","from","setAddressRoute","addressTo","to","addressFrom","fee","toLocaleString","value","amountTo","main","backToMain"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\n\nimport { IMatchParams, ITransaction } from \"../../interfaces/interfaces\";\n\nimport Spinner from '../../components/Spinner';\nimport AmountFormat from \"../../components/AmountFormat/AmountFormat\";\nimport CopyItem from \"../../components/CopyItem/CopyItem\";\nimport './TxPage.scss';\n\n\nconst TxPage = () => {\n  const history = useHistory();\n  const {words, selectedLang} = useContext(MultiLangContext);\n\n  const match = useRouteMatch<IMatchParams>('/tx/:id');\n  const [loading, setLoading] = useState(false);\n\n  const [txState, setTxState] = React.useState<ITransaction | any>();\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getTransaction(match?.params.id)\n      .then(res => {\n        // console.log(res.data)\n\n        setTxState(res.data);\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err)\n\n        history.push('/not-found')\n      });\n    // eslint-disable-next-line\n  }, [match?.params.id]);\n\n\n  return (\n    <>\n      <section className=\"section details\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.txDetails}</h2>\n\n                <div className=\"details__block\">\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.txnHash}:</h6>\n\n                    <div className=\"copy__block\">\n                      <span className='text break-all copy__text'>{txState.hash}</span>\n\n                      <CopyItem\n                        name={words.hash}\n                        value={txState.hash}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.status}:</h6>\n\n                    <div>\n                      <span className={`status status--${txState.status}`}>\n                        {(words.statusTx as any)[txState.status]}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.block}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setBlockRoute(txState.block)}>\n                      {txState.block}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.timestamp}:</h6>\n\n                    <span className=\"text\">\n                      <Moment date={txState.timestamp}\n                              utc\n                              locale={selectedLang}\n                              fromNow\n                      />\n\n                      <Moment date={txState.timestamp}\n                              utc\n                              locale={selectedLang}\n                              format=\" (MMMM-DD-YYYY HH:mm:ss +UTC)\"\n                      />\n                    </span>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.from}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setAddressRoute(txState.addressTo)}>\n                      {txState.addressTo}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.to}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setAddressRoute(txState.addressFrom)}>\n                      {txState.addressFrom}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.fee}:</h6>\n\n                    <span className=\"text\">\n                      {(txState.fee).toLocaleString('en-EN')} SNT\n                    </span>\n                  </div>\n\n                  <div className=\"detail vertical-center\">\n                    <h6 className=\"detail__name\">{words.value}:</h6>\n\n                    <span className=\"amount\">\n                      <AmountFormat\n                        type='snt'\n                        amount={txState.amountTo}\n                      /> SNT\n\n                      <span className='amount--dollar'>\n                        <AmountFormat\n                          type='usd'\n                          amount={txState.amountTo}\n                        />\n                      </span>\n                    </span>\n                  </div>\n                </div>\n\n                <NavLink className='button button--home'\n                         to={ROUTES.main}>\n                  <span>{words.backToMain}</span>\n                </NavLink>\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default TxPage;"]},"metadata":{},"sourceType":"module"}