{"ast":null,"code":"import _slicedToArray from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from 'react';\nexport default (function (type, size) {\n  var _useState = useState(type === 'IS_GREATER_THAN' ? window.innerWidth >= size : window.innerWidth <= size),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  useEffect(function () {\n    var onResize = function onResize() {\n      return setValue(type === 'IS_GREATER_THAN' ? window.innerWidth >= size : window.innerWidth <= size);\n    };\n\n    window.addEventListener('resize', onResize);\n    return function () {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [size, type]);\n  return value;\n});\n/*\n  Usage Example:\n\n  const isDesktop = useCheckWindowSize('IS_GREATER_THAN', MEDIA_SIZES.desktop);\n\n  const isMobile = useCheckWindowSize('IS_LESS_THAN', MEDIA_SIZES.miniTablet)\n*/","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/hooks/useCheckWindowSize.ts"],"names":["useState","useEffect","type","size","window","innerWidth","value","setValue","onResize","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAIA,gBAAe,UAACC,IAAD,EAAkBC,IAAlB,EAAmC;AAAA,kBACtBH,QAAQ,CAChCE,IAAI,KAAK,iBAAT,GACIE,MAAM,CAACC,UAAP,IAAqBF,IADzB,GAEIC,MAAM,CAACC,UAAP,IAAqBF,IAHO,CADc;AAAA;AAAA,MACzCG,KADyC;AAAA,MAClCC,QADkC;;AAOhDN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,QAAQ,GAAG,SAAXA,QAAW;AAAA,aACfD,QAAQ,CACNL,IAAI,KAAK,iBAAT,GACIE,MAAM,CAACC,UAAP,IAAqBF,IADzB,GAEIC,MAAM,CAACC,UAAP,IAAqBF,IAHnB,CADO;AAAA,KAAjB;;AAOAC,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCD,QAAlC;AAEA,WAAO,YAAM;AACXJ,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCF,QAArC;AACD,KAFD;AAGD,GAbQ,EAaN,CAACL,IAAD,EAAOD,IAAP,CAbM,CAAT;AAeA,SAAOI,KAAP;AACD,CAvBD;AAwBA","sourcesContent":["import { useState, useEffect } from 'react';\n\ntype CheckType = 'IS_LESS_THAN' | 'IS_GREATER_THAN';\n\nexport default (type: CheckType, size: number) => {\n  const [value, setValue] = useState<boolean>(\n    type === 'IS_GREATER_THAN'\n      ? window.innerWidth >= size\n      : window.innerWidth <= size\n  );\n\n  useEffect(() => {\n    const onResize = () =>\n      setValue(\n        type === 'IS_GREATER_THAN'\n          ? window.innerWidth >= size\n          : window.innerWidth <= size\n      );\n\n    window.addEventListener('resize', onResize);\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [size, type]);\n\n  return value;\n};\n/*\n  Usage Example:\n\n  const isDesktop = useCheckWindowSize('IS_GREATER_THAN', MEDIA_SIZES.desktop);\n\n  const isMobile = useCheckWindowSize('IS_LESS_THAN', MEDIA_SIZES.miniTablet)\n*/\n"]},"metadata":{},"sourceType":"module"}