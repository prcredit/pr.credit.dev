{"ast":null,"code":"import _objectSpread from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/vetal-home-work/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/apps/sincere/explorer-front/src/scenes/MainPage/MainPage.tsx\";\n\nimport React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport API from '../../api/api';\nimport { ROUTES } from '../../config/constants';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport { classModifier } from '../../utils';\nimport AmountFormat from '../../components/AmountFormat/AmountFormat';\nimport Spinner from '../../components/Spinner';\nimport Pagination from '../../components/Pagination/Pagination';\nimport './MainPage.scss';\n\nvar MainPage = function MainPage() {\n  var _useContext = useContext(MultiLangContext),\n      selectedLang = _useContext.selectedLang;\n\n  var _useContext2 = useContext(MultiLangContext),\n      words = _useContext2.words;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState({\n    data: [],\n    currentPage: 1,\n    last_page: 1,\n    total_items: 50,\n    limit: 50\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      transactionsState = _useState4[0],\n      setTransactionsState = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openedTrans = _useState6[0],\n      setOpenedTrans = _useState6[1];\n\n  var onChangePage = useCallback(function (page) {\n    setTransactionsState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        currentPage: page\n      });\n    });\n  }, []);\n  useEffect(function () {\n    setLoading(false);\n    API.getTransactions(transactionsState.currentPage).then(function (res) {\n      // console.log(res.data)\n      setTransactionsState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), res.data);\n      });\n      setLoading(true);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, [transactionsState.currentPage]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"section-main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, !loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, words.lastTransactions), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"transactions__block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"transactions-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, words.block), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, words.hash), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, words.date), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, words.time, \" (UTC+0)\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, words.amount, \" (SNT)\")), transactionsState.data.map(function (trans, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classModifier('transaction', [openedTrans === trans.hash && 'active']),\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, words.block, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link\",\n      to: ROUTES.setBlockRoute(trans.block),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, trans.block)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--main\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, words.hash, \":\"), /*#__PURE__*/React.createElement(NavLink, {\n      className: \"link link--ellipsis main--link\",\n      to: ROUTES.setTxRoute(trans.hash),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, trans.hash), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"show-more\",\n      onClick: function onClick() {\n        return setOpenedTrans(openedTrans === trans.hash ? null : trans.hash);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, words.date, \":\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: trans.timestamp,\n      utc: true,\n      locale: selectedLang,\n      format: \"DD.MM.YYYY\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, words.time, \" (UTC+0):\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Moment, {\n      date: trans.timestamp,\n      utc: true,\n      locale: \"ru\",\n      format: \"HH:mm:ss\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"transaction-cell transaction-cell--sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"transaction-cell__name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 25\n      }\n    }, words.value, \":\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"amount\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"snt\",\n      amount: trans.amountTo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"amount--sm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 27\n      }\n    }, \" SNT\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"amount--sm amount--dollar\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(AmountFormat, {\n      type: \"usd\",\n      amount: trans.amountTo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    })))));\n  })), /*#__PURE__*/React.createElement(Pagination, {\n    pageCount: transactionsState.last_page,\n    onChange: onChangePage,\n    forcePage: transactionsState.currentPage - 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default MainPage;","map":{"version":3,"sources":["/home/vetal-home-work/Документы/apps/sincere/explorer-front/src/scenes/MainPage/MainPage.tsx"],"names":["React","useContext","useEffect","useState","useCallback","NavLink","Moment","API","ROUTES","MultiLangContext","classModifier","AmountFormat","Spinner","Pagination","MainPage","selectedLang","words","loading","setLoading","data","currentPage","last_page","total_items","limit","transactionsState","setTransactionsState","openedTrans","setOpenedTrans","onChangePage","page","prevState","getTransactions","then","res","catch","err","console","log","lastTransactions","block","hash","date","time","amount","map","trans","index","setBlockRoute","setTxRoute","timestamp","value","amountTo"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { ROUTES } from '../../config/constants';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport { classModifier } from '../../utils';\n\nimport { ITransaction } from '../../interfaces/interfaces';\n\nimport AmountFormat from '../../components/AmountFormat/AmountFormat';\nimport Spinner from '../../components/Spinner';\nimport Pagination from '../../components/Pagination/Pagination';\nimport './MainPage.scss';\n\nconst MainPage = () => {\n  const { selectedLang } = useContext(MultiLangContext);\n  const { words } = useContext(MultiLangContext);\n\n  const [loading, setLoading] = useState(false);\n  const [transactionsState, setTransactionsState] = useState<{\n    data: ITransaction[];\n    currentPage: number;\n    last_page: number;\n    total_items: number;\n    limit: number;\n  }>({\n    data: [],\n    currentPage: 1,\n    last_page: 1,\n    total_items: 50,\n    limit: 50,\n  });\n\n  const [openedTrans, setOpenedTrans] = useState();\n\n  const onChangePage = useCallback((page) => {\n    setTransactionsState((prevState) => ({\n      ...prevState,\n      currentPage: page,\n    }));\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getTransactions(transactionsState.currentPage)\n      .then((res) => {\n        // console.log(res.data)\n\n        setTransactionsState((prevState) => {\n          return {\n            ...prevState,\n            ...res.data,\n          };\n        });\n        setLoading(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [transactionsState.currentPage]);\n\n  return (\n    <>\n      <section className='section-main'>\n        <div className='container'>\n          {!loading ? (\n            <Spinner />\n          ) : (\n            <>\n              <h2 className='title'>{words.lastTransactions}</h2>\n\n              <div className='transactions__block'>\n                <div className='transactions-header'>\n                  <h6>{words.block}</h6>\n\n                  <h6>{words.hash}</h6>\n\n                  <h6>{words.date}</h6>\n\n                  <h6>{words.time} (UTC+0)</h6>\n\n                  <h6>{words.amount} (SNT)</h6>\n                </div>\n\n                {transactionsState.data.map((trans: any, index: number) => {\n                  return (\n                    <div\n                      className={classModifier('transaction', [\n                        openedTrans === trans.hash && 'active',\n                      ])}\n                      key={index}\n                    >\n                      <div className='transaction-cell transaction-cell--sm'>\n                        <h6 className='transaction-cell__name'>\n                          {words.block}:\n                        </h6>\n\n                        <NavLink\n                          className='link'\n                          to={ROUTES.setBlockRoute(trans.block)}\n                        >\n                          {trans.block}\n                        </NavLink>\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--main'>\n                        <h6 className='transaction-cell__name'>\n                          {words.hash}:\n                        </h6>\n\n                        <NavLink\n                          className='link link--ellipsis main--link'\n                          to={ROUTES.setTxRoute(trans.hash)}\n                        >\n                          {trans.hash}\n                        </NavLink>\n\n                        <button\n                          className='show-more'\n                          onClick={() =>\n                            setOpenedTrans(\n                              openedTrans === trans.hash ? null : trans.hash\n                            )\n                          }\n                        />\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--sm'>\n                        <h6 className='transaction-cell__name'>\n                          {words.date}:\n                        </h6>\n\n                        <p className='text'>\n                          <Moment\n                            date={trans.timestamp}\n                            utc\n                            locale={selectedLang}\n                            format='DD.MM.YYYY'\n                          />\n                        </p>\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--sm'>\n                        <h6 className='transaction-cell__name'>\n                          {words.time} (UTC+0):\n                        </h6>\n\n                        <p className='text'>\n                          <Moment\n                            date={trans.timestamp}\n                            utc\n                            locale='ru'\n                            format='HH:mm:ss'\n                          />\n                        </p>\n                      </div>\n\n                      <div className='transaction-cell transaction-cell--sm'>\n                        <h6 className='transaction-cell__name'>\n                          {words.value}:\n                        </h6>\n\n                        <p className='amount'>\n                          <AmountFormat type='snt' amount={trans.amountTo} />\n\n                          <span className='amount--sm'> SNT</span>\n\n                          <span className='amount--sm amount--dollar'>\n                            <AmountFormat type='usd' amount={trans.amountTo} />\n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n\n              <Pagination\n                pageCount={transactionsState.last_page}\n                onChange={onChangePage}\n                forcePage={transactionsState.currentPage - 1}\n              />\n            </>\n          )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}