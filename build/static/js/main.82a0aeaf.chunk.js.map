{"version":3,"sources":["api/api.ts","ducks/info.ts","config/api-config.ts","store/index.ts","config/constants.ts","context/MultiLang/MultiLang.tsx","context/MultiLang/words/ru.ts","context/MultiLang/words/en.ts","utils/classModifier.ts","utils/classGenerator.ts","hooks/useCheckWindowSize.ts","containers/Header/Header.tsx","utils/checkerRedirect.ts","containers/Footer/Footer.tsx","components/AmountFormat/AmountFormat.tsx","components/Spinner.tsx","components/Pagination/Pagination.tsx","scenes/MainPage/MainPage.tsx","components/CopyItem/CopyItem.tsx","utils/copyToClipboard.ts","scenes/BlockPage/BlockPage.tsx","scenes/TxPage/TxPage.tsx","components/Tooltip/Tooltip.tsx","scenes/AddressPage/AddressPage.tsx","scenes/NotFound/NotFound.tsx","containers/Statistic/Statistic.tsx","containers/Search/Search.tsx","App.tsx","index.tsx"],"names":["axios","get","page","block","hash","address","getInfo","list","dispatch","type","initialState","host","window","location","hostname","prodHosts","ENV","includes","defaults","baseURL","PROD","api","RELEASE","DEV","interceptors","response","use","Promise","resolve","error","reject","rootReducer","combineReducers","data","state","action","middleware","thunk","logger","createStore","compose","applyMiddleware","ROUTES","tx","wallet","MEDIA_SIZES","LINK_ROUTES","facebookEn","instagramEn","youtubeEn","telegramEn","facebookRu","instagramRu","youtubeRu","telegramRu","words","ru","blocks","transactions","addresses","price","find","searchPlaceholder","lastTransactions","date","time","amount","age","in","out","fee","blockDetails","txDetails","addressDetails","status","txnHash","statusTx","timestamp","from","to","value","blockHash","blockNumber","txCount","backToMain","balance","transactionsList","copyrights","followUs","copy","toClipboard","copied","noResults","specifyRequest","en","defaultLang","lsLang","localStorage","getItem","navigator","language","MultiLangContext","createContext","changeLang","lang","selectedLang","displayName","MultiLangProvider","props","useState","setState","useCallback","newWords","prevState","setItem","Provider","mainClass","modifier","result","Array","isArray","forEach","restClass","split","filter","className","join","size","innerWidth","setValue","useEffect","onResize","addEventListener","removeEventListener","withRouter","history","useHistory","isOpenMenu","setOpenMenu","useContext","isDesktop","useCheckWindowSize","mobileChangeLang","query","search","test","slice","reduce","params","param","key","decodeURIComponent","replace","classGenerator","onClick","pathname","href","target","rel","src","origin","alt","Footer","id","Date","getFullYear","width","height","viewBox","fill","xmlns","d","connect","loading","setLoading","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","Number","Spinner","color","style","defaultProps","containerClassName","pageClassName","activeClassName","pageLinkClassName","nextClassName","previousClassName","breakClassName","iconNext","iconPrev","Pagination","onChange","pageCount","pageRangeDisplayed","marginPagesDisplayed","forcePage","onPageChange","e","selected","nextLabel","previousLabel","MainPage","currentPage","last_page","total_items","limit","transactionsState","setTransactionsState","openedTrans","setOpenedTrans","onChangePage","API","then","res","catch","err","console","log","map","trans","index","classModifier","utc","locale","format","fromNow","amountTo","CopyItem","name","isShown","setIsShown","onCopy","text","textField","document","createElement","innerText","body","appendChild","select","execCommand","remove","copyToClipboard","setTimeout","BlockPage","match","useRouteMatch","previousHash","txHashes","blockState","setBlockState","push","length","TxPage","React","txState","setTxState","addressFrom","addressTo","Tooltip","media","AddressPage","dataList","addressState","setAddressState","amountFrom","NotFound","useLocation","wallets","infoState","setInfoState","Search","searchState","setSearchState","searchButton","inputValue","prev","onKeyPress","placeholder","App","useDispatch","a","exact","path","component","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.82a0aeaf.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nconst getInfo = () => {\n  return axios.get(`/info`);\n}\n\nconst getTransactions = (page: number) => {\n  return axios.get(`/transactions/last_transactions/${page}`);\n}\n\nconst getBlock = (block: string | undefined) => {\n  return axios.get(`/blocks/block?hash=${block}`);\n}\n\nconst getTransaction = (hash: string | undefined) => {\n  return axios.get(`/transactions/transaction?hash=${hash}`);\n}\n\nconst getAddress = (address: string | undefined, page: number) => {\n  return axios.get(`/address/${address}/${page}`);\n}\n\nexport default {\n  getInfo,\n  getTransactions,\n  getBlock,\n  getTransaction,\n  getAddress,\n}","import { Dispatch } from \"redux\";\nimport API from \"../api/api\";\n\nimport { IInfo } from \"../interfaces/interfaces\";\nimport { IInfoState, IAction } from \"./ducks.types\";\n\n\nexport const GET_INFO = 'GET_INFO';\n\nexport const getInfo = (list: IInfo) => (dispatch: Dispatch): void => {\n  dispatch({\n    type: GET_INFO,\n    list: list,\n  })\n}\n\nexport const updateUserInfo = () => (dispatch: Dispatch): void => {\n  API.getInfo()\n    .then((res: any) => {\n      dispatch({\n        type: GET_INFO,\n        list: res.data,\n      })\n    })\n    .catch((err: any) => {\n      console.log(err)\n    });\n}\n\nconst initialState: IInfoState = {\n  list: {} as IInfo,\n}\n\nexport default (state = initialState, action: IAction) => {\n  switch (action.type) {\n    case GET_INFO: {\n      return {\n        ...state,\n        list: action.list as IInfo,\n      }\n    }\n\n    default:\n      return state;\n  }\n}","import axios from 'axios';\n\nimport { Env } from '../interfaces/interfaces';\n\nconst host = window.location.hostname;\nconst prodHosts = ['explorer.sn-token.io'];\nconst releaseHosts = ['explorer-release.ourstage.app'];\n\nexport const ENV: Env = (() => {\n  if (releaseHosts.includes(host)) {\n    return 'RELEASE';\n  }\n  return prodHosts.includes(host)\n    ? 'PROD'\n    : 'DEV';\n})();\n\nconst baseURL = {\n  PROD: {\n    api: 'https://snode-api.sn-token.io',\n  },\n  RELEASE: {\n    api: 'https://snode-release.ourstage.app',\n  },\n  DEV: {\n    api: 'https://snode.ourstage.app',\n    // api: 'https://snode-api.sn-token.io', // for test prod api\n  },\n}\n\naxios.defaults.baseURL = baseURL[ENV].api;\n\naxios.interceptors.response.use(\n  response => { // Do something with response data\n    return Promise.resolve(response);\n  },\n  error => { // Do something with response error\n    return Promise.reject(error);\n  });\n","import {\n  combineReducers,\n  compose,\n  createStore,\n  applyMiddleware,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport userReducer from '../ducks/info';\nimport { ENV } from '../config/api-config';\n\n\nconst rootReducer = combineReducers({\n  data: userReducer,\n});\nconst middleware = ENV === 'PROD'\n  ? [thunk]\n  : [thunk, logger];\n\nexport type AppState = ReturnType<typeof rootReducer>;\n\n\nexport default createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(...middleware),\n  ),\n);\n\n\n// import { createStore, applyMiddleware, compose } from 'redux';\n//\n// import thunk from 'redux-thunk';\n// import logger from 'redux-logger';\n//\n// import rootReducer from '../reducers';\n//\n//\n// const store = createStore(\n//   rootReducer,\n//   compose(\n//     applyMiddleware(thunk, logger),\n//     // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n//   )\n// );\n//\n// export default store;","export const ROUTES = {\n  main: '/',\n  block: '/block/:block',\n  setBlockRoute: (block: string) => `/block/${block}`,\n  tx: '/tx/:tx',\n  setTxRoute: (tx: string) => `/tx/${tx}`,\n  address: '/address/:address',\n  setAddressRoute: (wallet: string) => `/address/${wallet}`,\n  notFound: '/not-found',\n}\n\nexport const MEDIA_SIZES = {\n  desktop: 1260,\n  tablet: 991,\n  miniTablet: 768,\n}\n\nexport const LINK_ROUTES = {\n  system: 'https://s-forex.io',\n  wallet: 'https://s-wallet.ai',\n  token: 'https://sn-token.io',\n  pharmaceutical: 'https://s-pharmaceutical.io',\n  ipo: 'https://s-ipo.io',\n  cabinet: 'https://backoffice.s-group.io/personal-office',\n\n  walletCabinet: 'https://pay.s-wallet.ai/cabinet',\n  signIn: 'https://backoffice.s-group.io/sign_in',\n  signUp: 'https://backoffice.s-group.io/sign_up',\n\n  social: {\n    facebookEn: 'https://www.facebook.com/SGroup.en',\n    instagramEn: 'https://www.instagram.com/SGroup_en',\n    youtubeEn: 'https://www.youtube.com/channel/UCjMumEGncMkciO9txuG1Cjg',\n    telegramEn: 'https://t.me/SGroup_en',\n\n    facebookRu: 'https://www.facebook.com/SGroup.ru',\n    instagramRu: 'https://www.instagram.com/SGroup_ru',\n    youtubeRu: 'https://www.youtube.com/channel/UCjMumEGncMkciO9txuG1Cjg',\n    telegramRu: 'https://t.me/SGroup_ru',\n  }\n}","import React, { createContext, useState, useCallback } from 'react';\n\nimport ru from './words/ru';\nimport en from './words/en';\n\nimport {\n  IAllLanguagesWords,\n  IMultiLangState,\n} from './MultiLang.types';\n\n\nexport type IMultiLangWords = ReturnType<() => typeof en>;\n\n\nconst words: IAllLanguagesWords = {\n  ru,\n  en,\n}\nconst defaultLang: string = ((): string => {\n  const lsLang = localStorage.getItem('lang');\n\n  if (!!lsLang) {\n    return lsLang;\n  }\n\n  switch (navigator.language) {\n    case 'en-US':\n      return 'en';\n    case 'ru-RU':\n      return 'ru';\n    default:\n      return !!navigator.language && !!words[navigator.language]\n        ? navigator.language\n        : 'en';\n  }\n})();\n\nconst MultiLangContext = createContext<IMultiLangState>({\n  words: words[defaultLang],\n  changeLang: (lang: string) => { },\n  selectedLang: '',\n});\n\nMultiLangContext.displayName = 'MultiLangContext';\n\nconst MultiLangProvider = (props: any) => {\n  const [state, setState] = useState({\n    selectedLang: defaultLang,\n    words: words[defaultLang],\n  });\n\n  const changeLang = useCallback((lang: string) => {\n    const newWords = words[lang];\n\n    setState(prevState => {\n      if (prevState.selectedLang === lang || !newWords) {\n        return prevState;\n      }\n      localStorage.setItem('lang', lang);\n\n      return {\n        selectedLang: lang,\n        words: newWords,\n      }\n    });\n  }, []);\n\n  const value: IMultiLangState = {\n    words: state.words,\n    selectedLang: state.selectedLang,\n    changeLang,\n  }\n\n  return <MultiLangContext.Provider\n    {...props}\n    value={value}\n  />\n}\n\nexport { MultiLangContext, MultiLangProvider };","export default {\n  // Statistic\n  blocks: 'Блоки',\n  transactions: 'Транзакции',\n  addresses: 'Адреса',\n  price: 'Цена',\n\n  // Search\n  find: 'Поиск',\n  searchPlaceholder: 'Поиск по Блоку / Транзакции / Адресу',\n\n  // Transactions\n  lastTransactions: 'Последние транзакции',\n  block: 'Блок',\n  hash: 'Хэш',\n  date: 'Дата',\n  time: 'Время',\n  amount: 'Сумма',\n  age: 'Период',\n  type: 'Тип',\n  in: 'in',\n  out: 'out',\n  fee: 'Комиссия',\n\n  // Details\n  blockDetails: 'Детали блока',\n  txDetails: 'Детали транзакции',\n  addressDetails: 'Детали адреса',\n  status: 'Статус',\n  txnHash: 'Txn Хэш',\n  statusTx: {\n    'confirmed': 'Завершено',\n    'processing': 'В Процессе',\n    'rejected': 'Отменено',\n  },\n  timestamp: 'Timestamp',\n  from: 'От',\n  to: 'На',\n  value: 'Сумма',\n  blockHash: 'Хэш блока',\n  blockNumber: 'Номер блока',\n  txCount: 'Количество транзакций',\n  backToMain: 'Главная',\n\n  // Address\n  address: 'Адрес',\n  balance: 'Баланс',\n  transactionsList: 'Список транзакций',\n\n  // Footer\n  copyrights: 'Все права защищены.',\n  followUs: 'Мы в соц. сетях',\n\n  // Global\n  copy: 'Скопировать',\n  toClipboard: 'в буфер обмена',\n  copied: 'Скопировано',\n\n  // Not-found\n  noResults: 'Нет результатов',\n  specifyRequest: 'Пожалуйста, проверьте ваш запрос',\n}","export default {\n  // Statistic\n  blocks: 'Blocks',\n  transactions: 'Transactions',\n  addresses: 'Addresses',\n  price: 'Price',\n\n  // Search\n  find: 'Find',\n  searchPlaceholder: 'Search by Block / Transaction / Address',\n\n  // Transactions\n  lastTransactions: 'Last Transactions',\n  block: 'Block',\n  hash: 'Hash',\n  date: 'Date',\n  time: 'Time',\n  amount: 'Amount',\n  age: 'Age',\n  type: 'Type',\n  in: 'in',\n  out: 'out',\n  fee: 'Fee',\n\n  // Details\n  blockDetails: 'Block Details',\n  txDetails: 'Transaction Details',\n  addressDetails: 'Address Details',\n  txnHash: 'Txn Hash',\n  status: 'Status',\n  statusTx: {\n    'confirmed': 'completed',\n    'processing': 'processing',\n    'rejected': 'failed',\n  },\n  timestamp: 'Timestamp',\n  from: 'From',\n  to: 'To',\n  value: 'Value',\n  blockHash: 'Block hash',\n  blockNumber: 'Block number',\n  txCount: 'Transaction count',\n  backToMain: 'back to main page',\n\n  // Address\n  address: 'Address',\n  balance: 'Balance',\n  transactionsList: 'Transactions List',\n\n  // Footer\n  copyrights: 'All rights reserved.',\n  followUs: 'Follow Us',\n\n  // Global\n  copy: 'Copy',\n  toClipboard: 'to clipboard',\n  copied: 'Copied',\n\n  // Not-found\n  noResults: 'No Results',\n  specifyRequest: 'Please specify your request',\n}","export default (mainClass: string, modifier: string | Array<string | boolean> = ''): string => {\n  if (!modifier) {\n    return mainClass;\n  }\n\n  let result: string = mainClass;\n\n  if (!Array.isArray(modifier)) {\n    return result += ` ${mainClass}--${modifier}`;\n  }\n\n  modifier.forEach(modifier => {\n    if (modifier) {\n      result += ` ${mainClass}--${modifier}`;\n    }\n  });\n\n  return result;\n};\n","export default (mainClass: string, restClass: string | Array<string | boolean> = '') => {\n  if (!restClass) {\n    return mainClass;\n  }\n  if (!Array.isArray(restClass)) {\n    restClass = restClass.split(' ');\n  }\n  restClass = restClass.filter(className => className);\n\n  return [mainClass, ...restClass].join(' ');\n};","import { useState, useEffect } from 'react';\n\n\ntype CheckType = 'IS_LESS_THAN' | 'IS_GREATER_THAN';\n\n\nexport default (type: CheckType, size: number) => {\n  const [value, setValue] = useState<boolean>(\n    type === 'IS_GREATER_THAN'\n      ? window.innerWidth >= size\n      : window.innerWidth <= size\n  );\n\n  useEffect(() => {\n    const onResize = () => setValue(type === 'IS_GREATER_THAN'\n      ? window.innerWidth >= size\n      : window.innerWidth <= size\n    );\n\n    window.addEventListener('resize', onResize);\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n    };\n  }, [size, type]);\n\n  return value;\n}\n/*\n  Usage Example:\n\n  const isDesktop = useCheckWindowSize('IS_GREATER_THAN', MEDIA_SIZES.desktop);\n\n  const isMobile = useCheckWindowSize('IS_LESS_THAN', MEDIA_SIZES.miniTablet)\n*/","import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\n\nimport { LINK_ROUTES, ROUTES, MEDIA_SIZES } from '../../config/constants';\nimport { classGenerator } from '../../utils';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport { useCheckWindowSize } from '../../hooks';\nimport {useHistory} from 'react-router-dom';\n\nimport checkerRedirect from \"../../utils/checkerRedirect\";\n\nimport './Header.scss';\n\n\nconst Header = (props: any) => {\n  const history = useHistory();\n  const [isOpenMenu, setOpenMenu] = useState(false);\n\n  const {\n    selectedLang,\n    changeLang,\n  } = useContext(MultiLangContext);\n\n  const isDesktop = useCheckWindowSize('IS_GREATER_THAN', MEDIA_SIZES.tablet);\n\n  const mobileChangeLang = (lang: string) => {\n    changeLang(lang);\n    if (!isDesktop) {\n      setOpenMenu(!isOpenMenu);\n    }\n  }\n\n  useEffect(() => {\n    const lang = checkerRedirect(history.location.search).lang;\n\n    !!lang && changeLang(lang);\n    // eslint-disable-next-line\n  }, [history.location.search])\n\n\n  return (\n    <>\n      <header className=\"header\">\n        <div className=\"header__container\">\n          <button\n            className={classGenerator('header__bars', [isOpenMenu && 'open'])}\n            onClick={() => setOpenMenu(!isOpenMenu)}\n          />\n\n          <NavLink className='header__logotype'\n                   to={{\n                     pathname: ROUTES.main,\n                     hash: \"#statistic\",\n                   }}/>\n\n          <div className=\"header__nav-wrapper\">\n            <nav className=\"header__nav\">\n              <div className=\"header__links\">\n                <a href='/' className=\"header__link--active\">\n                  S-Explorer\n                </a>\n\n                <a href={LINK_ROUTES.token}\n                   target='_blank' rel=\"noopener noreferrer\">\n                  S-Token\n                </a>\n\n                {/* temp fix jira-294 */}\n                {/*<a href={LINK_ROUTES.walletCabinet}*/}\n                {/*   target='_blank' rel=\"noopener noreferrer\">*/}\n                {/*  S-Wallet*/}\n                {/*</a>*/}\n              </div>\n\n              <div className=\"header__select select\">\n                <div\n                  className={classGenerator('select__current', [\n                    selectedLang === 'ru' && 'ru',\n                    selectedLang === 'en' && 'en',\n                  ])}\n                >\n                  <span/>\n                </div>\n\n                <ul className=\"select__countrylist\">\n                  <li\n                    className={classGenerator('select__item select__item_ru', [\n                      selectedLang === 'ru' && 'active',\n                    ])}\n                    onClick={() => mobileChangeLang('ru')}\n                  >\n                    <img src={`${window.location.origin}/media/images/icons/ru.svg`} alt=\"\"/> <span>Русский</span>\n                  </li>\n\n                  <li\n                    className={classGenerator('select__item select__item_en', [\n                      selectedLang === 'en' && 'active',\n                    ])}\n                    onClick={() => mobileChangeLang('en')}\n                  >\n                    <img src={`${window.location.origin}/media/images/icons/en.svg`} alt=\"\"/> <span>English</span>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n          </div>\n        </div>\n      </header>\n    </>\n  )\n};\n\nexport default withRouter(Header);","export default (query: string) => {\n  return query\n    ? (/^[?#]/.test(query) ? query.slice(1) : query)\n      .split('&')\n      .reduce((params: any, param) => {\n          let [key, value] = param.split('=');\n          params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\n          return params;\n        }, {}\n      )\n    : {}\n}","import React, { useContext } from 'react';\nimport { NavLink } from \"react-router-dom\";\n\nimport { LINK_ROUTES, ROUTES } from \"../../config/constants\";\nimport {MultiLangContext} from '../../context/MultiLang/MultiLang';\n\nimport './Footer.scss';\n\n\nconst Footer = () => {\n  const {\n    selectedLang,\n    words,\n  } = useContext(MultiLangContext);\n\n\n  return (\n    <footer id='footer' className=\"footer\">\n      <div className=\"container\">\n        <div className=\"footer__top\">\n          <NavLink className='footer__logotype'\n                   to={{\n                     pathname: ROUTES.main,\n                     hash: \"#statistic\",\n                   }}>\n            <img src=\"/media/images/svg/logotype-light.svg\" alt='' />\n          </NavLink>\n\n          <nav className=\"footer__nav\">\n            <a href={LINK_ROUTES.token}\n               target='_blank' rel=\"noopener noreferrer\">\n              S-Token\n            </a>\n\n            {/* temp fix jira-294 */}\n            {/*<a href={LINK_ROUTES.walletCabinet}*/}\n            {/*   target='_blank' rel=\"noopener noreferrer\">*/}\n            {/*  S-Wallet*/}\n            {/*</a>*/}\n          </nav>\n        </div>\n\n        <div className=\"footer__bottom\">\n          <p className=\"footer__copyright\">Copyright © {new Date().getFullYear()}, S-Group Ltd</p>\n\n          <div className=\"footer__social\">\n            <p>{words.followUs}</p>\n\n            <div className=\"social\">\n              <a href={selectedLang === 'ru' ? LINK_ROUTES.social.telegramRu : LINK_ROUTES.social.telegramEn}\n                 target='_blank' rel=\"noopener noreferrer\" >\n                <svg width=\"13\" height=\"11\" viewBox=\"0 0 13 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M12.2501 1.45703L10.3907 10.1523C10.2448 10.7721 9.90761 10.9362 9.37896 10.6445L6.56255 8.56641L5.19537 9.87891C5.01308 10.0612 4.82167 10.1523 4.62115 10.1523L4.8399 7.28125L10.0626 2.57812C10.1902 2.45052 10.1902 2.3776 10.0626 2.35938C9.95318 2.32292 9.83469 2.35026 9.70709 2.44141L3.25396 6.51562L0.464898 5.64062C0.155002 5.54948 0.00916884 5.41276 0.027398 5.23047C0.0456272 5.04818 0.237033 4.89323 0.601617 4.76562L11.4571 0.554688C11.7305 0.463542 11.9493 0.5 12.1133 0.664062C12.2774 0.809896 12.323 1.07422 12.2501 1.45703Z\"\n                    fill=\"white\"/>\n                </svg>\n              </a>\n\n              <a href={selectedLang === 'ru' ? LINK_ROUTES.social.instagramRu : LINK_ROUTES.social.instagramEn}\n                 target='_blank' rel=\"noopener noreferrer\" >\n                <svg width=\"13\" height=\"13\" viewBox=\"0 0 13 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M4.12054 4.14955C4.77827 3.49182 5.57143 3.16295 6.5 3.16295C7.42857 3.16295 8.21205 3.49182 8.85045 4.14955C9.50818 4.78795 9.83705 5.57143 9.83705 6.5C9.83705 7.42857 9.50818 8.22173 8.85045 8.87946C8.21205 9.51786 7.42857 9.83705 6.5 9.83705C5.57143 9.83705 4.77827 9.51786 4.12054 8.87946C3.48214 8.22173 3.16295 7.42857 3.16295 6.5C3.16295 5.57143 3.48214 4.78795 4.12054 4.14955ZM4.96205 8.03795C5.38765 8.46354 5.9003 8.67634 6.5 8.67634C7.0997 8.67634 7.61235 8.46354 8.03795 8.03795C8.46354 7.61235 8.67634 7.0997 8.67634 6.5C8.67634 5.9003 8.46354 5.38765 8.03795 4.96205C7.61235 4.53646 7.0997 4.32366 6.5 4.32366C5.9003 4.32366 5.38765 4.53646 4.96205 4.96205C4.53646 5.38765 4.32366 5.9003 4.32366 6.5C4.32366 7.0997 4.53646 7.61235 4.96205 8.03795ZM10.5045 2.49554C10.6592 2.63095 10.7366 2.80506 10.7366 3.01786C10.7366 3.23065 10.6592 3.41443 10.5045 3.5692C10.369 3.72396 10.1949 3.80134 9.98214 3.80134C9.76934 3.80134 9.58557 3.72396 9.4308 3.5692C9.27604 3.41443 9.19866 3.23065 9.19866 3.01786C9.19866 2.80506 9.27604 2.63095 9.4308 2.49554C9.58557 2.34077 9.76934 2.26339 9.98214 2.26339C10.1949 2.26339 10.369 2.34077 10.5045 2.49554ZM12.971 3.83036C12.9903 4.35268 13 5.24256 13 6.5C13 7.75744 12.9903 8.64732 12.971 9.16964C12.9129 10.3497 12.5551 11.2686 11.8973 11.9263C11.2589 12.5647 10.3497 12.9033 9.16964 12.942C8.64732 12.9807 7.75744 13 6.5 13C5.24256 13 4.35268 12.9807 3.83036 12.942C2.6503 12.8839 1.74107 12.5357 1.10268 11.8973C0.85119 11.6652 0.648065 11.3943 0.493304 11.0848C0.338542 10.7753 0.22247 10.4754 0.145089 10.1853C0.0870536 9.89509 0.0580357 9.55655 0.0580357 9.16964C0.0193452 8.64732 0 7.75744 0 6.5C0 5.24256 0.0193452 4.34301 0.0580357 3.80134C0.116071 2.64062 0.464286 1.74107 1.10268 1.10268C1.74107 0.444941 2.6503 0.0870536 3.83036 0.0290179C4.35268 0.00967262 5.24256 0 6.5 0C7.75744 0 8.64732 0.00967262 9.16964 0.0290179C10.3497 0.0870536 11.2589 0.444941 11.8973 1.10268C12.5551 1.74107 12.9129 2.6503 12.971 3.83036ZM11.5781 10.3304C11.6362 10.1756 11.6845 9.98214 11.7232 9.75C11.7619 9.49851 11.7909 9.20833 11.8103 8.87946C11.8296 8.53125 11.8393 8.25074 11.8393 8.03795C11.8393 7.82515 11.8393 7.5253 11.8393 7.13839C11.8393 6.75149 11.8393 6.53869 11.8393 6.5C11.8393 6.44196 11.8393 6.22917 11.8393 5.86161C11.8393 5.4747 11.8393 5.17485 11.8393 4.96205C11.8393 4.74926 11.8296 4.47842 11.8103 4.14955C11.7909 3.80134 11.7619 3.51116 11.7232 3.27902C11.6845 3.02753 11.6362 2.8244 11.5781 2.66964C11.346 2.06994 10.9301 1.65402 10.3304 1.42188C10.1756 1.36384 9.97247 1.31548 9.72098 1.27679C9.48884 1.2381 9.19866 1.20908 8.85045 1.18973C8.52158 1.17039 8.25074 1.16071 8.03795 1.16071C7.84449 1.16071 7.54464 1.16071 7.13839 1.16071C6.75149 1.16071 6.53869 1.16071 6.5 1.16071C6.46131 1.16071 6.24851 1.16071 5.86161 1.16071C5.4747 1.16071 5.17485 1.16071 4.96205 1.16071C4.74926 1.16071 4.46875 1.17039 4.12054 1.18973C3.79167 1.20908 3.50149 1.2381 3.25 1.27679C3.01786 1.31548 2.8244 1.36384 2.66964 1.42188C2.06994 1.65402 1.65402 2.06994 1.42188 2.66964C1.36384 2.8244 1.31548 3.02753 1.27679 3.27902C1.2381 3.51116 1.20908 3.80134 1.18973 4.14955C1.17039 4.47842 1.16071 4.74926 1.16071 4.96205C1.16071 5.15551 1.16071 5.45536 1.16071 5.86161C1.16071 6.24851 1.16071 6.46131 1.16071 6.5C1.16071 6.57738 1.16071 6.76116 1.16071 7.05134C1.16071 7.32217 1.16071 7.55432 1.16071 7.74777C1.16071 7.92187 1.16071 8.15402 1.16071 8.4442C1.18006 8.73437 1.1994 8.98586 1.21875 9.19866C1.2381 9.39211 1.26711 9.59524 1.3058 9.80804C1.34449 10.0208 1.38318 10.1949 1.42188 10.3304C1.67336 10.9301 2.08929 11.346 2.66964 11.5781C2.8244 11.6362 3.01786 11.6845 3.25 11.7232C3.50149 11.7619 3.79167 11.7909 4.12054 11.8103C4.46875 11.8296 4.73958 11.8393 4.93304 11.8393C5.14583 11.8393 5.44568 11.8393 5.83259 11.8393C6.23884 11.8393 6.46131 11.8393 6.5 11.8393C6.55804 11.8393 6.77083 11.8393 7.13839 11.8393C7.5253 11.8393 7.82515 11.8393 8.03795 11.8393C8.25074 11.8393 8.52158 11.8296 8.85045 11.8103C9.19866 11.7909 9.48884 11.7619 9.72098 11.7232C9.97247 11.6845 10.1756 11.6362 10.3304 11.5781C10.9301 11.3266 11.346 10.9107 11.5781 10.3304Z\"\n                    fill=\"white\"/>\n                </svg>\n              </a>\n\n              <a href={selectedLang === 'ru' ? LINK_ROUTES.social.facebookRu : LINK_ROUTES.social.facebookEn}\n                 target='_blank' rel=\"noopener noreferrer\"  >\n                <svg width=\"7\" height=\"12\" viewBox=\"0 0 7 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M6 6.75H4.24219V12H1.89844V6.75H0V4.57031H1.89844V2.92969C1.89844 2.30469 2.01562 1.77344 2.25 1.33594C2.48438 0.898438 2.8125 0.570312 3.23438 0.351562C3.67188 0.117188 4.17188 0 4.73438 0C4.98438 0 5.25 0.015625 5.53125 0.046875C5.8125 0.0625 6.03125 0.0859375 6.1875 0.117188L6.42188 0.140625V1.99219H5.48438C5.04688 1.99219 4.72656 2.10938 4.52344 2.34375C4.33594 2.5625 4.24219 2.83594 4.24219 3.16406V4.57031H6.32812L6 6.75Z\"\n                    fill=\"white\"/>\n                </svg>\n              </a>\n\n              <a href={selectedLang === 'ru' ? LINK_ROUTES.social.youtubeRu : LINK_ROUTES.social.youtubeEn}\n                 target='_blank' rel=\"noopener noreferrer\"  >\n                <svg width=\"13\" height=\"10\" viewBox=\"0 0 13 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path\n                    d=\"M12.7381 1.5625C12.7857 1.77083 12.8254 2.03125 12.8571 2.34375C12.9048 2.65625 12.9365 2.96875 12.9524 3.28125C12.9683 3.57639 12.9762 3.85417 12.9762 4.11458C12.9921 4.375 13 4.59201 13 4.76562V5C13 6.5625 12.9127 7.71701 12.7381 8.46354C12.6587 8.75868 12.5159 9.0191 12.3095 9.24479C12.1032 9.47049 11.8571 9.62674 11.5714 9.71354C11.2698 9.80035 10.6984 9.86979 9.85714 9.92188C9.01587 9.9566 8.24603 9.98264 7.54762 10H6.5C3.78571 10 2.09524 9.90451 1.42857 9.71354C0.809524 9.52257 0.420635 9.1059 0.261905 8.46354C0.18254 8.13368 0.119048 7.68229 0.0714286 7.10938C0.0396825 6.5191 0.015873 6.02431 0 5.625V5C0 3.45486 0.0873016 2.30903 0.261905 1.5625C0.34127 1.25 0.484127 0.980903 0.690476 0.755208C0.896825 0.529514 1.14286 0.373264 1.42857 0.286458C1.73016 0.199653 2.30159 0.138889 3.14286 0.104167C3.98413 0.0520833 4.75397 0.0173611 5.45238 0H6.5C9.21429 0 10.9048 0.0954861 11.5714 0.286458C11.8571 0.373264 12.1032 0.529514 12.3095 0.755208C12.5159 0.980903 12.6587 1.25 12.7381 1.5625ZM5.16667 7.13542L8.57143 5L5.16667 2.89062V7.13542Z\"\n                    fill=\"white\"/>\n                </svg>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n};\n\nexport default Footer;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { AppState } from '../../store';\n\nimport { IInfo } from \"../../interfaces/interfaces\";\n\n\ninterface IAmountFormatProps {\n  data: IInfo;\n  type: 'usd' | 'snt';\n  amount: number;\n}\n\n\nconst AmountFormat = (props: IAmountFormatProps) => {\n  const {\n    data,\n    type,\n    amount,\n  } = props;\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (!isNaN(data.price)) {\n      setLoading(true);\n    }\n  }, [data.price]);\n\n\n  return (\n    <>\n      {type === 'snt' &&\n      (\n        <>\n          {amount.toLocaleString('en-EN', {\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 4\n          })}\n        </>\n      )\n      }\n\n      {type === 'usd' &&\n      (!loading\n        ? (\n          <>($0)</>\n        )\n        : (\n          <>\n            (${(amount * Number(data.price)).toLocaleString('en-EN', {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2\n          })})\n          </>\n        ))\n      }\n    </>\n  )\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  data: state.data.list,\n});\n\nexport default connect(mapStateToProps)(AmountFormat)","import React from 'react';\n\nimport '../styles/spinner.scss';\n\n\nconst Spinner = (props: any) => {\n  const {\n    size = '30px',\n    color = 'black',\n    className = '',\n    style = {},\n  } = props;\n\n  return (\n    <div\n      className={`spinner spinner--${color} ${className}`}\n      style={{\n        width: size,\n        height: size,\n        ...style,\n      }}\n    />\n  )\n};\n\nexport default Spinner;","import React from 'react';\nimport ReactPaginate from 'react-paginate';\n\nimport { IPaginationProps } from \"./Pagination.types\";\n\nimport './Pagination.scss';\n\n\nconst defaultProps = {\n  containerClassName: 'pagination',\n  pageClassName: 'pagination__page',\n  activeClassName: 'pagination__page--active',\n  pageLinkClassName: 'pagination__page-link',\n  nextClassName: 'pagination__nav pagination__nav--next',\n  previousClassName: 'pagination__nav pagination__nav--prev',\n  breakClassName: 'pagination__break',\n}\nconst iconNext = (\n  <svg width=\"7\" height=\"13\" viewBox=\"0 0 7 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0.236568 11.5527C-0.0788559 11.8838 -0.0788559 12.4206 0.236568 12.7517C0.551991 13.0828 1.06339 13.0828 1.37882 12.7517L6.76343 7.0995C7.07886 6.76841 7.07886 6.23159 6.76343 5.9005L1.37882 0.248323C1.06339 -0.0827742 0.551991 -0.0827742 0.236568 0.248323C-0.0788559 0.579419 -0.0788559 1.11623 0.236568 1.44733L5.05006 6.5L0.236568 11.5527Z\" fill=\"#33AA7E\"/>\n  </svg>\n);\nconst iconPrev = (\n  <svg width=\"7\" height=\"13\" viewBox=\"0 0 7 13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M6.76343 11.5527C7.07886 11.8838 7.07886 12.4206 6.76343 12.7517C6.44801 13.0828 5.93661 13.0828 5.62118 12.7517L0.236567 7.0995C-0.0788565 6.76841 -0.0788565 6.23159 0.236567 5.9005L5.62118 0.248323C5.93661 -0.0827742 6.44801 -0.0827742 6.76343 0.248323C7.07886 0.579419 7.07886 1.11623 6.76343 1.44733L1.94994 6.5L6.76343 11.5527Z\" fill=\"#33AA7E\"/>\n  </svg>\n);\n\n\nconst Pagination = (props: IPaginationProps) => {\n  const {\n    onChange,\n    pageCount,\n    pageRangeDisplayed = 1,\n    marginPagesDisplayed = 2,\n    forcePage,\n  } = props;\n\n\n  return (\n    <div className='pagination__wrap'>\n      <ReactPaginate\n        {...defaultProps}\n        pageCount={pageCount}\n        pageRangeDisplayed={pageRangeDisplayed}\n        marginPagesDisplayed={marginPagesDisplayed}\n        onPageChange={e => onChange(e.selected + 1)}\n        forcePage={forcePage}\n        nextLabel={(<>\n          {iconNext}\n        </>)}\n        previousLabel={(<>\n          {iconPrev}\n        </>)}\n      />\n    </div>\n  )\n}\n\nexport default Pagination;","import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MEDIA_SIZES, ROUTES } from '../../config/constants';\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport { classModifier } from \"../../utils\";\nimport { useCheckWindowSize } from \"../../hooks\";\nimport { ITransaction } from \"../../interfaces/interfaces\";\n\nimport AmountFormat from '../../components/AmountFormat/AmountFormat';\nimport Spinner from '../../components/Spinner';\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport './MainPage.scss';\n\n\nconst MainPage = () => {\n  const {selectedLang} = useContext(MultiLangContext);\n  const {words} = useContext(MultiLangContext);\n  const isDesktop = useCheckWindowSize('IS_GREATER_THAN', MEDIA_SIZES.tablet);\n\n  const [loading, setLoading] = useState(false);\n  const [transactionsState, setTransactionsState] = useState<{\n    data: ITransaction[];\n    currentPage: number;\n    last_page: number;\n    total_items: number;\n    limit: number;\n  }>({\n    data: [],\n    currentPage: 1,\n    last_page: 1,\n    total_items: 50,\n    limit: 50,\n  });\n\n  const [openedTrans, setOpenedTrans] = useState();\n\n  const onChangePage = useCallback((page) => {\n    setTransactionsState(prevState => ({\n      ...prevState,\n      currentPage: page,\n    }));\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getTransactions(transactionsState.currentPage)\n      .then(res => {\n        // console.log(res.data)\n\n        setTransactionsState(prevState => {\n          return {\n            ...prevState,\n            ...res.data,\n          }\n        })\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err)\n      });\n  }, [transactionsState.currentPage]);\n\n\n  return (\n    <>\n      <section className=\"section-main\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.lastTransactions}</h2>\n\n                <div className=\"transactions__block\">\n                  <div className=\"transactions-header\">\n                    <h6>{words.block}</h6>\n\n                    <h6>{words.hash}</h6>\n\n                    <h6>{words.date}</h6>\n\n                    <h6>{words.time} (UTC+0)</h6>\n\n                    <h6>{words.amount} (SNT)</h6>\n                  </div>\n\n                  {\n                    transactionsState.data.map((trans: any, index: number) => {\n                      return (\n                        <div\n                          className={classModifier('transaction', [\n                            openedTrans === trans.hash && 'active'\n                          ])}\n                          key={index}>\n\n                          <div className=\"transaction-cell transaction-cell--sm\">\n                            <h6 className=\"transaction-cell__name\">{words.block}:</h6>\n\n                            <NavLink className='link'\n                                     to={ROUTES.setBlockRoute(trans.block)}>\n                              {trans.block}\n                            </NavLink>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--main\">\n                            <h6 className=\"transaction-cell__name\">{words.hash}:</h6>\n\n                            <NavLink className='link link--ellipsis main--link'\n                                     to={ROUTES.setTxRoute(trans.hash)}>\n                              {trans.hash}\n                            </NavLink>\n\n                            <button\n                              className='show-more'\n                              onClick={() => setOpenedTrans(openedTrans === trans.hash\n                                ? null\n                                : trans.hash\n                              )}\n                            />\n                          </div>\n\n                          {isDesktop\n                            ? <>\n                              <div className=\"transaction-cell transaction-cell--sm\">\n                                <h6 className=\"transaction-cell__name\">{words.date}:</h6>\n\n                                <p className='text'>\n                                  <Moment date={trans.timestamp}\n                                          utc\n                                          locale={selectedLang}\n                                          format=\"DD.MM.YYYY\"\n                                  />\n                                </p>\n                              </div>\n\n                              <div className=\"transaction-cell transaction-cell--sm\">\n                                <h6 className=\"transaction-cell__name\">{words.time} (UTC+0):</h6>\n\n                                <p className='text'>\n                                  <Moment date={trans.timestamp}\n                                          utc\n                                          locale='ru'\n                                          format='HH:mm:ss'\n                                  />\n                                </p>\n                              </div>\n                            </>\n\n                            : <>\n                              <div className=\"transaction-cell transaction-cell--sm\">\n                                <h6 className=\"transaction-cell__name\">{words.timestamp}:</h6>\n\n                                <p className='text'>\n                                  <Moment date={trans.timestamp}\n                                          utc\n                                          locale={selectedLang}\n                                          fromNow\n                                  />\n\n                                  <Moment date={trans.timestamp}\n                                          utc\n                                          locale={selectedLang}\n                                          format=\" (MMMM-DD-YYYY HH:mm:ss +UTC)\"\n                                  />\n                                </p>\n                              </div>\n                            </>\n                          }\n\n                          <div className=\"transaction-cell transaction-cell--sm\">\n                            <h6 className=\"transaction-cell__name\">{words.value}:</h6>\n\n                            <p className='amount'>\n                              <AmountFormat\n                                type='snt'\n                                amount={trans.amountTo}\n                              />\n\n                              <span className='amount--sm'> SNT</span>\n\n                              <span className='amount--sm amount--dollar'>\n                                <AmountFormat\n                                  type='usd'\n                                  amount={trans.amountTo}\n                                />\n                              </span>\n                            </p>\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n\n\n                {transactionsState.last_page !== 1 &&\n                <Pagination\n                  pageCount={transactionsState.last_page}\n                  onChange={onChangePage}\n                  forcePage={transactionsState.currentPage - 1}\n                />\n                }\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default MainPage;","import React, {useState, useContext} from 'react';\n\nimport {MultiLangContext} from \"../../context/MultiLang/MultiLang\";\nimport {classModifier, copyToClipboard} from '../../utils';\n\nimport { ICopyItemProps } from \"./CopyItem.types\";\n\nimport './CopyItem.scss';\n\n\nconst CopyItem = (props: ICopyItemProps) => {\n  const {\n    name,\n    value,\n  } = props;\n\n  const {words} = useContext(MultiLangContext);\n  const [isShown, setIsShown] = useState(false);\n\n\n  const onCopy = () => {\n    copyToClipboard(value);\n\n    setIsShown(true);\n\n    setTimeout(() => {\n      setIsShown(false);\n    }, 3000)\n  };\n\n\n  return (\n    <>\n      <div className={classModifier('copy__icon',\n        [\n          isShown && 'done'\n        ],\n      )}\n           onClick={() => onCopy()}\n      >\n      </div>\n\n      <div className={classModifier('copy-tooltip',\n        [\n          isShown && 'done'\n        ],\n      )}\n      >\n        <p className=\"text copy-tooltip__text\">\n          {/*<span className='text--700'></span>*/}\n          {!isShown\n            ? <>{words.copy} {name} {words.toClipboard}</>\n            : <>{words.copied}</>\n          }\n        </p>\n      </div>\n    </>\n  )\n};\n\nexport default CopyItem;","export default (text: string) => {\n  const textField = document.createElement('textarea');\n  textField.innerText = text;\n  document.body.appendChild(textField);\n  textField.select();\n  document.execCommand('copy');\n  textField.remove();\n};","import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\n\nimport { IMatchParams } from \"../../interfaces/interfaces\";\n\nimport Spinner from '../../components/Spinner';\nimport CopyItem from \"../../components/CopyItem/CopyItem\";\nimport './BlockPage.scss';\n\n\nconst BlockPage = () => {\n  const history = useHistory();\n  const {words, selectedLang} = useContext(MultiLangContext);\n  const match = useRouteMatch<IMatchParams>('/block/:id');\n\n  const [loading, setLoading] = useState(false);\n  const [blockState, setBlockState] = useState<{\n    hash: string;\n    height: number;\n    previousHash: string;\n    timestamp: number;\n    txHashes: any;\n  }>({\n    hash: '',\n    height: 0,\n    previousHash: '',\n    timestamp: 0,\n    txHashes: [],\n  });\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getBlock(match?.params.id)\n      .then(res => {\n        // console.log(res.data)\n\n        setBlockState(prevState => ({\n          ...prevState,\n          ...res.data,\n        }));\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err);\n\n        history.push('/not-found')\n      });\n    // eslint-disable-next-line\n  }, [history, match?.params.id]);\n\n\n  return (\n    <>\n      <section className=\"section section-block\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.blockDetails}</h2>\n\n                <div className=\"details__block\">\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.blockHash}:</h6>\n\n                    <div className=\"copy__block\">\n                      <span className='text break-all copy__text'>{blockState.hash}</span>\n\n                      <CopyItem\n                        name={words.hash}\n                        value={blockState.hash}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.blockNumber}:</h6>\n\n                    <span className=\"text\">\n                    {blockState.height}\n                  </span>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.timestamp}:</h6>\n\n                    <span className=\"text\">\n                      <Moment date={blockState.timestamp}\n                              utc\n                              locale={selectedLang}\n                              fromNow\n                      />\n\n                      <Moment date={blockState.timestamp}\n                              utc\n                              locale={selectedLang}\n                              format=\" (MMMM-DD-YYYY HH:mm:ss +UTC)\"\n                      />\n                    </span>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.txCount}:</h6>\n\n                    <span className=\"text\">\n                    {blockState.txHashes.length}\n                  </span>\n                  </div>\n                </div>\n\n                <h2 className=\"title\">{words.transactions}</h2>\n\n                <div className=\"transaction-links\">\n                  {\n                    blockState.txHashes.map((trans: string, index: number) => {\n                      return (\n                        <div key={index}\n                             className='transaction-links__content'>\n                          <span className=\"text text--700\">{index + 1}.</span>\n\n                          <NavLink to={ROUTES.setTxRoute(trans)}\n                                   className=\"transaction-links__hash\">\n                            {trans}\n                          </NavLink>\n\n                          <div className='transaction-links__icon'>\n                            <CopyItem\n                              name={words.hash}\n                              value={trans}\n                            />\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n\n                <NavLink className='button button--home'\n                         to={ROUTES.main}>\n                  <span>{words.backToMain}</span>\n                </NavLink>\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default BlockPage;","import React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from \"react-router-dom\";\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\n\nimport { IMatchParams, ITransaction } from \"../../interfaces/interfaces\";\n\nimport Spinner from '../../components/Spinner';\nimport AmountFormat from \"../../components/AmountFormat/AmountFormat\";\nimport CopyItem from \"../../components/CopyItem/CopyItem\";\nimport './TxPage.scss';\n\n\nconst TxPage = () => {\n  const history = useHistory();\n  const {words, selectedLang} = useContext(MultiLangContext);\n\n  const match = useRouteMatch<IMatchParams>('/tx/:id');\n  const [loading, setLoading] = useState(false);\n\n  const [txState, setTxState] = React.useState<ITransaction | any>();\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getTransaction(match?.params.id)\n      .then(res => {\n        // console.log(res.data)\n\n        setTxState(res.data);\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err)\n\n        history.push('/not-found')\n      });\n    // eslint-disable-next-line\n  }, [match?.params.id]);\n\n\n  return (\n    <>\n      <section className=\"section details\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.txDetails}</h2>\n\n                <div className=\"details__block\">\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.txnHash}:</h6>\n\n                    <div className=\"copy__block\">\n                      <span className='text break-all copy__text'>{txState.hash}</span>\n\n                      <CopyItem\n                        name={words.hash}\n                        value={txState.hash}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.status}:</h6>\n\n                    <div>\n                      <span className={`status status--${txState.status}`}>\n                        {(words.statusTx as any)[txState.status]}\n                      </span>\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.block}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setBlockRoute(txState.block)}>\n                      {txState.block}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.timestamp}:</h6>\n\n                    <span className=\"text\">\n                      <Moment date={txState.timestamp}\n                              utc\n                              locale={selectedLang}\n                              fromNow\n                      />\n\n                      <Moment date={txState.timestamp}\n                              utc\n                              locale={selectedLang}\n                              format=\" (MMMM-DD-YYYY HH:mm:ss +UTC)\"\n                      />\n                    </span>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.from}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setAddressRoute(txState.addressFrom)}>\n                      {txState.addressFrom}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.to}:</h6>\n\n                    <NavLink className='link'\n                             to={ROUTES.setAddressRoute(txState.addressTo)}>\n                      {txState.addressTo}\n                    </NavLink>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.fee}:</h6>\n\n                    <span className=\"text\">\n                      {(txState.fee).toLocaleString('en-EN')} SNT\n                    </span>\n                  </div>\n\n                  <div className=\"detail vertical-center\">\n                    <h6 className=\"detail__name\">{words.value}:</h6>\n\n                    <span className=\"amount\">\n                      <AmountFormat\n                        type='snt'\n                        amount={txState.amountTo}\n                      /> SNT\n\n                      <span className='amount--dollar'>\n                        <AmountFormat\n                          type='usd'\n                          amount={txState.amountTo}\n                        />\n                      </span>\n                    </span>\n                  </div>\n                </div>\n\n                <NavLink className='button button--home'\n                         to={ROUTES.main}>\n                  <span>{words.backToMain}</span>\n                </NavLink>\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default TxPage;","import React from 'react';\n\nimport { ITooltipProps } from \"./Tooltip.types\";\n\nimport './Tooltip.scss';\n\n\nconst Tooltip = (props: ITooltipProps) => {\n  const {\n    text,\n    type,\n    media,\n  } = props;\n\n\n  return (\n    <div className={`tooltip tooltip--${type} tooltip--${media}`}>\n      <p className='tooltip__text'>\n        {text}\n      </p>\n    </div>\n  )\n};\n\nexport default Tooltip;","import React, { useContext, useEffect, useState, useCallback } from 'react';\nimport { NavLink, useHistory, useRouteMatch } from 'react-router-dom';\n\nimport Moment from 'react-moment';\n\nimport API from '../../api/api';\nimport { MultiLangContext } from \"../../context/MultiLang/MultiLang\";\nimport { ROUTES } from \"../../config/constants\";\nimport { classModifier } from \"../../utils\";\n\nimport { IMatchParams, ITransaction } from \"../../interfaces/interfaces\";\n\nimport Spinner from '../../components/Spinner';\nimport AmountFormat from \"../../components/AmountFormat/AmountFormat\";\nimport CopyItem from '../../components/CopyItem/CopyItem';\nimport Tooltip from \"../../components/Tooltip/Tooltip\";\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport './AddressPage.scss';\n\n\nconst AddressPage = () => {\n  const history = useHistory();\n  const {selectedLang, words} = useContext(MultiLangContext);\n\n  const match = useRouteMatch<IMatchParams>('/address/:id');\n  const [loading, setLoading] = useState(false);\n  const [openedTrans, setOpenedTrans] = useState();\n  const [addressState, setAddressState] = useState<{\n    dataList: ITransaction[];\n    address: string,\n    balance: number,\n    currentPage: number;\n    last_page: number;\n    total_items: number;\n    limit: number;\n  }>({\n    dataList: [],\n    address: \"\",\n    balance: 0,\n    currentPage: 1,\n    last_page: 1,\n    total_items: 50,\n    limit: 50,\n  });\n\n  const onChangePage = useCallback((page) => {\n    setAddressState(prevState => ({\n      ...prevState,\n      currentPage: page,\n    }));\n  }, []);\n\n  useEffect(() => {\n    setLoading(false);\n\n    API.getAddress(match?.params.id, addressState.currentPage)\n      .then(res => {\n        // console.log(res.data)\n\n        setAddressState(prevState => ({\n          ...prevState,\n          ...res.data,\n        }));\n        setLoading(true);\n      })\n      .catch(err => {\n        console.log(err)\n\n        history.push('/not-found')\n      });\n\n// eslint-disable-next-line\n  }, [addressState.currentPage, match?.params.id]);\n\n\n  return (\n    <>\n      <section className=\"section section-address\">\n        <div className=\"container\">\n          {!loading\n            ? (\n              <Spinner/>\n            )\n            : (\n              <>\n                <h2 className=\"title\">{words.addressDetails}</h2>\n\n                <div className=\"details__block\">\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.address}:</h6>\n\n                    <div className=\"copy__block\">\n                      <span className='text break-all copy__text'>{addressState.address}</span>\n\n                      <CopyItem\n                        name={words.address}\n                        value={addressState.address}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"detail\">\n                    <h6 className=\"detail__name\">{words.balance}:</h6>\n\n                    <span className=\"amount\">\n                      <AmountFormat\n                        type='snt'\n                        amount={addressState.balance}\n                      /> SNT\n\n                    <span className='amount--dollar'>\n                      <AmountFormat\n                        type='usd'\n                        amount={addressState.balance}\n                      />\n                    </span>\n                  </span>\n                  </div>\n                </div>\n\n                <h2 className=\"title\">{words.transactionsList}</h2>\n\n                <div className=\"transactions__block\">\n                  <div className=\"transactions-header\">\n                    <h6>{words.txnHash}</h6>\n\n                    <h6>{words.age}</h6>\n\n                    <h6>{words.from}</h6>\n\n                    <h6>{words.to}</h6>\n\n                    <h6>{words.type}</h6>\n\n                    <h6>{words.amount} (SNT)</h6>\n                  </div>\n\n                  {\n                    addressState.dataList.map((trans: any, index: number) => {\n                      return (\n                        <div\n                          className={classModifier('transaction',\n                            [\n                              openedTrans === trans.hash && 'active',\n                              (addressState.address !== trans.addressTo)\n                                ? 'out'\n                                : 'in'\n                            ],\n                          )}\n                          key={index}>\n\n                          <div className=\"transaction-cell-mobile\">\n                            <div className=\"transaction-cell-mobile__header\">\n                              <div className=\"transaction-cell-mobile__title-block\">\n                                <NavLink className='link link--ellipsis'\n                                         to={ROUTES.setTxRoute(trans.hash)}>\n                                  {trans.hash}\n                                </NavLink>\n\n                                <span className=\"text\">\n                                  <Moment date={trans.timestamp}\n                                          utc\n                                          locale={selectedLang}\n                                          fromNow\n                                  />\n                                </span>\n                              </div>\n\n                              <span className=\"transaction-cell-mobile__amount\">\n                                <AmountFormat\n                                  type='snt'\n                                  amount={trans.amountTo}\n                                /> SNT\n                            </span>\n\n                              <button\n                                className='show-more'\n                                onClick={() => setOpenedTrans(openedTrans === trans.hash\n                                  ? null\n                                  : trans.hash\n                                )}\n                              />\n                            </div>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm tooltip__container\">\n                            <h6 className=\"transaction-cell__name\">{words.hash}:</h6>\n\n                            <NavLink className='link link--ellipsis'\n                                     to={ROUTES.setTxRoute(trans.hash)}>\n                              {trans.hash}\n                            </NavLink>\n\n                            <Tooltip\n                              text={trans.hash}\n                              type='hash'\n                              media='desktop'\n                            />\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm transaction-cell-mobile\">\n                            <h6 className=\"transaction-cell__name\">{words.block}:</h6>\n\n                            <NavLink className='link'\n                                     to={ROUTES.setBlockRoute(trans.block)}>\n                              {trans.block}\n                            </NavLink>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--desktop\">\n                            <span className=\"text tooltip__container\">\n                              <Moment date={trans.timestamp}\n                                      utc\n                                      locale={selectedLang}\n                                      fromNow\n                              />\n\n                              <Tooltip\n                                text={\n                                  <Moment date={trans.timestamp}\n                                          utc\n                                          locale={selectedLang}\n                                          format=\"MMMM-DD-YYYY HH:mm:ss +UTC\"\n                                  />\n                                }\n                                type='timestamp'\n                                media='desktop'\n                              />\n                            </span>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm transaction-cell-mobile\">\n                            <h6 className=\"transaction-cell__name\">{words.age}:</h6>\n\n                            <span className=\"text\">\n                              <Moment date={trans.timestamp}\n                                      utc\n                                      locale={selectedLang}\n                                      format=\"MMMM-DD-YYYY HH:mm:ss +UTC\"\n                              />\n                            </span>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm tooltip__container\">\n                            <h6 className=\"transaction-cell__name\">{words.from}:</h6>\n\n                            <NavLink className='link link--ellipsis transaction-cell--link-in'\n                                     to={ROUTES.setAddressRoute(trans.addressFrom)}>\n                              {trans.addressFrom}\n                            </NavLink>\n\n                            <Tooltip\n                              text={trans.addressFrom}\n                              type='hash'\n                              media='desktop'\n                            />\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm tooltip__container\">\n                            <h6 className=\"transaction-cell__name\">{words.to}:</h6>\n\n                              <NavLink className='link link--ellipsis transaction-cell--link-out'\n                                       to={ROUTES.setAddressRoute(trans.addressTo)}>\n                                {trans.addressTo}\n                              </NavLink>\n\n                              <Tooltip\n                                text={trans.addressTo}\n                                type='hash'\n                                media='desktop'\n                              />\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm vertical-center\">\n                            <h6 className=\"transaction-cell__name\">{words.type}:</h6>\n\n                            {(addressState.address !== trans.addressTo)\n                              ? <span className='status status--type status--failed'>{words.out}</span>\n                              : <span className='status status--type status--completed'>{words.in}</span>}\n\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--desktop\">\n                            <p className='text'>\n                              {(addressState.address !== trans.addressTo)\n                                ? <AmountFormat\n                                  type='snt'\n                                  amount={trans.amountFrom}\n                                />\n                                : <AmountFormat\n                                  type='snt'\n                                  amount={trans.amountTo}\n                                />\n                              }\n                            </p>\n                          </div>\n\n                          <div className=\"transaction-cell transaction-cell--sm transaction-cell-mobile\">\n                            <h6 className=\"transaction-cell__name\">{words.fee}:</h6>\n\n                            <span className=\"text\">\n                              <AmountFormat\n                                type='snt'\n                                amount={trans.fee}\n                              /> SNT\n                            </span>\n                          </div>\n                        </div>\n                      )\n                    })\n                  }\n                </div>\n\n                {addressState.last_page !== 1 &&\n                <Pagination\n                  pageCount={addressState.last_page}\n                  onChange={onChangePage}\n                  forcePage={addressState.currentPage - 1}\n                />\n                }\n\n                <NavLink className='button button--home'\n                         to={ROUTES.main}>\n                  <span>{words.backToMain}</span>\n                </NavLink>\n              </>\n            )\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default AddressPage;","import React, {useContext} from 'react';\nimport {NavLink} from \"react-router-dom\";\n\nimport {ROUTES} from \"../../config/constants\";\nimport {MultiLangContext} from \"../../context/MultiLang/MultiLang\";\n\nimport './NotFound.scss';\n\n\nconst NotFound = () => {\n  const {words} = useContext(MultiLangContext);\n\n\n  return (\n    <section className=\"section\">\n      <div className=\"container\">\n        <div className=\"not-found\">\n          <h3 className='title'>\n            {words.noResults}\n          </h3>\n\n          <p className='text not-found__text'>\n            {words.specifyRequest}\n          </p>\n\n          <img className='not-found__image'\n               src=\"/media/images/svg/not-found.svg\"\n               alt=\"\"/>\n\n          <NavLink className='button button--home'\n                   to={ROUTES.main}>\n            <span>{words.backToMain}</span>\n          </NavLink>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default NotFound;","import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nimport { AppState } from \"../../store\";\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\nimport { IInfo } from \"../../interfaces/interfaces\";\nimport { classModifier } from \"../../utils\";\n\nimport './Statistic.scss';\n\n\ninterface IStatisticProps {\n  data: IInfo;\n}\n\n\nconst Statistic = (props: IStatisticProps) => {\n  const {\n    data,\n  } = props;\n\n  const location = useLocation();\n  const {words} = useContext(MultiLangContext);\n\n  const [infoState, setInfoState] = useState({\n    blocks: 0,\n    price: 0,\n    transactions: 0,\n    wallets: 0,\n  });\n\n  useEffect(() => {\n    if (!isNaN(data.price)) {\n      setInfoState(prevState => {\n        return {\n          ...prevState,\n          ...data,\n        }\n      })\n    }\n  }, [data]);\n\n\n  return (\n    <div id='statistic'\n         className={classModifier('statistic',\n           [\n             (location.pathname === '/')\n               ? 'main'\n               : 'all'\n           ],\n         )}>\n      <div className=\"container\">\n        <div className=\"statistic__block\">\n          <div className=\"statistic__items\">\n            <div className=\"statistic-item\">\n              <div className=\"statistic-item__circle\">\n                <img src=\"/media/images/statistic/blocks.svg\" alt=\"\"/>\n              </div>\n\n              <div className=\"statistic-item__info\">\n                <span className=\"statistic-item__value\">\n                  {infoState.blocks}\n                </span>\n\n                <h6 className=\"statistic-item__name\">\n                  {words.blocks}\n                </h6>\n              </div>\n            </div>\n\n            <div className=\"statistic-item\">\n              <div className=\"statistic-item__circle\">\n                <img src=\"/media/images/statistic/trans.svg\" alt=\"\"/>\n              </div>\n\n              <div className=\"statistic-item__info\">\n                <span className=\"statistic-item__value\">\n                  {infoState.transactions}\n                </span>\n\n                <h6 className=\"statistic-item__name\">\n                  {words.transactions}\n                </h6>\n              </div>\n            </div>\n\n            <div className=\"statistic-item\">\n              <div className=\"statistic-item__circle\">\n                <img src=\"/media/images/statistic/addresses.svg\" alt=\"\"/>\n              </div>\n\n              <div className=\"statistic-item__info\">\n                <span className=\"statistic-item__value\">\n                  {infoState.wallets}\n                </span>\n\n                <h6 className=\"statistic-item__name\">\n                  {words.addresses}\n                </h6>\n              </div>\n            </div>\n\n            <div className=\"statistic-item\">\n              <div className=\"statistic-item__circle\">\n                <img src=\"/media/images/statistic/price.svg\" alt=\"\"/>\n              </div>\n\n              <div className=\"statistic-item__info\">\n                <span className=\"statistic-item__value\">\n                  {infoState.price}\n                </span>\n\n                <h6 className=\"statistic-item__name\">\n                  {words.price}\n                </h6>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  data: state.data.list,\n});\n\nexport default connect(mapStateToProps)(Statistic)","import React, { useContext, useEffect, useState } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport API from \"../../api/api\";\nimport { MultiLangContext } from '../../context/MultiLang/MultiLang';\n\nimport './Search.scss';\nimport { classModifier } from \"../../utils\";\nimport { ROUTES } from \"../../config/constants\";\n\n\nconst Search = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const {words} = useContext(MultiLangContext);\n\n  const [searchState, setSearchState] = useState<{\n    value: string;\n  }>({\n    value: '',\n  });\n\n  const searchButton = (inputValue: string) => {\n    if (inputValue.length === 64) {\n      API.getTransaction(inputValue)\n        .then(res => {\n          history.push(ROUTES.setTxRoute(inputValue))\n        })\n        .catch(err => {\n          console.log(err)\n          history.push('/not-found')\n        });\n    } else if (inputValue.length === 40) {\n      API.getAddress(inputValue, 1)\n        .then(res => {\n          history.push(ROUTES.setAddressRoute(inputValue))\n        })\n        .catch(err => {\n          console.log(err)\n          history.push('/not-found')\n        });\n    } else {\n      API.getBlock(inputValue)\n        .then(res => {\n          history.push(ROUTES.setBlockRoute(inputValue))\n        })\n        .catch(err => {\n          console.log(err);\n          history.push('/not-found')\n        });\n    }\n  }\n\n  const handleChange = (e: any) => {\n    const value = e.target.value.split(' ').join('');\n\n    setSearchState(prev => ({\n      ...prev,\n      value: value,\n    }));\n  }\n\n  const handleKeyPress = (e: any) => {\n    if (e.key === 'Enter') {\n      searchButton(searchState.value)\n    }\n  }\n\n  useEffect(() => {\n    if (location.pathname !== '/not-found') {\n      setSearchState(prev => ({\n        ...prev,\n        value: '',\n      }));\n    }\n  }, [location.pathname]);\n\n\n  return (\n    <div className={classModifier('search',\n      [(location.pathname === '/') ? 'main' : 'all'],\n    )}>\n      <div className=\"search__container\">\n        <div className=\"search-input__container\">\n          <input\n            className='search-input'\n            type=\"text\"\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n            value={searchState.value}\n            placeholder={words.searchPlaceholder}\n          />\n\n          <button\n            className='search-input__button'\n            onClick={() => searchButton(searchState.value)}\n          >\n            <span>{words.find}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Search;","import React, { useEffect } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { useDispatch } from 'react-redux';\n\nimport 'moment/locale/ru';\n\nimport './config/api-config';\nimport API from './api/api';\nimport { ROUTES } from \"./config/constants\";\nimport { MultiLangProvider } from \"./context/MultiLang/MultiLang\";\nimport { getInfo } from './ducks/info';\n\nimport Header from \"./containers/Header/Header\";\nimport Footer from \"./containers/Footer/Footer\";\n\nimport MainPage from \"./scenes/MainPage/MainPage\";\nimport BlockPage from \"./scenes/BlockPage/BlockPage\";\nimport TxPage from \"./scenes/TxPage/TxPage\";\nimport AddressPage from \"./scenes/AddressPage/AddressPage\";\nimport NotFound from \"./scenes/NotFound/NotFound\";\nimport Statistic from \"./containers/Statistic/Statistic\";\nimport Search from \"./containers/Search/Search\";\n\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    API.getInfo()\n      .then(async (res) => {\n        dispatch(getInfo(res.data));\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [dispatch]);\n\n\n  return (\n    <MultiLangProvider>\n      <div className=\"root__container\">\n        <div className=\"content\">\n          <Header/>\n          <Statistic/>\n          <Search/>\n\n          <Switch>\n            <Route exact path={ROUTES.main} component={MainPage}/>\n            <Route exact path={ROUTES.block} component={BlockPage}/>\n            <Route exact path={ROUTES.tx} component={TxPage}/>\n            <Route exact path={ROUTES.address} component={AddressPage}/>\n            <Route path={ROUTES.notFound} component={NotFound}/>\n\n            <Redirect to={ROUTES.notFound}/>\n          </Switch>\n        </div>\n        <Footer/>\n      </div>\n    </MultiLangProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport store from './store';\n\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App/>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}